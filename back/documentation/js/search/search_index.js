var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.176,1,2.666]],["body/controllers/AppController.html",[0,1.836,1,4.163,2,1.436,3,0.183,4,0.16,5,0.16,6,3.985,7,0.802,8,1.681,9,2.425,10,6.862,11,5.921,12,2.2,13,0.017,14,4.619,15,5.096,16,1.126,17,4.619,18,1.609,19,2.818,20,4.619,21,1.609,22,0.457,23,0.802,24,3.946,25,3.985,26,0.183,27,0.127,28,1.721,29,1.721,30,1.988,31,1.988,32,2.799,33,2.799,34,2.204,35,1.57,36,1.075,37,4.619,38,4.619,39,1.988,40,4.163,41,2.204,42,4.619,43,0.013,44,0.013]],["title/modules/AppModule.html",[45,1.176,46,2.666]],["body/modules/AppModule.html",[1,3.752,2,1.408,3,0.124,4,0.109,5,0.109,13,0.017,22,0.586,23,0.544,24,3.91,25,2.702,26,0.124,27,0.086,43,0.01,44,0.01,45,1.655,46,5.376,47,1.348,48,1.348,49,1.494,50,1.494,51,1.348,52,2.54,53,1.494,54,2.702,55,2.702,56,2.702,57,4.199,58,4.199,59,4.199,60,4.199,61,4.199,62,4.199,63,4.199,64,4.199,65,2.162,66,1.494,67,1.494,68,3.132,69,2.572,70,3.132,71,1.778,72,1.167,73,3.132,74,3.132,75,3.132,76,3.132,77,3.132,78,3.132,79,3.132,80,1.612,81,3.132,82,2.051,83,3.132,84,1.612,85,3.132,86,2.051,87,3.132,88,2.284,89,3.132,90,2.162,91,3.132,92,3.132,93,3.909,94,2.039,95,3.132,96,2.702,97,3.132,98,3.132,99,0.625,100,2.702,101,3.132,102,3.132,103,3.132,104,3.132,105,2.702,106,2.746,107,2.208,108,3.132,109,3.132,110,3.132,111,1.579,112,3.132,113,1.898]],["title/injectables/AppService.html",[24,2.292,114,0.903]],["body/injectables/AppService.html",[3,0.163,4,0.143,5,0.143,7,0.714,8,1.559,9,2.293,11,5.663,13,0.017,15,4.726,16,1.174,18,1.492,19,2.613,21,1.492,22,0.507,23,0.714,24,3.319,26,0.163,27,0.113,28,1.533,29,1.533,30,1.771,31,1.771,32,2.494,33,2.494,34,1.964,35,1.399,36,0.997,39,2.649,40,3.86,41,1.964,43,0.012,44,0.012,99,0.821,114,1.308,115,1.863,116,3.55,117,6.564,118,1.771,119,4.115,120,7.028,121,4.115,122,1.279,123,1.121,124,1.279,125,4.115,126,4.115,127,5.477,128,1.464,129,3.55,130,4.115,131,4.115,132,4.115,133,4.115,134,4.115,135,4.115,136,4.115,137,2.9,138,4.115,139,2.9,140,2.9,141,2.9,142,2.336,143,4.115,144,4.115,145,3.55,146,4.115,147,4.115,148,4.115]],["title/controllers/AuthController.html",[0,1.176,149,2.666]],["body/controllers/AuthController.html",[0,1.147,2,1.147,3,0.146,4,0.128,5,0.128,7,0.641,8,1.448,9,2.169,12,1.375,13,0.017,16,0.704,18,1.006,21,1.71,22,0.45,23,0.641,26,0.146,27,0.102,28,1.375,29,1.375,34,1.762,35,1.255,36,0.672,39,2.19,41,2.428,43,0.011,44,0.011,99,1.358,106,3.084,113,3.084,122,1.147,123,1.006,124,1.147,141,2.602,142,2.095,149,3.587,150,3.185,151,1.971,152,3.692,153,4.391,154,3.185,155,4.391,156,3.692,157,5.089,158,3.164,159,4.391,160,4.391,161,3.692,162,2.085,163,3.185,164,5.089,165,5.089,166,3.692,167,3.185,168,5.824,169,5.824,170,3.692,171,1.861,172,1.861,173,2.851,174,2.851,175,5.089,176,3.692,177,3.529,178,3.185,179,5.089,180,2.095,181,5.089,182,1.971,183,3.692,184,3.692,185,3.692,186,3.692,187,3.185,188,1.671,189,3.587,190,4.391,191,3.692,192,3.587,193,3.692,194,3.692,195,5.089,196,3.692,197,5.089,198,3.692,199,3.692,200,3.692,201,3.587,202,3.692]],["title/modules/AuthModule.html",[45,1.176,57,2.462]],["body/modules/AuthModule.html",[2,1.657,3,0.157,4,0.137,5,0.137,13,0.017,22,0.585,23,0.686,26,0.157,27,0.109,43,0.012,44,0.012,45,1.875,47,1.701,48,1.701,49,1.886,50,1.886,51,1.701,52,2.879,53,1.886,57,4.7,65,2.544,66,1.886,67,1.886,69,2.244,71,2.244,72,1.473,80,1.897,82,1.79,84,1.897,93,3.411,94,2.573,149,4.252,177,4.21,178,3.411,203,3.411,204,3.411,205,4.21,206,3.953,207,3.953,208,3.053,209,2.111,210,3.656,211,4.252,212,2.111,213,2.244,214,3.053,215,2.786,216,2.786,217,3.411,218,3.758,219,3.953,220,3.053,221,3.053,222,3.053,223,3.053,224,3.411,225,3.953,226,3.953,227,3.053]],["title/injectables/AuthService.html",[114,0.903,177,2.292]],["body/injectables/AuthService.html",[3,0.107,4,0.094,5,0.094,7,0.469,8,1.156,9,2.278,13,0.017,16,0.93,18,1.106,19,1.938,21,1.666,22,0.505,23,0.469,26,0.107,27,0.074,28,1.006,29,1.006,30,1.162,31,1.162,35,1.845,36,0.988,39,2.73,41,2.918,43,0.009,44,0.009,72,1.006,80,2.071,82,2.635,84,2.071,99,0.974,106,1.636,114,0.969,115,1.222,118,1.747,122,1.517,123,1.329,124,1.517,128,0.96,141,3.827,142,3.081,153,3.504,154,3.504,162,2.599,171,1.361,177,2.461,189,3.827,192,3.44,209,1.442,212,1.442,213,1.532,214,2.085,228,2.33,229,4.061,230,1.903,231,4.311,232,4.211,233,3.633,234,3.44,235,3.177,236,2.7,237,2.7,238,4.061,239,2.7,240,2.33,241,1.532,242,2.643,243,3.081,244,2.33,245,1.903,246,1.758,247,2.7,248,2.33,249,2.33,250,2.591,251,4.193,252,4.211,253,2.46,254,3.77,255,6.116,256,4.881,257,2.33,258,4.881,259,3.601,260,6.345,261,3.081,262,2.33,263,2.33,264,1.903,265,2.7,266,2.7,267,2.33,268,0.839,269,1.903,270,1.532,271,2.7,272,2.085,273,2.7,274,2.33,275,1.903,276,1.903,277,2.7,278,2.7]],["title/entities/Classe.html",[86,1.712,279,1.409]],["body/entities/Classe.html",[3,0.157,4,0.137,5,0.137,7,0.686,12,2.406,13,0.017,16,1.231,21,1.759,22,0.466,26,0.157,27,0.109,28,1.473,29,1.473,30,1.701,31,1.701,36,0.97,43,0.012,44,0.012,80,2.568,84,2.471,86,2.414,99,1.289,111,1.993,128,1.406,172,1.993,188,2.414,212,2.111,213,2.244,268,1.875,270,3.665,279,1.986,280,3.411,281,4.204,282,3.927,283,2.573,284,5.332,285,3.953,286,1.897,287,4.252,288,3.953,289,4.252,290,3.953,291,3.411,292,5.332,293,3.953,294,3.471,295,4.6,296,2.786,297,3.758,298,2.786,299,3.231,300,3.411,301,4.6,302,3.411]],["title/controllers/ClasseController.html",[0,1.176,303,2.666]],["body/controllers/ClasseController.html",[0,0.994,2,0.994,3,0.127,4,0.111,5,0.111,7,0.555,8,1.309,12,2.007,13,0.017,16,1.027,18,1.467,21,1.77,22,0.416,23,0.555,26,0.127,27,0.088,28,1.713,29,1.713,30,1.979,31,1.979,32,1.938,33,1.938,34,1.526,35,1.087,36,0.98,43,0.01,44,0.01,86,3.031,99,0.918,122,1.43,123,1.604,124,1.43,151,1.708,158,3.375,162,2.662,172,1.612,180,1.815,182,1.708,253,3.614,268,2.252,303,3.242,304,2.76,305,2.3,306,2.195,307,2.195,308,2.082,309,2.788,310,2.611,311,1.43,312,2.788,313,3.688,314,3.938,315,3.199,316,1.448,317,2.082,318,4.6,319,2.994,320,2.994,321,3.199,322,1.448,323,2.082,324,2.788,325,3.553,326,3.199,327,2.082,328,2.082,329,3.57,330,3.506,331,3.264,332,2.76,333,3.199,334,3.199,335,3.264,336,3.057,337,3.264,338,3.057,339,2.57,340,2.611,341,3.264,342,3.199,343,2.082,344,2.082,345,3.199,346,2.082,347,2.082,348,2.082,349,3.199]],["title/modules/ClasseModule.html",[45,1.176,58,2.462]],["body/modules/ClasseModule.html",[2,1.93,3,0.198,4,0.173,5,0.173,13,0.017,22,0.522,23,0.868,26,0.198,27,0.138,43,0.014,44,0.014,45,2.099,47,2.153,48,2.153,49,2.387,50,2.387,51,2.153,52,3.223,53,2.387,58,4.818,65,2.963,66,2.387,67,2.387,303,4.76,331,4.486,332,4.316,350,4.316,351,4.316,352,5.003,353,5.003]],["title/injectables/ClasseService.html",[114,0.903,331,2.292]],["body/injectables/ClasseService.html",[3,0.181,4,0.158,5,0.158,7,0.792,8,1.668,13,0.017,16,1.234,18,1.924,21,1.763,22,0.353,23,0.792,26,0.181,27,0.126,36,1.178,43,0.013,44,0.013,86,2.931,99,1.17,114,1.399,115,2.066,122,1.822,123,1.596,124,1.822,268,2.123,286,2.572,305,2.667,306,2.796,307,2.796,316,2.653,322,2.653,331,3.552,354,3.937,355,4.564,356,4.564,357,4.564,358,3.674,359,2.765]],["title/classes/CreateClasseDto.html",[27,0.104,360,2.666]],["body/classes/CreateClasseDto.html",[3,0.233,4,0.204,5,0.204,13,0.016,26,0.233,27,0.162,43,0.015,44,0.015,311,1.828,360,4.824,361,5.073,362,4.542]],["title/classes/CreateEleveDto.html",[27,0.104,363,2.666]],["body/classes/CreateEleveDto.html",[3,0.233,4,0.204,5,0.204,13,0.016,26,0.233,27,0.162,43,0.015,44,0.015,311,1.828,363,4.824,364,5.073,365,4.542]],["title/classes/CreateMatiereDto.html",[27,0.104,366,2.666]],["body/classes/CreateMatiereDto.html",[3,0.233,4,0.204,5,0.204,13,0.016,26,0.233,27,0.162,43,0.015,44,0.015,311,1.828,366,4.824,367,5.073,368,4.542]],["title/classes/CreateNoteDto.html",[27,0.104,369,2.292]],["body/classes/CreateNoteDto.html",[3,0.19,4,0.166,5,0.166,7,0.832,13,0.017,16,1.263,21,1.647,26,0.19,27,0.132,43,0.013,44,0.013,90,2.288,99,1.389,155,4.138,188,2.738,270,3.76,281,4.313,286,2.475,311,1.491,369,3.665,370,6.003,371,3.704,372,5.117,373,5.716,374,5.716,375,4.672,376,4.796,377,4.796,378,4.796,379,3.704]],["title/classes/CreateParentDto.html",[27,0.104,380,2.666]],["body/classes/CreateParentDto.html",[3,0.233,4,0.204,5,0.204,13,0.016,26,0.233,27,0.162,43,0.015,44,0.015,311,1.828,380,4.824,381,5.073,382,4.542]],["title/classes/CreateProfesseurDto.html",[27,0.104,383,2.666]],["body/classes/CreateProfesseurDto.html",[3,0.233,4,0.204,5,0.204,13,0.016,26,0.233,27,0.162,43,0.015,44,0.015,311,1.828,383,4.824,384,5.073,385,4.542]],["title/classes/CreateUtilisateurDto.html",[27,0.104,386,2.292]],["body/classes/CreateUtilisateurDto.html",[3,0.233,4,0.204,5,0.204,13,0.016,26,0.233,27,0.162,43,0.015,44,0.015,311,1.828,386,4.148,387,5.073,388,4.542]],["title/entities/Eleve.html",[80,1.345,279,1.409]],["body/entities/Eleve.html",[3,0.147,4,0.128,5,0.128,7,0.642,12,2.172,13,0.017,16,1.112,22,0.509,26,0.147,27,0.102,28,1.379,29,1.379,36,1.061,43,0.011,44,0.011,80,1.813,82,3.267,86,3.267,90,3.393,99,1.164,111,1.865,123,1.388,128,1.316,188,2.308,214,2.858,250,2.432,276,2.608,279,1.899,283,2.409,294,3.318,389,3.193,390,5.031,391,5.831,392,4.429,393,3.937,394,3.701,395,4.398,396,3.701,397,3.701,398,3.937,399,3.701,400,4.398,401,3.701,402,4.504,403,4.504,404,2.858,405,2.608,406,3.193,407,1.593,408,3.701,409,3.701,410,3.701,411,5.098,412,3.701,413,3.701,414,5.098,415,3.701,416,3.193,417,4.398,418,3.193]],["title/controllers/EleveController.html",[0,1.176,419,2.666]],["body/controllers/EleveController.html",[0,0.812,2,0.812,3,0.103,4,0.09,5,0.09,7,0.453,8,1.127,9,2.249,12,2.137,13,0.017,16,1.094,18,1.563,21,1.645,22,0.37,23,0.453,26,0.103,27,0.072,28,0.973,29,0.973,32,1.582,33,1.582,34,1.246,35,0.888,36,1.044,43,0.009,44,0.009,80,0.929,82,2.165,99,0.955,122,1.487,123,1.645,124,1.487,151,1.394,158,3.456,162,2.764,171,1.996,180,1.482,182,1.394,253,2.691,259,2.247,261,2.247,268,2.208,286,1.701,305,2.084,306,1.889,307,1.889,308,1.7,309,3.235,310,3.03,312,3.235,313,3.829,314,4.089,316,1.182,317,1.7,319,2.577,320,2.577,322,1.182,323,1.7,324,2.4,327,1.7,328,1.7,329,3.659,330,3.474,335,3.477,336,3.256,337,3.477,338,3.256,339,2.738,340,2.715,341,3.235,343,1.7,344,1.7,346,1.7,347,1.7,348,1.7,398,3.058,419,2.791,420,2.253,421,4.605,422,3.416,423,2.017,424,3.694,425,3.058,426,2.611,427,4.605,428,2.611,429,3.416,430,2.611,431,2.253,432,2.611,433,2.577,434,2.611,435,3.416,436,3.416,437,2.611,438,2.791,439,3.416,440,2.611,441,2.554,442,2.253,443,2.253,444,2.611,445,2.611,446,2.611,447,2.611,448,2.611,449,4.95,450,2.611,451,2.611,452,2.017,453,1.7,454,2.017,455,1.84,456,2.611]],["title/modules/EleveModule.html",[45,1.176,59,2.462]],["body/modules/EleveModule.html",[2,1.884,3,0.191,4,0.167,5,0.167,13,0.017,22,0.555,23,0.835,26,0.191,27,0.132,43,0.013,44,0.013,45,2.062,47,2.07,48,2.07,49,2.296,50,2.296,51,2.07,52,3.166,53,2.296,59,4.771,65,2.892,66,2.296,67,2.296,69,2.731,71,2.731,72,1.792,80,1.711,419,4.677,441,3.914,442,4.151,457,4.151,458,4.151,459,4.811,460,4.811,461,3.391,462,4.811]],["title/guards/EleveMoyenneGuard.html",[463,2.666,464,2.666]],["body/guards/EleveMoyenneGuard.html",[3,0.107,4,0.094,5,0.094,7,0.469,8,1.157,9,2.28,13,0.017,16,1.036,18,1.331,19,2.593,22,0.473,23,0.469,26,0.107,27,0.074,28,2.024,29,2.024,30,2.338,31,2.338,35,1.382,36,1.189,39,2.876,40,2.866,41,1.94,43,0.009,44,0.009,72,1.008,80,0.962,99,1.085,106,2.961,113,2.464,114,0.971,118,1.75,122,1.689,123,1.48,124,1.689,128,0.962,137,1.907,139,1.907,140,1.907,171,1.363,172,2.05,201,1.907,209,1.444,230,1.907,231,4.314,233,2.901,235,3.18,241,1.535,243,2.308,246,1.761,268,1.902,269,1.907,275,2.866,286,2.491,398,4.5,438,3.83,461,1.907,464,2.866,465,1.907,466,4.106,467,4.5,468,2.334,469,3.83,470,4.067,471,3.508,472,2.705,473,2.866,474,3.83,475,2.705,476,1.907,477,3.508,478,4.216,479,4.067,480,2.705,481,3.508,482,2.705,483,2.089,484,2.089,485,2.089,486,2.089,487,3.141,488,2.089,489,2.089,490,3.83,491,2.089,492,2.089,493,2.089,494,2.866,495,2.334,496,2.089,497,2.334,498,2.334,499,2.334,500,3.774,501,3.508,502,2.705,503,2.705,504,2.705,505,3.508,506,2.705,507,2.334,508,2.334,509,2.089,510,2.334]],["title/guards/EleveNoteGuard.html",[463,2.666,511,2.666]],["body/guards/EleveNoteGuard.html",[3,0.099,4,0.087,5,0.087,7,0.435,8,1.092,9,2.214,13,0.017,16,0.996,18,1.27,19,2.494,22,0.478,23,0.435,26,0.099,27,0.069,28,2.099,29,2.099,30,2.424,31,2.424,32,1.519,33,1.519,35,1.585,36,1.19,39,2.815,40,1.767,41,1.832,43,0.008,44,0.008,72,0.934,80,1.365,84,0.892,99,1.043,106,3.168,113,2.326,114,0.916,118,1.652,122,1.625,123,1.424,124,1.625,128,0.892,137,1.767,139,1.767,140,1.767,171,1.264,172,1.935,201,1.767,209,1.339,212,1.339,230,1.767,231,4.189,233,3.303,234,3.288,235,3.036,241,1.423,243,2.647,245,1.767,246,1.632,268,1.45,269,1.767,275,3.288,282,1.632,286,2.45,438,3.684,461,1.767,465,1.767,466,3.971,469,3.684,471,3.312,473,2.706,474,3.684,476,1.767,477,3.312,478,4.024,481,3.312,483,1.936,484,1.936,485,1.936,486,1.936,487,2.965,488,1.936,489,1.936,490,3.684,491,1.936,492,2.965,493,1.936,494,3.971,495,2.163,496,1.936,497,2.163,498,2.163,499,3.312,500,1.936,501,2.163,505,2.163,507,2.163,508,2.163,509,1.936,510,2.163,511,2.706,512,4.352,513,2.163,514,3.839,515,2.507,516,2.507,517,3.839,518,3.684,519,2.507,520,2.507,521,2.507,522,1.936,523,1.936,524,2.507,525,2.163,526,2.163,527,2.163,528,2.163,529,2.163,530,2.163,531,2.163,532,2.163,533,2.163,534,2.163,535,3.839,536,2.507,537,2.507,538,2.507]],["title/injectables/EleveService.html",[114,0.903,441,2.02]],["body/injectables/EleveService.html",[3,0.125,4,0.109,5,0.109,7,0.546,8,1.293,9,2.589,13,0.017,16,1.27,18,1.814,19,2.789,21,1.689,22,0.479,23,0.546,26,0.125,27,0.087,35,1.069,36,1.128,39,2.515,41,2.789,43,0.01,44,0.01,72,1.172,80,2.079,99,1.237,107,2.217,114,1.085,115,1.424,118,1.956,122,1.927,123,1.689,124,1.927,128,1.119,162,1.288,233,3.121,235,2.958,241,1.785,242,2.958,243,1.785,246,2.047,249,2.713,259,1.785,261,1.785,263,2.713,268,1.817,281,2.958,286,2.472,305,2.282,306,2.168,307,2.168,316,2.057,322,2.057,339,1.501,358,2.579,359,1.906,421,5.043,422,3.921,431,3.921,438,3.761,441,2.426,461,2.217,539,2.713,540,3.51,541,3.145,542,3.145,543,3.145,544,3.145,545,3.145,546,3.145,547,3.51,548,3.145,549,3.145,550,3.145,551,3.145,552,3.145,553,2.713,554,2.713,555,3.145,556,2.713,557,2.713,558,4.514,559,3.145,560,3.145,561,2.217,562,2.429,563,2.217,564,2.429,565,2.047]],["title/injectables/JwtAuthGuard.html",[114,0.903,205,2.292]],["body/injectables/JwtAuthGuard.html",[3,0.199,4,0.174,5,0.174,7,0.871,8,1.771,13,0.017,16,0.957,18,1.367,22,0.481,23,0.871,26,0.199,27,0.138,36,0.913,43,0.014,44,0.014,94,3.267,99,1.002,114,1.486,115,2.272,122,1.56,123,1.367,124,1.56,205,3.771,215,4.386,216,4.386,407,2.678,469,4.386,473,4.386,474,4.984,476,3.538,566,4.33,567,6.223,568,5.019,569,5.019,570,5.019]],["title/classes/JwtStrategy.html",[27,0.104,218,2.666]],["body/classes/JwtStrategy.html",[3,0.184,4,0.161,5,0.161,7,0.807,8,1.687,9,2.432,13,0.017,16,1.13,18,1.266,22,0.505,26,0.184,27,0.128,36,0.846,43,0.013,44,0.013,94,3.025,99,0.928,105,4.01,114,1.11,118,2.81,122,1.445,123,1.266,124,1.445,171,2.343,210,3.957,211,3.276,218,4.179,227,5.043,267,4.01,311,1.445,407,2.552,571,4.01,572,5.93,573,5.93,574,4.648,575,5.93,576,4.648,577,4.648,578,4.648,579,4.01,580,4.648,581,4.648,582,4.648,583,4.648,584,4.648,585,4.648,586,4.648]],["title/entities/Matiere.html",[88,1.907,279,1.409]],["body/entities/Matiere.html",[3,0.165,4,0.144,5,0.144,7,0.722,12,2.306,13,0.017,16,1.18,21,1.795,22,0.426,26,0.165,27,0.115,36,1.126,43,0.012,44,0.012,84,2.695,88,2.781,99,1.235,111,2.097,128,1.48,188,2.498,212,2.221,268,2.049,270,3.742,279,2.055,283,2.708,286,2.345,287,4.363,289,4.363,294,3.591,296,2.932,297,3.889,298,2.932,299,3.751,587,3.589,588,4.161,589,4.161,590,5.517,591,4.161,592,4.161,593,5.517,594,4.161,595,4.161,596,5.517,597,4.161]],["title/controllers/MatiereController.html",[0,1.176,598,2.666]],["body/controllers/MatiereController.html",[0,0.887,2,0.887,3,0.113,4,0.099,5,0.099,7,0.495,8,1.204,12,1.879,13,0.017,16,0.962,18,1.374,21,1.7,22,0.39,23,0.495,26,0.113,27,0.079,34,1.362,35,0.97,36,0.918,43,0.009,44,0.009,88,1.438,99,0.845,122,1.315,123,1.52,124,1.315,151,1.524,158,3.477,162,2.719,180,1.62,182,1.524,253,3.695,264,2.983,268,2.202,305,2.178,306,2.019,307,2.019,308,1.857,309,2.565,310,2.402,312,2.565,313,3.543,314,3.381,316,1.292,317,1.857,319,2.755,320,2.755,322,1.292,323,1.857,324,3.381,325,4.31,327,1.857,328,1.857,329,3.381,330,3.283,335,3.783,336,3.543,337,3.783,338,3.543,339,2.979,340,2.402,341,3.057,343,1.857,344,1.857,346,1.857,347,2.755,348,1.857,598,2.983,599,2.462,600,3.651,601,2.853,602,3.651,603,5.091,604,3.651,605,4.821,606,5.142,607,2.853,608,2.853,609,4.352,610,3.651,611,2.853,612,4.352,613,3.651,614,2.863,615,2.462,616,2.853,617,2.853,618,2.853,619,2.853,620,2.462,621,2.462,622,2.853]],["title/modules/MatiereModule.html",[45,1.176,60,2.462]],["body/modules/MatiereModule.html",[2,1.93,3,0.198,4,0.173,5,0.173,13,0.017,22,0.522,23,0.868,26,0.198,27,0.138,43,0.014,44,0.014,45,2.099,47,2.153,48,2.153,49,2.387,50,2.387,51,2.153,52,3.223,53,2.387,60,4.818,65,2.963,66,2.387,67,2.387,598,4.76,614,4.201,615,4.316,623,4.316,624,4.316,625,5.003,626,5.003]],["title/injectables/MatiereService.html",[114,0.903,614,2.147]],["body/injectables/MatiereService.html",[3,0.181,4,0.158,5,0.158,7,0.792,8,1.668,13,0.017,16,1.234,18,1.924,21,1.763,22,0.353,23,0.792,26,0.181,27,0.126,36,1.178,43,0.013,44,0.013,88,3.263,99,1.17,114,1.399,115,2.066,122,1.822,123,1.596,124,1.822,268,2.123,286,2.572,305,2.667,306,2.796,307,2.796,316,2.653,322,2.653,358,3.674,359,2.765,614,3.326,627,3.937,628,4.564,629,4.564,630,4.564]],["title/entities/Note.html",[90,1.805,279,1.409]],["body/entities/Note.html",[3,0.129,4,0.113,5,0.113,7,0.566,12,2.436,13,0.017,16,1.247,21,1.619,22,0.421,26,0.129,27,0.09,28,1.737,29,1.737,30,1.403,31,1.403,36,1.144,43,0.01,44,0.01,80,2.45,84,2.45,90,3.121,99,1.305,111,1.644,123,1.27,128,1.16,172,1.644,188,2.111,212,1.741,213,1.851,268,1.692,270,3.373,276,2.298,279,1.737,286,2.53,287,3.838,289,4.746,296,2.298,297,3.287,298,2.298,299,3.3,372,4.59,379,3.602,393,3.602,402,4.206,403,4.206,631,2.813,632,5.127,633,5.127,634,3.261,635,3.261,636,3.261,637,3.261,638,3.261,639,3.287,640,3.261,641,3.261,642,3.261,643,3.261,644,3.261,645,3.261,646,4.664,647,3.261,648,3.261,649,4.664,650,3.261,651,3.261,652,4.664,653,3.261,654,3.261,655,4.664,656,3.261]],["title/controllers/NoteController.html",[0,1.176,657,2.666]],["body/controllers/NoteController.html",[0,0.453,2,0.453,3,0.058,4,0.05,5,0.05,7,0.253,8,0.704,12,2.016,13,0.017,16,1.032,18,1.474,21,1.705,22,0.418,23,0.253,26,0.058,27,0.04,28,0.543,29,0.543,30,0.627,31,0.627,34,0.696,35,0.495,36,0.985,43,0.005,44,0.005,84,1.147,86,1.927,90,2.883,99,1.229,122,1.614,123,1.794,124,1.614,151,0.778,158,3.606,162,2.879,163,1.258,172,0.735,173,1.126,174,2.491,180,0.827,182,0.778,187,1.258,205,0.883,215,1.027,216,1.027,217,1.258,253,3.543,268,2.256,286,2.387,305,1.484,306,1.181,307,1.181,309,1.5,310,1.405,312,1.5,313,3.698,314,3.902,316,0.66,317,0.949,319,1.611,320,1.611,322,0.66,323,0.949,324,2.804,325,1.911,327,0.949,328,0.949,329,3.279,330,3.754,335,3.394,336,3.179,337,3.394,338,3.179,339,2.673,340,2.416,341,3.146,343,0.949,344,0.949,346,0.949,347,0.949,348,0.949,369,2.804,392,2.679,424,2.491,429,1.258,433,3.012,443,2.135,449,3.673,453,0.949,455,1.027,464,1.027,466,1.744,467,1.126,494,3.659,511,1.027,512,1.126,518,4.478,602,1.258,603,1.027,657,1.744,658,1.258,659,2.782,660,1.625,661,2.475,662,2.135,663,2.782,664,2.135,665,1.258,666,1.458,667,3.673,668,1.458,669,2.135,670,3.992,671,2.135,672,2.475,673,1.458,674,1.258,675,1.458,676,1.458,677,2.475,678,1.458,679,2.475,680,3.225,681,1.258,682,2.135,683,2.475,684,1.458,685,1.458,686,3.801,687,1.458,688,1.458,689,1.458,690,1.458,691,4.627,692,1.458,693,1.258,694,1.458,695,1.458,696,1.258,697,3.992,698,1.458,699,1.458,700,1.458,701,1.458,702,1.126,703,3.379,704,1.458,705,3.225,706,2.782,707,1.458,708,1.458,709,1.458,710,2.475,711,2.475,712,2.475,713,2.475,714,1.954,715,1.258,716,1.126,717,1.911,718,1.126,719,1.027,720,1.458,721,1.458,722,1.458,723,1.458,724,1.458,725,1.458,726,2.782,727,3.225,728,1.458,729,1.258,730,1.458,731,1.458,732,2.475,733,1.458,734,1.458,735,1.458,736,1.458,737,1.458,738,1.458,739,1.458,740,1.458,741,1.458,742,1.458,743,1.458,744,1.458,745,1.458,746,1.458,747,1.458,748,1.458,749,1.258,750,1.458,751,1.458,752,1.458,753,1.458,754,1.458,755,1.458]],["title/modules/NoteModule.html",[45,1.176,61,2.462]],["body/modules/NoteModule.html",[2,1.612,3,0.15,4,0.131,5,0.131,13,0.017,22,0.585,23,0.658,26,0.15,27,0.104,43,0.011,44,0.011,45,1.836,47,1.633,48,1.633,49,1.81,50,1.81,51,1.633,52,2.819,53,1.81,61,4.86,65,2.474,66,1.81,67,1.81,69,2.153,71,2.153,72,1.413,80,1.844,84,1.844,86,2.347,88,2.614,90,1.81,208,2.93,209,2.026,210,3.142,211,2.674,212,2.026,213,2.153,220,2.93,221,2.93,222,2.93,223,2.93,405,2.674,441,3.664,614,3.895,657,4.164,714,4.159,715,3.273,756,3.273,757,3.273,758,3.664,759,3.794,760,3.794,761,3.273,762,2.93,763,3.794,764,3.273,765,3.273,766,3.273,767,3.794]],["title/injectables/NoteService.html",[114,0.903,714,2.292]],["body/injectables/NoteService.html",[3,0.028,4,0.024,5,0.024,7,0.122,8,0.368,9,1.915,13,0.017,16,0.792,18,1.132,19,2.068,21,1.37,22,0.335,23,0.122,26,0.028,27,0.019,28,1.098,29,1.098,30,1.268,31,1.268,35,1.103,36,0.818,39,2.621,41,2.401,43,0.003,44,0.003,72,0.261,80,1.479,84,1.931,86,2.327,88,1.997,90,2.856,99,0.791,113,0.425,114,0.309,115,0.318,118,0.556,122,1.231,123,1.079,124,1.231,128,0.25,141,1.574,142,1.483,145,0.605,159,4.951,160,1.115,162,2.675,167,0.605,172,1.486,212,0.375,213,0.398,233,2.623,234,1.267,235,1.17,240,1.115,241,0.398,243,2.249,245,0.495,246,0.457,251,1.725,252,1.551,253,3.291,254,2.71,264,0.495,268,1.398,270,2.127,272,0.542,281,0.841,282,1.701,286,1.702,305,0.872,306,0.617,307,0.617,310,3.331,311,0.218,313,2.127,316,0.585,322,0.585,324,0.783,336,1.841,339,2.453,340,1.267,358,1.02,359,0.425,369,1.786,372,1.388,375,4.32,379,1.388,390,0.605,392,4.179,395,1.115,400,0.605,405,0.495,424,4.124,427,3.027,433,2.579,435,0.605,436,0.605,441,1.732,453,3.025,490,0.495,494,2.792,500,0.542,518,3.373,522,1.725,523,1.725,525,1.551,526,1.551,527,0.605,528,0.605,529,2.254,530,0.605,531,1.115,532,0.605,533,1.551,534,1.115,553,0.605,554,0.605,556,1.551,557,0.605,561,1.267,563,0.911,565,0.457,600,1.115,603,2.792,605,2.277,606,1.115,632,0.605,633,0.605,639,0.911,659,1.551,660,0.652,662,1.115,663,1.551,664,1.115,665,0.605,667,2.254,670,1.927,671,3.418,674,1.115,681,1.115,682,4.009,693,1.115,696,0.605,697,3.027,702,0.998,703,2.112,706,0.605,714,0.783,716,0.542,717,0.998,718,0.542,729,1.115,749,0.605,758,1.732,761,0.605,762,0.542,764,0.605,765,0.605,768,0.605,769,1.293,770,1.293,771,0.702,772,1.797,773,1.797,774,0.702,775,1.293,776,1.293,777,0.702,778,0.702,779,0.702,780,0.702,781,0.702,782,0.702,783,1.293,784,0.702,785,0.702,786,0.702,787,0.702,788,1.797,789,0.702,790,0.702,791,0.702,792,0.702,793,3.747,794,2.613,795,0.702,796,1.797,797,1.797,798,0.702,799,3.509,800,0.702,801,0.702,802,3.509,803,4.498,804,4.647,805,1.293,806,1.797,807,0.702,808,0.702,809,0.702,810,1.293,811,0.702,812,1.797,813,1.927,814,1.797,815,1.797,816,1.797,817,1.293,818,0.702,819,2.233,820,1.293,821,0.702,822,0.702,823,0.702,824,0.605,825,1.293,826,0.702,827,0.702,828,0.702,829,0.702,830,0.702,831,3.509,832,2.948,833,1.293,834,3.244,835,0.702,836,2.613,837,0.702,838,2.613,839,0.702,840,5.031,841,0.702,842,0.702,843,2.233,844,2.233,845,1.797,846,1.797,847,1.293,848,0.702,849,0.702,850,1.293,851,1.797,852,1.293,853,2.233,854,1.797,855,1.797,856,0.702,857,4.157,858,2.613,859,0.702,860,0.702,861,0.702,862,2.543,863,2.233,864,1.293,865,0.702,866,0.702,867,0.702,868,1.797,869,1.293,870,1.293,871,1.293,872,1.293,873,0.702,874,0.702,875,0.702,876,0.702,877,1.293,878,1.551,879,1.293,880,1.293,881,0.702,882,0.702,883,1.293,884,0.702,885,1.293,886,1.293,887,0.702,888,0.702,889,2.613,890,0.702,891,0.702,892,0.702,893,0.702,894,0.702,895,2.233,896,1.293,897,1.293,898,2.948,899,0.702,900,0.702,901,0.702,902,1.293,903,1.293,904,1.293,905,0.702,906,1.797,907,2.233,908,1.293,909,1.797,910,1.293,911,1.293,912,0.702,913,0.702,914,1.797,915,0.702,916,1.797,917,1.797,918,1.797,919,1.293,920,1.293,921,2.613,922,0.702,923,0.702,924,0.702,925,0.702,926,0.702,927,0.702,928,0.702,929,0.702,930,0.702,931,0.702,932,1.293,933,1.797,934,0.702,935,1.797,936,0.702,937,0.702,938,0.702,939,0.702,940,1.551,941,0.702,942,0.702,943,0.702,944,0.702,945,1.115,946,0.702,947,0.702,948,2.948,949,0.702,950,2.948,951,2.948,952,2.233,953,2.233,954,0.702,955,2.233,956,1.797,957,1.293,958,1.293,959,1.293,960,1.293,961,1.293,962,0.702,963,1.293,964,0.702,965,1.797,966,1.293,967,0.702,968,1.293,969,1.293,970,1.293,971,0.702,972,0.702,973,0.702,974,0.702,975,0.702,976,0.702,977,0.702,978,0.702,979,1.293,980,1.293,981,1.293,982,1.293,983,0.702,984,1.293,985,2.613,986,0.702,987,2.233,988,2.233,989,1.293,990,1.293,991,0.702,992,0.702,993,1.293,994,0.702,995,1.293,996,0.702,997,0.702,998,0.702,999,1.797,1000,0.702,1001,1.293,1002,0.702,1003,0.702,1004,0.702,1005,1.293,1006,1.293,1007,0.702,1008,1.293,1009,0.702,1010,0.702,1011,0.702,1012,0.702,1013,0.702,1014,0.605,1015,0.702,1016,0.702,1017,0.702,1018,0.702,1019,0.605]],["title/entities/Parent.html",[82,1.712,279,1.409]],["body/entities/Parent.html",[3,0.191,4,0.167,5,0.167,7,0.835,12,1.792,13,0.017,16,0.917,22,0.513,26,0.191,27,0.132,36,0.875,43,0.013,44,0.013,80,2.677,82,2.744,99,0.96,111,2.425,128,1.711,188,2.744,213,2.731,250,2.892,279,2.258,281,4.534,283,3.131,294,3.945,299,2.916,300,4.151,301,5.229,302,4.151,404,3.716,407,2.07,1020,4.151,1021,6.061,1022,4.811]],["title/controllers/ParentController.html",[0,1.176,1023,2.666]],["body/controllers/ParentController.html",[0,1.262,2,1.262,3,0.161,4,0.141,5,0.141,7,0.705,8,1.545,9,2.278,12,2.022,13,0.017,16,1.035,18,1.478,22,0.473,23,0.705,26,0.161,27,0.112,34,1.937,35,1.38,36,0.988,43,0.012,44,0.012,82,2.768,151,2.168,158,2.736,162,2.223,171,2.046,180,2.304,182,2.168,253,2.046,259,3.081,261,3.081,305,2.549,308,2.642,309,3.289,310,3.081,312,3.289,313,3.705,314,3.956,329,3.706,335,3.289,336,3.081,337,3.289,338,3.081,339,2.59,340,2.304,341,2.46,423,3.135,425,4.192,433,3.533,452,3.135,453,2.642,454,3.135,455,2.861,1023,3.826,1024,3.503,1025,5.632,1026,4.06,1027,4.683,1028,4.06,1029,3.706,1030,3.503,1031,4.06,1032,4.06,1033,4.06,1034,4.06]],["title/modules/ParentModule.html",[45,1.176,62,2.462]],["body/modules/ParentModule.html",[2,1.884,3,0.191,4,0.167,5,0.167,13,0.017,22,0.555,23,0.835,26,0.191,27,0.132,43,0.013,44,0.013,45,2.062,47,2.07,48,2.07,49,2.296,50,2.296,51,2.07,52,3.166,53,2.296,62,4.771,65,2.892,66,2.296,67,2.296,69,2.731,71,2.731,72,1.792,82,2.178,224,4.151,1023,4.677,1029,4.442,1030,4.151,1035,4.151,1036,4.151,1037,4.811,1038,4.811,1039,4.151]],["title/injectables/ParentService.html",[114,0.903,1029,2.292]],["body/injectables/ParentService.html",[3,0.152,4,0.133,5,0.133,7,0.667,8,1.488,9,2.566,13,0.017,16,1.217,18,1.738,19,2.496,21,1.738,22,0.516,23,0.667,26,0.152,27,0.106,35,1.306,36,0.952,39,2.747,41,3.046,43,0.011,44,0.011,72,1.431,82,2.692,99,1.044,107,2.708,114,1.249,115,1.739,118,2.251,122,1.626,123,1.425,124,1.626,128,1.367,162,1.574,232,4.512,233,3.408,241,2.181,242,3.404,243,2.181,244,3.315,257,3.315,259,2.181,261,2.181,305,2.492,339,1.833,358,2.181,540,4.04,547,4.04,558,4.93,561,2.708,562,2.968,563,2.708,564,2.968,565,2.501,1025,5.507,1027,4.512,1029,3.17,1039,3.315,1040,3.315,1041,3.842,1042,3.842,1043,3.842,1044,3.842,1045,3.842,1046,3.842,1047,3.842,1048,3.842]],["title/entities/Professeur.html",[84,1.345,279,1.409]],["body/entities/Professeur.html",[3,0.14,4,0.123,5,0.123,7,0.615,12,2.123,13,0.017,16,1.086,22,0.502,26,0.14,27,0.098,28,2.297,29,2.297,30,2.654,31,2.654,36,1.037,43,0.011,44,0.011,84,1.76,86,3.185,88,3.546,90,3.357,99,1.137,111,1.786,123,0.965,128,1.261,172,1.786,188,2.24,250,2.361,276,4.017,279,1.843,283,2.307,291,3.058,294,3.22,295,4.268,299,3.454,311,1.917,392,4.347,393,2.737,402,3.821,403,3.821,404,2.737,405,2.498,406,3.058,407,1.525,416,3.058,417,4.268,418,3.058,762,2.737,862,4.268,1014,4.268,1049,3.058,1050,6.168,1051,3.544,1052,3.544,1053,3.544,1054,3.544,1055,3.544,1056,4.947,1057,3.544,1058,3.544,1059,3.544,1060,4.947,1061,3.544,1062,3.544,1063,4.947,1064,3.544]],["title/controllers/ProfesseurController.html",[0,1.176,1065,2.666]],["body/controllers/ProfesseurController.html",[0,0.733,2,0.733,3,0.093,4,0.082,5,0.082,7,0.409,8,1.042,9,1.672,12,2.041,13,0.017,16,1.044,18,1.492,21,1.579,22,0.347,23,0.409,26,0.093,27,0.065,34,1.125,35,0.801,36,0.997,43,0.008,44,0.008,84,2.592,99,0.896,122,1.395,123,1.579,124,1.395,151,1.259,158,3.508,162,2.375,171,1.189,180,1.338,182,1.259,251,4.231,253,3.05,259,2.078,261,2.078,264,2.581,268,2.204,282,2.383,286,1.597,305,1.976,306,1.747,307,1.747,308,1.535,309,2.219,310,2.078,312,2.219,313,3.726,314,3.79,316,1.068,317,1.535,319,2.383,320,2.383,322,1.068,323,1.535,324,3.067,327,1.535,328,1.535,329,3.514,330,3.294,335,3.79,336,3.55,337,3.79,338,3.55,339,2.984,340,2.548,341,3.067,343,1.535,344,1.535,346,1.535,347,2.383,348,1.535,423,1.821,425,2.828,433,4.419,439,4.366,452,1.821,453,3.938,454,1.821,455,1.662,603,2.581,604,3.159,605,4.478,609,3.873,610,3.159,612,3.873,613,3.159,620,2.034,621,2.034,639,3.567,669,3.873,726,2.034,758,2.397,1065,2.581,1066,2.034,1067,4.366,1068,3.159,1069,2.358,1070,2.358,1071,2.034,1072,2.358,1073,3.662,1074,2.358,1075,2.358,1076,2.358,1077,2.358,1078,2.034,1079,2.358,1080,2.358,1081,2.358,1082,2.358,1083,2.358,1084,2.358,1085,2.358,1086,2.358]],["title/guards/ProfesseurGuard.html",[463,2.666,719,2.666]],["body/guards/ProfesseurGuard.html",[3,0.157,4,0.137,5,0.137,7,0.686,8,1.517,9,2.247,13,0.017,16,1.016,18,1.077,19,2.544,22,0.412,23,0.686,26,0.157,27,0.109,28,1.986,29,1.986,30,2.294,31,2.294,32,2.396,33,2.396,34,1.886,35,1.344,36,1.175,39,2.902,43,0.012,44,0.012,99,1.064,106,3.231,113,2.396,114,1.273,118,1.701,122,1.657,123,1.452,124,1.657,137,2.786,139,2.786,140,2.786,201,2.786,209,2.111,230,2.786,231,4.897,269,2.786,275,2.786,465,2.786,469,4.552,473,3.758,474,4.552,476,2.786,484,3.053,485,3.053,486,3.053,487,4.118,488,3.053,489,3.053,490,4.252,491,3.053,492,4.118,493,3.053,509,3.053,518,3.758,719,3.758,1087,3.411,1088,3.953,1089,3.953,1090,3.953]],["title/modules/ProfesseurModule.html",[45,1.176,63,2.462]],["body/modules/ProfesseurModule.html",[2,1.807,3,0.179,4,0.156,5,0.156,13,0.017,22,0.567,23,0.783,26,0.179,27,0.124,43,0.013,44,0.013,45,2.001,47,1.94,48,1.94,49,2.151,50,2.151,51,1.94,52,3.071,53,2.151,63,4.691,65,2.775,66,2.151,67,2.151,69,2.559,71,2.559,72,1.68,84,1.604,208,3.482,209,2.407,210,3.524,211,3.178,220,3.482,221,3.482,222,3.482,223,3.482,758,3.848,766,3.89,1065,4.537,1078,3.89,1091,4.509,1092,4.509,1093,4.509,1094,4.509,1095,3.89,1096,4.509]],["title/injectables/ProfesseurService.html",[114,0.903,758,2.02]],["body/injectables/ProfesseurService.html",[3,0.119,4,0.104,5,0.104,7,0.522,8,1.252,9,2.667,13,0.017,16,1.252,18,1.733,19,2.099,21,1.79,22,0.471,23,0.522,26,0.119,27,0.083,35,1.022,36,1.108,39,2.827,41,3.035,43,0.01,44,0.01,72,1.12,84,2.263,99,1.215,107,2.119,114,1.05,115,1.361,118,1.893,122,1.893,123,1.659,124,1.893,128,1.07,162,1.232,171,2.217,233,3.056,234,3.1,241,1.707,242,2.863,243,1.707,245,2.119,248,2.594,253,1.516,259,1.707,261,1.707,262,2.594,268,2.042,282,2.863,286,2.263,305,2.234,306,2.099,307,2.099,316,1.991,322,1.991,339,1.435,358,1.707,359,1.822,522,2.323,523,2.323,540,3.397,547,3.397,558,4.42,561,2.119,562,2.323,563,2.119,564,2.323,565,2.863,639,3.1,758,2.349,813,2.594,824,2.594,878,2.594,940,2.594,1067,4.937,1068,3.795,1071,3.795,1095,2.594,1097,2.594,1098,3.007,1099,3.007,1100,3.007,1101,3.007,1102,3.007,1103,3.007,1104,3.007,1105,3.007,1106,4.399,1107,3.007,1108,4.399,1109,3.007,1110,3.007,1111,3.007,1112,3.007,1113,3.007,1114,3.007]],["title/classes/UpdateClasseDto.html",[27,0.104,1115,2.921]],["body/classes/UpdateClasseDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,360,3.901,362,4.275,407,2.842,660,2.79,1115,5.101,1116,4.775,1117,6.605,1118,3.142,1119,2.955,1120,2.955,1121,5.535]],["title/classes/UpdateEleveDto.html",[27,0.104,1122,2.921]],["body/classes/UpdateEleveDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,363,3.901,365,4.275,407,2.842,660,2.79,1118,3.142,1119,2.955,1120,2.955,1122,5.101,1123,4.775,1124,6.605,1125,5.535]],["title/classes/UpdateMatiereDto.html",[27,0.104,1126,2.921]],["body/classes/UpdateMatiereDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,366,3.901,368,4.275,407,2.842,660,2.79,1118,3.142,1119,2.955,1120,2.955,1126,5.101,1127,4.775,1128,6.605,1129,5.535]],["title/classes/UpdateNoteDto.html",[27,0.104,703,2.462]],["body/classes/UpdateNoteDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,369,3.354,371,4.275,407,2.842,660,2.79,703,4.299,717,4.275,1118,3.142,1119,2.955,1120,2.955,1130,4.775,1131,6.605]],["title/classes/UpdateParentDto.html",[27,0.104,1132,2.921]],["body/classes/UpdateParentDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,380,3.901,382,4.275,407,2.842,660,2.79,1118,3.142,1119,2.955,1120,2.955,1132,5.101,1133,4.775,1134,6.605,1135,5.535]],["title/classes/UpdateProfesseurDto.html",[27,0.104,1136,2.921]],["body/classes/UpdateProfesseurDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,383,3.901,385,4.275,407,2.842,660,2.79,1118,3.142,1119,2.955,1120,2.955,1136,5.101,1137,4.775,1138,6.605,1139,5.535]],["title/classes/UpdateUtilisateurDto.html",[27,0.104,1140,2.462]],["body/classes/UpdateUtilisateurDto.html",[3,0.219,4,0.192,5,0.192,13,0.017,22,0.511,26,0.219,27,0.152,43,0.014,44,0.014,311,1.72,386,3.354,388,4.275,407,2.842,660,2.79,1118,3.142,1119,2.955,1120,2.955,1140,4.299,1141,4.775,1142,6.605,1143,4.775]],["title/entities/Utilisateur.html",[250,1.805,279,1.409]],["body/entities/Utilisateur.html",[3,0.144,4,0.126,5,0.126,7,0.63,12,2.522,13,0.017,16,1.291,21,2.068,22,0.281,26,0.144,27,0.1,36,1.191,43,0.011,44,0.011,99,1.351,111,1.83,128,1.291,188,2.277,189,4.392,192,4.392,250,2.4,268,1.794,270,3.537,272,4.813,274,5.376,279,1.874,286,2.408,287,2.558,289,5.179,296,2.558,297,3.545,298,2.558,299,3.966,1144,3.132,1145,3.63,1146,3.63,1147,3.63,1148,3.63,1149,3.63,1150,3.63,1151,3.63,1152,3.63,1153,3.63,1154,5.03,1155,3.63,1156,3.63,1157,5.03,1158,3.63,1159,3.63,1160,5.03,1161,3.63,1162,3.63,1163,5.03,1164,3.63]],["title/controllers/UtilisateurController.html",[0,1.176,1165,2.666]],["body/controllers/UtilisateurController.html",[0,1.349,2,1.349,3,0.172,4,0.15,5,0.15,13,0.017,21,1.721,22,0.518,23,0.753,26,0.172,27,0.12,36,1.265,43,0.012,44,0.012,118,1.868,151,2.317,173,3.352,174,3.352,250,2.071,268,1.964,305,1.694,386,3.83,716,3.352,718,3.352,1140,4.362,1143,4.894,1165,3.998,1166,3.744,1167,2.63,1168,3.744,1169,4.34,1170,4.34,1171,4.34,1172,4.34,1173,4.34,1174,4.34,1175,4.34,1176,4.34,1177,4.34,1178,4.34,1179,4.34,1180,4.34,1181,4.34]],["title/modules/UtilisateurModule.html",[45,1.176,64,2.462]],["body/modules/UtilisateurModule.html",[2,1.884,3,0.191,4,0.167,5,0.167,13,0.017,22,0.555,23,0.835,26,0.191,27,0.132,43,0.013,44,0.013,45,2.062,47,2.07,48,2.07,49,2.296,50,2.296,51,2.07,52,3.166,53,2.296,64,4.771,65,2.892,66,2.296,67,2.296,69,2.731,71,2.731,72,1.792,250,2.296,1165,4.677,1167,4.442,1168,4.151,1182,4.151,1183,4.151,1184,4.811,1185,4.811,1186,4.811,1187,4.811]],["title/injectables/UtilisateurService.html",[114,0.903,1167,2.292]],["body/injectables/UtilisateurService.html",[3,0.173,4,0.152,5,0.152,13,0.017,16,0.835,18,1.554,21,1.554,22,0.338,23,0.76,26,0.173,27,0.121,36,1.301,43,0.012,44,0.012,114,1.362,115,1.982,118,2.731,142,2.485,189,3.086,192,4.021,250,3.328,268,1.973,286,2.257,305,1.709,316,1.982,322,1.982,358,3.958,359,2.653,386,2.653,702,3.381,1019,3.777,1140,3.714,1167,3.457,1188,3.777,1189,4.378,1190,4.378,1191,4.378,1192,4.378,1193,4.378]],["title/coverage.html",[1194,3.997]],["body/coverage.html",[0,2.072,1,1.89,5,0.093,6,2.313,13,0.017,24,1.625,27,0.198,43,0.009,44,0.009,51,1.154,80,0.954,82,1.214,84,0.954,86,1.214,88,1.351,90,1.279,99,0.535,114,1.622,116,2.313,142,1.522,149,1.89,150,2.313,177,1.625,205,1.625,210,1.625,215,1.89,216,1.89,218,1.89,228,2.313,250,1.279,254,2.071,279,2.358,280,2.313,303,1.89,304,2.313,331,1.625,354,2.313,360,1.89,361,2.313,362,3.12,363,1.89,364,2.313,365,3.12,366,1.89,367,2.313,368,3.12,369,1.625,370,2.313,371,3.12,375,6.064,380,1.89,381,2.313,382,3.12,383,1.89,384,2.313,385,3.12,386,1.625,387,2.313,388,3.12,389,2.313,419,1.89,420,2.313,441,1.431,463,3.425,464,1.89,466,2.847,467,2.071,468,2.313,511,1.89,512,2.071,513,2.313,539,2.313,566,2.313,571,2.313,587,2.313,598,1.89,599,2.313,614,1.522,627,2.313,631,2.313,657,1.89,658,2.313,703,1.745,714,1.625,719,1.89,758,1.431,768,2.313,945,4.193,1020,2.313,1023,1.89,1024,2.313,1029,1.625,1040,2.313,1049,2.313,1065,1.89,1066,2.313,1087,2.313,1097,2.313,1115,2.071,1116,2.313,1122,2.071,1123,2.313,1126,2.071,1127,2.313,1130,2.313,1132,2.071,1133,2.313,1136,2.071,1137,2.313,1140,1.745,1141,2.313,1144,2.313,1165,1.89,1166,2.313,1167,1.625,1188,2.313,1194,2.071,1195,2.681,1196,2.681,1197,2.681,1198,5.41,1199,6.33,1200,4.86,1201,3.485,1202,2.313,1203,7.566,1204,4.86,1205,4.039,1206,4.039,1207,2.313,1208,2.681,1209,2.681,1210,2.681,1211,2.313,1212,2.313,1213,2.681]],["title/dependencies.html",[48,1.959,1214,2.72]],["body/dependencies.html",[13,0.017,23,0.838,43,0.013,44,0.013,48,2.077,72,1.798,94,3.141,96,4.164,100,4.164,128,1.717,182,2.577,209,2.577,227,3.728,242,3.141,338,2.739,483,3.728,579,5.239,1119,2.577,1120,2.577,1215,6.974,1216,4.826,1217,4.826,1218,4.826,1219,4.826,1220,4.826,1221,6.073,1222,4.826,1223,4.826,1224,4.826,1225,4.826,1226,4.826,1227,4.826,1228,4.826,1229,4.826,1230,4.826,1231,4.826,1232,4.826,1233,4.826,1234,4.826,1235,4.826,1236,4.826,1237,4.826,1238,4.826,1239,4.826]],["title/miscellaneous/functions.html",[1240,2.222,1241,3.928]],["body/miscellaneous/functions.html",[7,1.033,13,0.015,43,0.015,44,0.015,51,3.131,1207,5.134,1240,4.194,1241,5.134,1242,5.95]],["title/index.html",[7,0.547,1243,3.153,1244,3.153]],["body/index.html",[4,0.153,13,0.017,43,0.013,44,0.013,129,3.821,158,2.233,190,5.507,233,2.365,1194,3.421,1245,4.429,1246,4.429,1247,5.749,1248,4.429,1249,4.429,1250,4.429,1251,4.429,1252,4.429,1253,4.429,1254,6.383,1255,4.429,1256,4.429,1257,4.429,1258,7.303,1259,4.429,1260,3.821,1261,4.429,1262,7.173,1263,4.429,1264,4.429,1265,5.749,1266,4.429,1267,4.429,1268,4.429,1269,4.429,1270,5.749,1271,5.749,1272,4.429,1273,4.429,1274,4.429,1275,5.749,1276,5.749,1277,4.429,1278,4.429,1279,4.429,1280,4.429,1281,4.429,1282,3.821,1283,4.429,1284,4.429,1285,4.429,1286,4.429,1287,4.429,1288,4.429,1289,4.429,1290,4.429,1291,4.429,1292,3.821,1293,4.429,1294,4.429,1295,4.429,1296,4.429,1297,4.429,1298,4.429,1299,3.821]],["title/modules.html",[47,2.227]],["body/modules.html",[13,0.014,43,0.014,44,0.014,46,3.647,47,2.226,57,3.368,58,3.368,59,3.368,60,3.368,61,3.368,62,3.368,63,3.368,64,3.368,1282,6.635,1300,7.69,1301,7.69,1302,7.69]],["title/overview.html",[1303,4.464]],["body/overview.html",[2,1.147,13,0.017,24,3.529,43,0.011,44,0.011,45,1.147,46,5.44,47,1.589,48,1.589,49,1.762,50,1.762,51,1.589,52,1.762,53,1.762,54,3.185,55,3.185,56,3.185,57,4.54,58,4.286,59,4.286,60,4.286,61,4.798,62,4.286,63,4.286,64,4.286,65,2.428,66,1.762,67,1.762,111,1.861,115,1.671,177,3.529,203,3.185,204,3.185,205,3.529,311,1.147,331,3.529,350,3.185,351,3.185,441,3.351,457,3.185,458,3.185,465,2.602,496,2.851,565,2.403,614,3.562,623,3.185,624,3.185,714,3.529,756,3.185,757,3.185,758,3.351,1029,3.529,1035,3.185,1036,3.185,1167,3.529,1182,3.185,1183,3.185,1303,3.185,1304,5.089,1305,3.692,1306,3.692]],["title/properties.html",[188,2.061,1214,2.72]],["body/properties.html",[13,0.017,43,0.015,44,0.015,158,2.964,188,2.662,1292,5.073,1299,5.073,1307,5.881,1308,5.881,1309,5.881]],["title/miscellaneous/variables.html",[1240,2.222,1310,3.928]],["body/miscellaneous/variables.html",[7,0.865,13,0.017,36,0.907,39,2.667,43,0.013,44,0.013,142,2.83,162,2.042,210,3.756,373,5.818,374,5.818,1201,4.302,1202,5.818,1211,4.302,1212,5.347,1240,3.514,1260,5.347,1310,4.302,1311,6.198,1312,4.986,1313,4.986,1314,4.986,1315,6.198,1316,4.986,1317,4.986,1318,6.198,1319,4.986,1320,4.986,1321,4.986,1322,4.986,1323,4.986,1324,6.198,1325,4.986,1326,4.986]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"classes/CreateNoteDto.html":{},"injectables/NoteService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1308,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0242ac190002",{"_index":927,"title":{},"body":{"injectables/NoteService.html":{}}}],["0ab282a8",{"_index":923,"title":{},"body":{"injectables/NoteService.html":{}}}],["1",{"_index":492,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["10",{"_index":565,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{},"overview.html":{}}}],["10.0.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["11ee",{"_index":925,"title":{},"body":{"injectables/NoteService.html":{}}}],["15",{"_index":1306,"title":{},"body":{"overview.html":{}}}],["16.3.1",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["172.26.0.2",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["1h",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["2",{"_index":497,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["2.18.1",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":999,"title":{},"body":{"injectables/NoteService.html":{}}}],["3",{"_index":496,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"overview.html":{}}}],["3.1.1",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["4.0.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1305,"title":{},"body":{"overview.html":{}}}],["7.1.16",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["732d",{"_index":924,"title":{},"body":{"injectables/NoteService.html":{}}}],["9",{"_index":1304,"title":{},"body":{"overview.html":{}}}],["9.0.1",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["accès",{"_index":679,"title":{},"body":{"controllers/NoteController.html":{}}}],["action",{"_index":358,"title":{},"body":{"injectables/ClasseService.html":{},"injectables/EleveService.html":{},"injectables/MatiereService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{}}}],["adds",{"_index":1191,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["addtag('api",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["affecte",{"_index":960,"title":{},"body":{"injectables/NoteService.html":{}}}],["ajouter",{"_index":335,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["amazing",{"_index":1283,"title":{},"body":{"index.html":{}}}],["andwhere(\"eleve.id",{"_index":504,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["andwhere(\"matiere.id",{"_index":805,"title":{},"body":{"injectables/NoteService.html":{}}}],["andwhere(\"note.id_professeur",{"_index":870,"title":{},"body":{"injectables/NoteService.html":{}}}],["apibearerauth",{"_index":710,"title":{},"body":{"controllers/NoteController.html":{}}}],["apibody",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicreatedresponse",{"_index":712,"title":{},"body":{"controllers/NoteController.html":{}}}],["apiforbiddenresponse",{"_index":713,"title":{},"body":{"controllers/NoteController.html":{}}}],["apinocontentresponse",{"_index":613,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["apinotfoundresponse",{"_index":612,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["apiokresponse",{"_index":329,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["apiparam",{"_index":330,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["apiquery",{"_index":711,"title":{},"body":{"controllers/NoteController.html":{}}}],["apiresponse",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["apitags('auth",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('classe",{"_index":333,"title":{},"body":{"controllers/ClasseController.html":{}}}],["apitags('eleve",{"_index":443,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{}}}],["apitags('eleve')@useguards(elevemoyenneguard)@get('eleve/:eleveid/moyennes')@apiparam({name",{"_index":694,"title":{},"body":{"controllers/NoteController.html":{}}}],["apitags('eleve')@useguards(elevenoteguard)@get('eleve/:eleveid/matiere/:matiereid')@apiparam({name",{"_index":698,"title":{},"body":{"controllers/NoteController.html":{}}}],["apitags('matiere",{"_index":616,"title":{},"body":{"controllers/MatiereController.html":{}}}],["apitags('note",{"_index":723,"title":{},"body":{"controllers/NoteController.html":{}}}],["apitags('parent",{"_index":1031,"title":{},"body":{"controllers/ParentController.html":{}}}],["apitags('professeur",{"_index":726,"title":{},"body":{"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["apitags('professeur')@useguards(professeurguard)@get('moyenneeleve/classe/:classeid/professeur/:professeurid')@apiparam({name",{"_index":666,"title":{},"body":{"controllers/NoteController.html":{}}}],["apitags('professeur')@useguards(professeurguard)@get('professeur/:professeurid/moyenneclasse')@apiparam({name",{"_index":690,"title":{},"body":{"controllers/NoteController.html":{}}}],["apitags('professeur')@useguards(professeurguard)@post(':professeurid')@apiparam({name",{"_index":675,"title":{},"body":{"controllers/NoteController.html":{}}}],["app",{"_index":1260,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1253,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":46,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":24,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["associées",{"_index":828,"title":{},"body":{"injectables/NoteService.html":{}}}],["associés",{"_index":435,"title":{},"body":{"controllers/EleveController.html":{},"injectables/NoteService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"classes/JwtStrategy.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["au",{"_index":436,"title":{},"body":{"controllers/EleveController.html":{},"injectables/NoteService.html":{}}}],["aucun",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MatiereController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{}}}],["aucune",{"_index":961,"title":{},"body":{"injectables/NoteService.html":{}}}],["auth",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"controllers/NoteController.html":{}}}],["auth.guard.ts",{"_index":566,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":568,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["authcontroller",{"_index":149,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticateduser",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":569,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(\"jwt",{"_index":567,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authheader",{"_index":487,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["authheader.split",{"_index":491,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["authheader.startswith(\"bearer",{"_index":489,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["authmodule",{"_index":57,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1292,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":177,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoris",{"_index":683,"title":{},"body":{"controllers/NoteController.html":{}}}],["avec",{"_index":313,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["await",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["b709",{"_index":926,"title":{},"body":{"injectables/NoteService.html":{}}}],["backers",{"_index":1284,"title":{},"body":{"index.html":{}}}],["badrequest",{"_index":989,"title":{},"body":{"injectables/NoteService.html":{}}}],["badrequestexception",{"_index":788,"title":{},"body":{"injectables/NoteService.html":{}}}],["base",{"_index":1016,"title":{},"body":{"injectables/NoteService.html":{}}}],["bcrypt",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{},"dependencies.html":{}}}],["bcrypt.compare(motdepasse",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":564,"title":{},"body":{"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["body",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NoteController.html":{},"controllers/UtilisateurController.html":{}}}],["boolean",{"_index":477,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["bootstrap",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1302,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1300,"title":{},"body":{"modules.html":{}}}],["brut",{"_index":876,"title":{},"body":{"injectables/NoteService.html":{}}}],["build",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder",{"_index":938,"title":{},"body":{"injectables/NoteService.html":{}}}],["building",{"_index":1248,"title":{},"body":{"index.html":{}}}],["calcul",{"_index":749,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["calculatemoyenne",{"_index":769,"title":{},"body":{"injectables/NoteService.html":{}}}],["calculatemoyenne(notes",{"_index":776,"title":{},"body":{"injectables/NoteService.html":{}}}],["calcule",{"_index":951,"title":{},"body":{"injectables/NoteService.html":{}}}],["calculer",{"_index":843,"title":{},"body":{"injectables/NoteService.html":{}}}],["calculermoyenneclasseelevebyprofesseur",{"_index":659,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["calculermoyenneclasseelevebyprofesseur(classeid",{"_index":665,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["calculées",{"_index":672,"title":{},"body":{"controllers/NoteController.html":{}}}],["camelcase",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"entities/Eleve.html":{},"entities/Note.html":{},"entities/Professeur.html":{}}}],["canactivate",{"_index":469,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["canactivate(context",{"_index":473,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["catch",{"_index":139,"title":{},"body":{"injectables/AppService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["ce",{"_index":861,"title":{},"body":{"injectables/NoteService.html":{}}}],["cette",{"_index":879,"title":{},"body":{"injectables/NoteService.html":{}}}],["chaque",{"_index":909,"title":{},"body":{"injectables/NoteService.html":{}}}],["chaîne",{"_index":1111,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["class",{"_index":27,"title":{"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/JwtStrategy.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["classe",{"_index":86,"title":{"entities/Classe.html":{}},"body":{"modules/AppModule.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"entities/Eleve.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"coverage.html":{}}}],["classe'})@apiokresponse({description",{"_index":318,"title":{},"body":{"controllers/ClasseController.html":{}}}],["classe'})@apiparam({name",{"_index":668,"title":{},"body":{"controllers/NoteController.html":{}}}],["classe.controller",{"_index":353,"title":{},"body":{"modules/ClasseModule.html":{}}}],["classe.dto",{"_index":1121,"title":{},"body":{"classes/UpdateClasseDto.html":{}}}],["classe.dto.ts",{"_index":362,"title":{},"body":{"classes/CreateClasseDto.html":{},"classes/UpdateClasseDto.html":{},"coverage.html":{}}}],["classe.eleves",{"_index":408,"title":{},"body":{"entities/Eleve.html":{}}}],["classe.eleves)@joincolumn({name",{"_index":394,"title":{},"body":{"entities/Eleve.html":{}}}],["classe.id",{"_index":914,"title":{},"body":{"injectables/NoteService.html":{}}}],["classe.nom",{"_index":920,"title":{},"body":{"injectables/NoteService.html":{}}}],["classe.professeurs",{"_index":1058,"title":{},"body":{"entities/Professeur.html":{}}}],["classe.professeurs)@jointable",{"_index":1051,"title":{},"body":{"entities/Professeur.html":{}}}],["classe.service",{"_index":332,"title":{},"body":{"controllers/ClasseController.html":{},"modules/ClasseModule.html":{}}}],["classe/classe.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["classe/entities/classe.entity",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["classecontroller",{"_index":303,"title":{"controllers/ClasseController.html":{}},"body":{"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"coverage.html":{}}}],["classeid",{"_index":667,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["classemodule",{"_index":58,"title":{"modules/ClasseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClasseModule.html":{},"modules.html":{},"overview.html":{}}}],["classerepository",{"_index":773,"title":{},"body":{"injectables/NoteService.html":{}}}],["classes",{"_index":311,"title":{},"body":{"controllers/ClasseController.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/JwtStrategy.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"overview.html":{}}}],["classesenseignees",{"_index":902,"title":{},"body":{"injectables/NoteService.html":{}}}],["classeservice",{"_index":331,"title":{"injectables/ClasseService.html":{}},"body":{"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_classemodule",{"_index":350,"title":{},"body":{"modules/ClasseModule.html":{},"overview.html":{}}}],["cluster_classemodule_providers",{"_index":351,"title":{},"body":{"modules/ClasseModule.html":{},"overview.html":{}}}],["cluster_elevemodule",{"_index":457,"title":{},"body":{"modules/EleveModule.html":{},"overview.html":{}}}],["cluster_elevemodule_providers",{"_index":458,"title":{},"body":{"modules/EleveModule.html":{},"overview.html":{}}}],["cluster_matieremodule",{"_index":623,"title":{},"body":{"modules/MatiereModule.html":{},"overview.html":{}}}],["cluster_matieremodule_providers",{"_index":624,"title":{},"body":{"modules/MatiereModule.html":{},"overview.html":{}}}],["cluster_notemodule",{"_index":756,"title":{},"body":{"modules/NoteModule.html":{},"overview.html":{}}}],["cluster_notemodule_providers",{"_index":757,"title":{},"body":{"modules/NoteModule.html":{},"overview.html":{}}}],["cluster_parentmodule",{"_index":1035,"title":{},"body":{"modules/ParentModule.html":{},"overview.html":{}}}],["cluster_parentmodule_providers",{"_index":1036,"title":{},"body":{"modules/ParentModule.html":{},"overview.html":{}}}],["cluster_professeurmodule",{"_index":1091,"title":{},"body":{"modules/ProfesseurModule.html":{}}}],["cluster_professeurmodule_providers",{"_index":1092,"title":{},"body":{"modules/ProfesseurModule.html":{}}}],["cluster_utilisateurmodule",{"_index":1182,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_providers",{"_index":1183,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["coef",{"_index":372,"title":{},"body":{"classes/CreateNoteDto.html":{},"entities/Note.html":{},"injectables/NoteService.html":{}}}],["coefficients",{"_index":889,"title":{},"body":{"injectables/NoteService.html":{}}}],["column",{"_index":289,"title":{},"body":{"entities/Classe.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Utilisateur.html":{}}}],["configmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"classes/JwtStrategy.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["constructor(eleverepository",{"_index":541,"title":{},"body":{"injectables/EleveService.html":{}}}],["constructor(entitymanager",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(jwtservice",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["constructor(noterepository",{"_index":771,"title":{},"body":{"injectables/NoteService.html":{}}}],["constructor(parentrepository",{"_index":1041,"title":{},"body":{"injectables/ParentService.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{}}}],["constructor(professeurrepository",{"_index":1098,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["contenu",{"_index":609,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["context",{"_index":476,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":486,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["continue",{"_index":928,"title":{},"body":{"injectables/NoteService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"controllers/UtilisateurController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"classe",{"_index":334,"title":{},"body":{"controllers/ClasseController.html":{}}}],["controller(\"eleve",{"_index":444,"title":{},"body":{"controllers/EleveController.html":{}}}],["controller(\"matiere",{"_index":617,"title":{},"body":{"controllers/MatiereController.html":{}}}],["controller(\"note",{"_index":725,"title":{},"body":{"controllers/NoteController.html":{}}}],["controller(\"parent",{"_index":1032,"title":{},"body":{"controllers/ParentController.html":{}}}],["controller(\"professeur",{"_index":1079,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["controller(\"utilisateur",{"_index":1169,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"controllers/ProfesseurController.html":{},"modules/ProfesseurModule.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["convertit",{"_index":1110,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["correspondant",{"_index":1006,"title":{},"body":{"injectables/NoteService.html":{}}}],["coverage",{"_index":1194,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":660,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["create(@body",{"_index":1170,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["create(createnotedto",{"_index":674,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["create(createutilisateurdto",{"_index":1190,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createclassedto",{"_index":360,"title":{"classes/CreateClasseDto.html":{}},"body":{"classes/CreateClasseDto.html":{},"classes/UpdateClasseDto.html":{},"coverage.html":{}}}],["createelevedto",{"_index":363,"title":{"classes/CreateEleveDto.html":{}},"body":{"classes/CreateEleveDto.html":{},"classes/UpdateEleveDto.html":{},"coverage.html":{}}}],["creatematieredto",{"_index":366,"title":{"classes/CreateMatiereDto.html":{}},"body":{"classes/CreateMatiereDto.html":{},"classes/UpdateMatiereDto.html":{},"coverage.html":{}}}],["createnotedto",{"_index":369,"title":{"classes/CreateNoteDto.html":{}},"body":{"classes/CreateNoteDto.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["createparentdto",{"_index":380,"title":{"classes/CreateParentDto.html":{}},"body":{"classes/CreateParentDto.html":{},"classes/UpdateParentDto.html":{},"coverage.html":{}}}],["createprofesseurdto",{"_index":383,"title":{"classes/CreateProfesseurDto.html":{}},"body":{"classes/CreateProfesseurDto.html":{},"classes/UpdateProfesseurDto.html":{},"coverage.html":{}}}],["createquerybuilder(\"classe",{"_index":904,"title":{},"body":{"injectables/NoteService.html":{}}}],["createquerybuilder(\"eleve",{"_index":551,"title":{},"body":{"injectables/EleveService.html":{}}}],["createquerybuilder(\"matiere",{"_index":808,"title":{},"body":{"injectables/NoteService.html":{}}}],["createquerybuilder(\"note",{"_index":797,"title":{},"body":{"injectables/NoteService.html":{}}}],["createquerybuilder(\"professeur",{"_index":523,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["createutilisateurdto",{"_index":386,"title":{"classes/CreateUtilisateurDto.html":{}},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["crypt",{"_index":425,"title":{},"body":{"controllers/EleveController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["cryptage",{"_index":454,"title":{},"body":{"controllers/EleveController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["cryptmdpeleve",{"_index":421,"title":{},"body":{"controllers/EleveController.html":{},"injectables/EleveService.html":{}}}],["cryptmdpparent",{"_index":1025,"title":{},"body":{"controllers/ParentController.html":{},"injectables/ParentService.html":{}}}],["cryptmdpprofesseur",{"_index":1067,"title":{},"body":{"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["crypto.randombytes(32).tostring(\"hex",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["création",{"_index":729,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["crée",{"_index":937,"title":{},"body":{"injectables/NoteService.html":{}}}],["créée",{"_index":677,"title":{},"body":{"controllers/NoteController.html":{}}}],["d",{"_index":860,"title":{},"body":{"injectables/NoteService.html":{}}}],["d'identification",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["d'une",{"_index":1012,"title":{},"body":{"injectables/NoteService.html":{}}}],["d'élèves",{"_index":941,"title":{},"body":{"injectables/NoteService.html":{}}}],["d\\'identification",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["dans",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NoteService.html":{}}}],["database",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["db",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"entities/Utilisateur.html":{}}}],["default",{"_index":373,"title":{},"body":{"classes/CreateNoteDto.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"classes/CreateNoteDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["delete",{"_index":328,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["delete(\":id",{"_index":346,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["delete(':id",{"_index":1179,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["delete(':id')@apiparam({name",{"_index":323,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["dependencies",{"_index":48,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":310,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["description",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":1261,"title":{},"body":{"index.html":{}}}],["disable",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"guards/ProfesseurGuard.html":{}}}],["document",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doivent",{"_index":992,"title":{},"body":{"injectables/NoteService.html":{}}}],["donn",{"_index":971,"title":{},"body":{"injectables/NoteService.html":{}}}],["donnée",{"_index":964,"title":{},"body":{"injectables/NoteService.html":{}}}],["données",{"_index":1017,"title":{},"body":{"injectables/NoteService.html":{}}}],["donnés",{"_index":795,"title":{},"body":{"injectables/NoteService.html":{}}}],["dotenv",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":978,"title":{},"body":{"injectables/NoteService.html":{}}}],["dto/create",{"_index":716,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/UtilisateurController.html":{}}}],["dto/update",{"_index":718,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/UtilisateurController.html":{}}}],["du",{"_index":433,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["définies",{"_index":981,"title":{},"body":{"injectables/NoteService.html":{}}}],["déj",{"_index":610,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["détails",{"_index":319,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["e2e",{"_index":1272,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1249,"title":{},"body":{"index.html":{}}}],["eleve",{"_index":80,"title":{"entities/Eleve.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"entities/Note.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"coverage.html":{}}}],["eleve.controller",{"_index":460,"title":{},"body":{"modules/EleveModule.html":{}}}],["eleve.dto",{"_index":1125,"title":{},"body":{"classes/UpdateEleveDto.html":{}}}],["eleve.dto.ts",{"_index":365,"title":{},"body":{"classes/CreateEleveDto.html":{},"classes/UpdateEleveDto.html":{},"coverage.html":{}}}],["eleve.id",{"_index":935,"title":{},"body":{"injectables/NoteService.html":{}}}],["eleve.id_classe",{"_index":284,"title":{},"body":{"entities/Classe.html":{}}}],["eleve.id_parent",{"_index":1021,"title":{},"body":{"entities/Parent.html":{}}}],["eleve.idclasse",{"_index":531,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["eleve.motdepasse",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EleveService.html":{}}}],["eleve.nom",{"_index":553,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{}}}],["eleve.notes",{"_index":644,"title":{},"body":{"entities/Note.html":{}}}],["eleve.notes)@joincolumn({name",{"_index":636,"title":{},"body":{"entities/Note.html":{}}}],["eleve.prenom",{"_index":554,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{}}}],["eleve.service",{"_index":442,"title":{},"body":{"controllers/EleveController.html":{},"modules/EleveModule.html":{}}}],["eleve/eleve.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["eleve/entities/eleve.entity",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["elevecontroller",{"_index":419,"title":{"controllers/EleveController.html":{}},"body":{"controllers/EleveController.html":{},"modules/EleveModule.html":{},"coverage.html":{}}}],["elevedata",{"_index":984,"title":{},"body":{"injectables/NoteService.html":{}}}],["elevedata.ideleve",{"_index":1009,"title":{},"body":{"injectables/NoteService.html":{}}}],["elevedata.note",{"_index":985,"title":{},"body":{"injectables/NoteService.html":{}}}],["eleveid",{"_index":494,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["eleveids",{"_index":933,"title":{},"body":{"injectables/NoteService.html":{}}}],["elevemodule",{"_index":59,"title":{"modules/EleveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EleveModule.html":{},"modules.html":{},"overview.html":{}}}],["elevemoyenneguard",{"_index":464,"title":{"guards/EleveMoyenneGuard.html":{}},"body":{"guards/EleveMoyenneGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["elevenoteguard",{"_index":511,"title":{"guards/EleveNoteGuard.html":{}},"body":{"guards/EleveNoteGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["eleverepository",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{}}}],["eleves",{"_index":281,"title":{},"body":{"entities/Classe.html":{},"classes/CreateNoteDto.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{}}}],["eleves.map(async",{"_index":970,"title":{},"body":{"injectables/NoteService.html":{}}}],["eleves.some",{"_index":983,"title":{},"body":{"injectables/NoteService.html":{}}}],["eleves.some((elevedata",{"_index":998,"title":{},"body":{"injectables/NoteService.html":{}}}],["elevesclasse",{"_index":911,"title":{},"body":{"injectables/NoteService.html":{}}}],["elevesclasse.eleves.map((eleve",{"_index":934,"title":{},"body":{"injectables/NoteService.html":{}}}],["eleveservice",{"_index":441,"title":{"injectables/EleveService.html":{}},"body":{"controllers/EleveController.html":{},"modules/EleveModule.html":{},"injectables/EleveService.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"coverage.html":{},"overview.html":{}}}],["email",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["en",{"_index":940,"title":{},"body":{"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["enseignée",{"_index":910,"title":{},"body":{"injectables/NoteService.html":{}}}],["enseignées",{"_index":901,"title":{},"body":{"injectables/NoteService.html":{}}}],["entities",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"entities/Classe.html":{},"entities/Eleve.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"entities/Utilisateur.html":{},"overview.html":{}}}],["entities/eleve.entity",{"_index":461,"title":{},"body":{"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{}}}],["entities/note.entity",{"_index":761,"title":{},"body":{"modules/NoteModule.html":{},"injectables/NoteService.html":{}}}],["entities/parent.entity",{"_index":1039,"title":{},"body":{"modules/ParentModule.html":{},"injectables/ParentService.html":{}}}],["entities/professeur.entity",{"_index":1095,"title":{},"body":{"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{}}}],["entities/utilisateur.entity",{"_index":1186,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["entity",{"_index":279,"title":{"entities/Classe.html":{},"entities/Eleve.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"entities/Utilisateur.html":{}},"body":{"entities/Classe.html":{},"entities/Eleve.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"entities/Utilisateur.html":{},"coverage.html":{}}}],["entitymanager",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["eqeqeq",{"_index":509,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["error",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["error(`failed",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["error.message",{"_index":146,"title":{},"body":{"injectables/AppService.html":{}}}],["eslint",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"guards/ProfesseurGuard.html":{}}}],["est",{"_index":995,"title":{},"body":{"injectables/NoteService.html":{}}}],["estpresent",{"_index":535,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["et",{"_index":671,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["example",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["exception",{"_index":988,"title":{},"body":{"injectables/NoteService.html":{}}}],["execute",{"_index":144,"title":{},"body":{"injectables/AppService.html":{}}}],["executesql",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["executesqlfromfile",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["executioncontext",{"_index":474,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["expiresin",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["export",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["exports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["express",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":407,"title":{},"body":{"entities/Eleve.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["extraction",{"_index":976,"title":{},"body":{"injectables/NoteService.html":{}}}],["extractjwt",{"_index":577,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":583,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["exécute",{"_index":814,"title":{},"body":{"injectables/NoteService.html":{}}}],["false",{"_index":490,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"guards/ProfesseurGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["filepath",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["filtre",{"_index":802,"title":{},"body":{"injectables/NoteService.html":{}}}],["filtrer",{"_index":965,"title":{},"body":{"injectables/NoteService.html":{}}}],["findall",{"_index":305,"title":{},"body":{"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findelevebyidandparentid",{"_index":470,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["findelevebyidandparentid(id",{"_index":479,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["findmatiereofprofesseur",{"_index":1068,"title":{},"body":{"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["findmatiereofprofesseur(@param(\"idprofesseur",{"_index":1083,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["findmatiereofprofesseur(idprofesseur",{"_index":1071,"title":{},"body":{"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["findone",{"_index":306,"title":{},"body":{"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["findone(@param(\"id",{"_index":344,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["findone(@param('id",{"_index":1174,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findone(id",{"_index":316,"title":{},"body":{"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{}}}],["findonebyemailandmotdepasse(email",{"_index":1192,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["fonction",{"_index":561,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["format",{"_index":875,"title":{},"body":{"injectables/NoteService.html":{}}}],["forme",{"_index":944,"title":{},"body":{"injectables/NoteService.html":{}}}],["fournis",{"_index":942,"title":{},"body":{"injectables/NoteService.html":{}}}],["framework",{"_index":1247,"title":{},"body":{"index.html":{}}}],["fs",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["fs.readfilesync(filepath",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["function",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1241,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generaterandomkey",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(\"/crypt/mdp",{"_index":452,"title":{},"body":{"controllers/EleveController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["get(\":id",{"_index":343,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["get(\"eleve/:eleveid/matiere/:matiereid",{"_index":737,"title":{},"body":{"controllers/NoteController.html":{}}}],["get(\"eleve/:eleveid/moyennes",{"_index":742,"title":{},"body":{"controllers/NoteController.html":{}}}],["get(\"execute",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"matiereid/:idprofesseur",{"_index":1082,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["get(\"moyenneeleve/classe/:classeid/professeur/:professeurid",{"_index":748,"title":{},"body":{"controllers/NoteController.html":{}}}],["get(\"parent/:idparent",{"_index":446,"title":{},"body":{"controllers/EleveController.html":{}}}],["get(\"professeur/:professeurid/moyenneclasse",{"_index":745,"title":{},"body":{"controllers/NoteController.html":{}}}],["get('/crypt/mdp')@apiokresponse({description",{"_index":423,"title":{},"body":{"controllers/EleveController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["get(':id",{"_index":1173,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get(':id')@apiparam({name",{"_index":317,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["get('execute",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get('matiereid/:idprofesseur')@apiparam({name",{"_index":1072,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["get('parent/:idparent')@apiparam({name",{"_index":432,"title":{},"body":{"controllers/EleveController.html":{}}}],["get()@apiokresponse({description",{"_index":308,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["get()@apiquery({name",{"_index":685,"title":{},"body":{"controllers/NoteController.html":{}}}],["getclasses",{"_index":1062,"title":{},"body":{"entities/Professeur.html":{}}}],["getcoef",{"_index":645,"title":{},"body":{"entities/Note.html":{}}}],["geteleves",{"_index":300,"title":{},"body":{"entities/Classe.html":{},"entities/Parent.html":{}}}],["getelevesbyparentid",{"_index":422,"title":{},"body":{"controllers/EleveController.html":{},"injectables/EleveService.html":{}}}],["getelevesbyparentid(@param(\"idparent",{"_index":447,"title":{},"body":{"controllers/EleveController.html":{}}}],["getelevesbyparentid(parentid",{"_index":431,"title":{},"body":{"controllers/EleveController.html":{},"injectables/EleveService.html":{}}}],["getemail",{"_index":1156,"title":{},"body":{"entities/Utilisateur.html":{}}}],["gethello",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getid",{"_index":592,"title":{},"body":{"entities/Matiere.html":{}}}],["getidclasse",{"_index":410,"title":{},"body":{"entities/Eleve.html":{}}}],["getideleve",{"_index":654,"title":{},"body":{"entities/Note.html":{}}}],["getidparent",{"_index":413,"title":{},"body":{"entities/Eleve.html":{}}}],["getidprofesseur",{"_index":651,"title":{},"body":{"entities/Note.html":{}}}],["getmany",{"_index":556,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{}}}],["getmatiere",{"_index":1059,"title":{},"body":{"entities/Professeur.html":{}}}],["getmotdepasse",{"_index":1159,"title":{},"body":{"entities/Utilisateur.html":{}}}],["getmoyenneclassesbyprofesseur",{"_index":661,"title":{},"body":{"controllers/NoteController.html":{}}}],["getmoyenneclassesbyprofesseur(@param(\"professeurid",{"_index":746,"title":{},"body":{"controllers/NoteController.html":{}}}],["getmoyenneclassesbyprofesseur(professeurid",{"_index":689,"title":{},"body":{"controllers/NoteController.html":{}}}],["getmoyennesbyeleve",{"_index":662,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["getmoyennesbyeleve(@param(\"eleveid",{"_index":743,"title":{},"body":{"controllers/NoteController.html":{}}}],["getmoyennesbyeleve(eleveid",{"_index":693,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["getmoyennesbyprofesseur",{"_index":770,"title":{},"body":{"injectables/NoteService.html":{}}}],["getmoyennesbyprofesseur(professeurid",{"_index":783,"title":{},"body":{"injectables/NoteService.html":{}}}],["getnom",{"_index":296,"title":{},"body":{"entities/Classe.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Utilisateur.html":{}}}],["getnote",{"_index":648,"title":{},"body":{"entities/Note.html":{}}}],["getnotes",{"_index":416,"title":{},"body":{"entities/Eleve.html":{},"entities/Professeur.html":{}}}],["getnotesbyeleveandmatiere",{"_index":663,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["getnotesbyeleveandmatiere(eleveid",{"_index":696,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["getone",{"_index":915,"title":{},"body":{"injectables/NoteService.html":{}}}],["getprenom",{"_index":1153,"title":{},"body":{"entities/Utilisateur.html":{}}}],["getprofesseurs",{"_index":595,"title":{},"body":{"entities/Matiere.html":{}}}],["getrawmany",{"_index":534,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["getrawone",{"_index":813,"title":{},"body":{"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["getrole",{"_index":1162,"title":{},"body":{"entities/Utilisateur.html":{}}}],["getting",{"_index":1243,"title":{"index.html":{}},"body":{}}],["grade",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["grademaster",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groupby",{"_index":873,"title":{},"body":{"injectables/NoteService.html":{}}}],["groupement",{"_index":874,"title":{},"body":{"injectables/NoteService.html":{}}}],["grow",{"_index":1279,"title":{},"body":{"index.html":{}}}],["guard",{"_index":463,"title":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":465,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{},"overview.html":{}}}],["hacher",{"_index":562,"title":{},"body":{"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["hashedpassword",{"_index":558,"title":{},"body":{"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["hashpassword",{"_index":540,"title":{},"body":{"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["hashpassword(password",{"_index":547,"title":{},"body":{"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["hasinvalidnote",{"_index":1000,"title":{},"body":{"injectables/NoteService.html":{}}}],["hasnegativenote",{"_index":997,"title":{},"body":{"injectables/NoteService.html":{}}}],["hasnullnote",{"_index":982,"title":{},"body":{"injectables/NoteService.html":{}}}],["hello",{"_index":147,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1289,"title":{},"body":{"index.html":{}}}],["host",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":1296,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus.unauthorized",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["id_classe",{"_index":390,"title":{},"body":{"entities/Eleve.html":{},"injectables/NoteService.html":{}}}],["id_eleve",{"_index":632,"title":{},"body":{"entities/Note.html":{},"injectables/NoteService.html":{}}}],["id_matiere",{"_index":1050,"title":{},"body":{"entities/Professeur.html":{}}}],["id_parent",{"_index":391,"title":{},"body":{"entities/Eleve.html":{}}}],["id_professeur",{"_index":633,"title":{},"body":{"entities/Note.html":{},"injectables/NoteService.html":{}}}],["idclasse",{"_index":395,"title":{},"body":{"entities/Eleve.html":{},"injectables/NoteService.html":{}}}],["ideleve",{"_index":379,"title":{},"body":{"classes/CreateNoteDto.html":{},"entities/Note.html":{},"injectables/NoteService.html":{}}}],["identifiants",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["identifier",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["idmatiere",{"_index":862,"title":{},"body":{"injectables/NoteService.html":{},"entities/Professeur.html":{}}}],["idparent",{"_index":398,"title":{},"body":{"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{}}}],["idprofesseur",{"_index":639,"title":{},"body":{"entities/Note.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["ids",{"_index":932,"title":{},"body":{"injectables/NoteService.html":{}}}],["il",{"_index":894,"title":{},"body":{"injectables/NoteService.html":{}}}],["implements",{"_index":484,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["import.sql",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EleveModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{}}}],["incorrect",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"classes/CreateNoteDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indique",{"_index":856,"title":{},"body":{"injectables/NoteService.html":{}}}],["inestapplication",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["informations",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NoteService.html":{}}}],["injectable",{"_index":114,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClasseService.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MatiereService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClasseService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/MatiereService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["injectables",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClasseService.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MatiereService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{},"overview.html":{}}}],["injectrepository",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["injectrepository(classe",{"_index":791,"title":{},"body":{"injectables/NoteService.html":{}}}],["injectrepository(eleve",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{}}}],["injectrepository(matiere",{"_index":790,"title":{},"body":{"injectables/NoteService.html":{}}}],["injectrepository(note",{"_index":789,"title":{},"body":{"injectables/NoteService.html":{}}}],["injectrepository(parent",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParentService.html":{}}}],["injectrepository(professeur",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["innerjoin",{"_index":525,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["innerjoin(\"classe.professeurs",{"_index":905,"title":{},"body":{"injectables/NoteService.html":{}}}],["innerjoin(\"eleve",{"_index":530,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["innerjoin(\"matiere",{"_index":823,"title":{},"body":{"injectables/NoteService.html":{}}}],["innerjoin(\"note.id_professeur",{"_index":867,"title":{},"body":{"injectables/NoteService.html":{}}}],["innerjoin(\"professeur.id_matiere",{"_index":868,"title":{},"body":{"injectables/NoteService.html":{}}}],["innerjoinandselect(\"classe.eleves",{"_index":912,"title":{},"body":{"injectables/NoteService.html":{}}}],["installation",{"_index":1257,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1259,"title":{},"body":{"index.html":{}}}],["interdit",{"_index":680,"title":{},"body":{"controllers/NoteController.html":{}}}],["introuvable",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["invalides",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["isnan(parsefloat(notes[0]?.sommecoef",{"_index":891,"title":{},"body":{"injectables/NoteService.html":{}}}],["isnan(parsefloat(notes[0]?.sommeponderee",{"_index":893,"title":{},"body":{"injectables/NoteService.html":{}}}],["isprofesseur",{"_index":514,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["isprofesseur(eleveid",{"_index":517,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["join",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["join(__dirname",{"_index":132,"title":{},"body":{"injectables/AppService.html":{}}}],["joincolumn",{"_index":402,"title":{},"body":{"entities/Eleve.html":{},"entities/Note.html":{},"entities/Professeur.html":{}}}],["jointable",{"_index":1056,"title":{},"body":{"entities/Professeur.html":{}}}],["jointure",{"_index":799,"title":{},"body":{"injectables/NoteService.html":{}}}],["jour",{"_index":706,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["jwt",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":205,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":582,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["jwtmodule",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["jwtmodule.register",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["jwtservice",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["jwtstrategy",{"_index":218,"title":{"classes/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":1293,"title":{},"body":{"index.html":{}}}],["l'absence",{"_index":620,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["l'accès",{"_index":731,"title":{},"body":{"controllers/NoteController.html":{}}}],["l'entit",{"_index":939,"title":{},"body":{"injectables/NoteService.html":{}}}],["l'id",{"_index":804,"title":{},"body":{"injectables/NoteService.html":{}}}],["l'utilisateur",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NoteController.html":{}}}],["l'élève",{"_index":424,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["l'élève'})@apiokresponse({description",{"_index":429,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{}}}],["l'élève'})@apiparam({name",{"_index":699,"title":{},"body":{"controllers/NoteController.html":{}}}],["l\\'api",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l\\'utilisateur",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NoteController.html":{}}}],["l\\'élève",{"_index":449,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{}}}],["la",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["lancer",{"_index":987,"title":{},"body":{"injectables/NoteService.html":{}}}],["le",{"_index":453,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["leftjoinandselect(\"note.id_eleve",{"_index":801,"title":{},"body":{"injectables/NoteService.html":{}}}],["leftjoinandselect(\"note.id_professeur",{"_index":798,"title":{},"body":{"injectables/NoteService.html":{}}}],["leftjoinandselect(\"professeur.id_matiere",{"_index":800,"title":{},"body":{"injectables/NoteService.html":{}}}],["legend",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["les",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NoteService.html":{}}}],["license",{"_index":1299,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1276,"title":{},"body":{"index.html":{}}}],["line",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"guards/ProfesseurGuard.html":{}}}],["linkbetweenparentandeleve",{"_index":471,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["linkbetweenparentandeleve(id",{"_index":481,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["liste",{"_index":309,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["literal",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateNoteDto.html":{}}}],["login",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["lors",{"_index":621,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["lève",{"_index":794,"title":{},"body":{"injectables/NoteService.html":{}}}],["lèves",{"_index":427,"title":{},"body":{"controllers/EleveController.html":{},"injectables/NoteService.html":{}}}],["manytomany",{"_index":295,"title":{},"body":{"entities/Classe.html":{},"entities/Professeur.html":{}}}],["manytomany(undefined",{"_index":291,"title":{},"body":{"entities/Classe.html":{},"entities/Professeur.html":{}}}],["manytoone",{"_index":403,"title":{},"body":{"entities/Eleve.html":{},"entities/Note.html":{},"entities/Professeur.html":{}}}],["manytoone(undefined",{"_index":393,"title":{},"body":{"entities/Eleve.html":{},"entities/Note.html":{},"entities/Professeur.html":{}}}],["matching",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matiere",{"_index":88,"title":{"entities/Matiere.html":{}},"body":{"modules/AppModule.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"coverage.html":{}}}],["matiere.controller",{"_index":626,"title":{},"body":{"modules/MatiereModule.html":{}}}],["matiere.dto",{"_index":1129,"title":{},"body":{"classes/UpdateMatiereDto.html":{}}}],["matiere.dto.ts",{"_index":368,"title":{},"body":{"classes/CreateMatiereDto.html":{},"classes/UpdateMatiereDto.html":{},"coverage.html":{}}}],["matiere.id",{"_index":825,"title":{},"body":{"injectables/NoteService.html":{}}}],["matiere.idmatiere",{"_index":896,"title":{},"body":{"injectables/NoteService.html":{}}}],["matiere.matiere_nom",{"_index":835,"title":{},"body":{"injectables/NoteService.html":{}}}],["matiere.nom",{"_index":863,"title":{},"body":{"injectables/NoteService.html":{}}}],["matiere.nommatiere",{"_index":897,"title":{},"body":{"injectables/NoteService.html":{}}}],["matiere.professeur",{"_index":1057,"title":{},"body":{"entities/Professeur.html":{}}}],["matiere.professeur)@joincolumn({name",{"_index":1053,"title":{},"body":{"entities/Professeur.html":{}}}],["matiere.service",{"_index":615,"title":{},"body":{"controllers/MatiereController.html":{},"modules/MatiereModule.html":{}}}],["matiere/entities/matiere.entity",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["matiere/matiere.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["matierecontroller",{"_index":598,"title":{"controllers/MatiereController.html":{}},"body":{"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"coverage.html":{}}}],["matiereid",{"_index":697,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["matieremodule",{"_index":60,"title":{"modules/MatiereModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MatiereModule.html":{},"modules.html":{},"overview.html":{}}}],["matiererepository",{"_index":772,"title":{},"body":{"injectables/NoteService.html":{}}}],["matiereservice",{"_index":614,"title":{"injectables/MatiereService.html":{}},"body":{"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"modules/NoteModule.html":{},"coverage.html":{},"overview.html":{}}}],["matière",{"_index":603,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{}}}],["matière'})@apiokresponse({description",{"_index":602,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/NoteController.html":{}}}],["matières",{"_index":600,"title":{},"body":{"controllers/MatiereController.html":{},"injectables/NoteService.html":{}}}],["message",{"_index":990,"title":{},"body":{"injectables/NoteService.html":{}}}],["metadata",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["mettre",{"_index":887,"title":{},"body":{"injectables/NoteService.html":{}}}],["miscellaneous",{"_index":1240,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":705,"title":{},"body":{"controllers/NoteController.html":{}}}],["mit",{"_index":1275,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1265,"title":{},"body":{"index.html":{}}}],["module",{"_index":45,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["modules",{"_index":47,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1288,"title":{},"body":{"index.html":{}}}],["mot",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["motdepasse",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["motdepassecorrespondant",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["moyenne",{"_index":840,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyenne.guard",{"_index":721,"title":{},"body":{"controllers/NoteController.html":{}}}],["moyenne.guard.ts",{"_index":468,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"coverage.html":{}}}],["moyenne.guard.ts:10",{"_index":472,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["moyenne.guard.ts:18",{"_index":475,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["moyenne.guard.ts:44",{"_index":480,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["moyenne.guard.ts:55",{"_index":482,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["moyenne/eleve",{"_index":467,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["moyenneclasse",{"_index":921,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennegenerale",{"_index":898,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennes",{"_index":670,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["moyenneseleves",{"_index":968,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennesparclasse",{"_index":908,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennesparclasse.push",{"_index":918,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennesparmatiere",{"_index":852,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennesparmatiere.length",{"_index":899,"title":{},"body":{"injectables/NoteService.html":{}}}],["moyennesparmatiere.push",{"_index":880,"title":{},"body":{"injectables/NoteService.html":{}}}],["mysql",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mysql2",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1294,"title":{},"body":{"index.html":{}}}],["n'a",{"_index":858,"title":{},"body":{"injectables/NoteService.html":{}}}],["n'est",{"_index":681,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["n\\'est",{"_index":730,"title":{},"body":{"controllers/NoteController.html":{}}}],["name",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["ne",{"_index":1002,"title":{},"body":{"injectables/NoteService.html":{}}}],["nest",{"_index":1254,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1298,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"modules/NoteModule.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1119,"title":{},"body":{"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"modules/UtilisateurModule.html":{},"dependencies.html":{}}}],["new",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/NoteService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"guards/ProfesseurGuard.html":{}}}],["node.js",{"_index":1246,"title":{},"body":{"index.html":{}}}],["nom",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"entities/Classe.html":{},"classes/CreateNoteDto.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"injectables/NoteService.html":{},"entities/Utilisateur.html":{}}}],["nombre",{"_index":1112,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["nomclasse",{"_index":919,"title":{},"body":{"injectables/NoteService.html":{}}}],["nomeleve",{"_index":974,"title":{},"body":{"injectables/NoteService.html":{}}}],["nommatiere",{"_index":834,"title":{},"body":{"injectables/NoteService.html":{}}}],["nomprofesseur",{"_index":836,"title":{},"body":{"injectables/NoteService.html":{}}}],["non",{"_index":605,"title":{},"body":{"controllers/MatiereController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{}}}],["note",{"_index":90,"title":{"entities/Note.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateNoteDto.html":{},"entities/Eleve.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"coverage.html":{}}}],["note'})@apiokresponse({description",{"_index":686,"title":{},"body":{"controllers/NoteController.html":{}}}],["note.coef",{"_index":831,"title":{},"body":{"injectables/NoteService.html":{}}}],["note.controller",{"_index":760,"title":{},"body":{"modules/NoteModule.html":{}}}],["note.dto",{"_index":717,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/UpdateNoteDto.html":{}}}],["note.dto.ts",{"_index":371,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["note.dto.ts:2",{"_index":376,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:3",{"_index":378,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:4",{"_index":377,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.guard",{"_index":722,"title":{},"body":{"controllers/NoteController.html":{}}}],["note.guard.ts",{"_index":513,"title":{},"body":{"guards/EleveNoteGuard.html":{},"coverage.html":{}}}],["note.guard.ts:11",{"_index":515,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["note.guard.ts:22",{"_index":516,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["note.guard.ts:50",{"_index":520,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["note.guard.ts:62",{"_index":519,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["note.id",{"_index":830,"title":{},"body":{"injectables/NoteService.html":{}}}],["note.id_eleve",{"_index":400,"title":{},"body":{"entities/Eleve.html":{},"injectables/NoteService.html":{}}}],["note.id_professeur",{"_index":1014,"title":{},"body":{"injectables/NoteService.html":{},"entities/Professeur.html":{}}}],["note.nom",{"_index":833,"title":{},"body":{"injectables/NoteService.html":{}}}],["note.note",{"_index":832,"title":{},"body":{"injectables/NoteService.html":{}}}],["note.service",{"_index":715,"title":{},"body":{"controllers/NoteController.html":{},"modules/NoteModule.html":{}}}],["note/eleve",{"_index":512,"title":{},"body":{"guards/EleveNoteGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["note/entities/note.entity",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["note/note.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["notecontroller",{"_index":657,"title":{"controllers/NoteController.html":{}},"body":{"controllers/NoteController.html":{},"modules/NoteModule.html":{},"coverage.html":{}}}],["notemodule",{"_index":61,"title":{"modules/NoteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NoteModule.html":{},"modules.html":{},"overview.html":{}}}],["noterepository",{"_index":775,"title":{},"body":{"injectables/NoteService.html":{}}}],["notes",{"_index":392,"title":{},"body":{"entities/Eleve.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{}}}],["notes.length",{"_index":846,"title":{},"body":{"injectables/NoteService.html":{}}}],["notes.map((note",{"_index":829,"title":{},"body":{"injectables/NoteService.html":{}}}],["notes.reduce",{"_index":973,"title":{},"body":{"injectables/NoteService.html":{}}}],["notes.reduce((sum",{"_index":972,"title":{},"body":{"injectables/NoteService.html":{}}}],["notes[0].idmatiere",{"_index":881,"title":{},"body":{"injectables/NoteService.html":{}}}],["notes[0].nommatiere",{"_index":882,"title":{},"body":{"injectables/NoteService.html":{}}}],["noteseleves",{"_index":936,"title":{},"body":{"injectables/NoteService.html":{}}}],["noteseleves.length",{"_index":947,"title":{},"body":{"injectables/NoteService.html":{}}}],["noteseleves.reduce",{"_index":954,"title":{},"body":{"injectables/NoteService.html":{}}}],["noteseleves.reduce((sum",{"_index":949,"title":{},"body":{"injectables/NoteService.html":{}}}],["noteservice",{"_index":714,"title":{"injectables/NoteService.html":{}},"body":{"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"coverage.html":{},"overview.html":{}}}],["notfound",{"_index":1008,"title":{},"body":{"injectables/NoteService.html":{}}}],["notfoundexception",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NoteService.html":{}}}],["notfoundexception(\"mot",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(\"professeur",{"_index":1011,"title":{},"body":{"injectables/NoteService.html":{}}}],["notfoundexception(\"utilisateur",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["nouvelle",{"_index":1013,"title":{},"body":{"injectables/NoteService.html":{}}}],["npm",{"_index":1258,"title":{},"body":{"index.html":{}}}],["null",{"_index":986,"title":{},"body":{"injectables/NoteService.html":{}}}],["nulles",{"_index":979,"title":{},"body":{"injectables/NoteService.html":{}}}],["nuls",{"_index":957,"title":{},"body":{"injectables/NoteService.html":{}}}],["number",{"_index":286,"title":{},"body":{"entities/Classe.html":{},"injectables/ClasseService.html":{},"classes/CreateNoteDto.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"entities/Matiere.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["numericid",{"_index":1108,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["numericidprofesseur",{"_index":966,"title":{},"body":{"injectables/NoteService.html":{}}}],["négative",{"_index":996,"title":{},"body":{"injectables/NoteService.html":{}}}],["object",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["observable",{"_index":478,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["obtenir",{"_index":931,"title":{},"body":{"injectables/NoteService.html":{}}}],["onetomany",{"_index":294,"title":{},"body":{"entities/Classe.html":{},"entities/Eleve.html":{},"entities/Matiere.html":{},"entities/Parent.html":{},"entities/Professeur.html":{}}}],["onetomany(undefined",{"_index":283,"title":{},"body":{"entities/Classe.html":{},"entities/Eleve.html":{},"entities/Matiere.html":{},"entities/Parent.html":{},"entities/Professeur.html":{}}}],["open",{"_index":1277,"title":{},"body":{"index.html":{}}}],["optional",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["options",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ou",{"_index":980,"title":{},"body":{"injectables/NoteService.html":{}}}],["out",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["overview",{"_index":1303,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1214,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["par",{"_index":803,"title":{},"body":{"injectables/NoteService.html":{}}}],["parallèle",{"_index":1004,"title":{},"body":{"injectables/NoteService.html":{}}}],["param",{"_index":327,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["param(\"classeid",{"_index":750,"title":{},"body":{"controllers/NoteController.html":{}}}],["param(\"eleveid",{"_index":738,"title":{},"body":{"controllers/NoteController.html":{}}}],["param(\"matiereid",{"_index":739,"title":{},"body":{"controllers/NoteController.html":{}}}],["param(\"professeurid",{"_index":732,"title":{},"body":{"controllers/NoteController.html":{}}}],["parameters",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["parent",{"_index":82,"title":{"entities/Parent.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"coverage.html":{}}}],["parent'})@apiokresponse({description",{"_index":434,"title":{},"body":{"controllers/EleveController.html":{}}}],["parent.controller",{"_index":1038,"title":{},"body":{"modules/ParentModule.html":{}}}],["parent.dto",{"_index":1135,"title":{},"body":{"classes/UpdateParentDto.html":{}}}],["parent.dto.ts",{"_index":382,"title":{},"body":{"classes/CreateParentDto.html":{},"classes/UpdateParentDto.html":{},"coverage.html":{}}}],["parent.eleves",{"_index":409,"title":{},"body":{"entities/Eleve.html":{}}}],["parent.eleves)@joincolumn({name",{"_index":397,"title":{},"body":{"entities/Eleve.html":{}}}],["parent.motdepasse",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParentService.html":{}}}],["parent.service",{"_index":1030,"title":{},"body":{"controllers/ParentController.html":{},"modules/ParentModule.html":{}}}],["parent/entities/parent.entity",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["parent/parent.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["parentcontroller",{"_index":1023,"title":{"controllers/ParentController.html":{}},"body":{"controllers/ParentController.html":{},"modules/ParentModule.html":{},"coverage.html":{}}}],["parentid",{"_index":438,"title":{},"body":{"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{}}}],["parentmodule",{"_index":62,"title":{"modules/ParentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ParentModule.html":{},"modules.html":{},"overview.html":{}}}],["parentrepository",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ParentService.html":{}}}],["parents",{"_index":1027,"title":{},"body":{"controllers/ParentController.html":{},"injectables/ParentService.html":{}}}],["parentservice",{"_index":1029,"title":{"injectables/ParentService.html":{}},"body":{"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"coverage.html":{},"overview.html":{}}}],["parsefloat(notes[0].sommecoef",{"_index":884,"title":{},"body":{"injectables/NoteService.html":{}}}],["parsefloat(notes[0]?.sommecoef",{"_index":892,"title":{},"body":{"injectables/NoteService.html":{}}}],["parsefloat(notes[0]?.sommeponderee",{"_index":883,"title":{},"body":{"injectables/NoteService.html":{}}}],["parseint(id",{"_index":1109,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["parseint(professeurid",{"_index":967,"title":{},"body":{"injectables/NoteService.html":{}}}],["partialtype",{"_index":1118,"title":{},"body":{"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["partialtype(createclassedto",{"_index":1117,"title":{},"body":{"classes/UpdateClasseDto.html":{}}}],["partialtype(createelevedto",{"_index":1124,"title":{},"body":{"classes/UpdateEleveDto.html":{}}}],["partialtype(creatematieredto",{"_index":1128,"title":{},"body":{"classes/UpdateMatiereDto.html":{}}}],["partialtype(createnotedto",{"_index":1131,"title":{},"body":{"classes/UpdateNoteDto.html":{}}}],["partialtype(createparentdto",{"_index":1134,"title":{},"body":{"classes/UpdateParentDto.html":{}}}],["partialtype(createprofesseurdto",{"_index":1138,"title":{},"body":{"classes/UpdateProfesseurDto.html":{}}}],["partialtype(createutilisateurdto",{"_index":1142,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["pas",{"_index":682,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["pasdenote",{"_index":855,"title":{},"body":{"injectables/NoteService.html":{}}}],["passe",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["passer",{"_index":929,"title":{},"body":{"injectables/NoteService.html":{}}}],["passport",{"_index":579,"title":{},"body":{"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":580,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":572,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["password",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/EleveService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["password123",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch",{"_index":708,"title":{},"body":{"controllers/NoteController.html":{}}}],["patch(\":id",{"_index":752,"title":{},"body":{"controllers/NoteController.html":{}}}],["patch(':id",{"_index":1176,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["patch(':id')@apiparam({name",{"_index":704,"title":{},"body":{"controllers/NoteController.html":{}}}],["path",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["payload",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["payload.sub",{"_index":585,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["payload.username",{"_index":586,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["pcc",{"_index":527,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["pcc.classeid",{"_index":532,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["pcc.professeurid",{"_index":528,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["peut",{"_index":1003,"title":{},"body":{"injectables/NoteService.html":{}}}],["please",{"_index":1286,"title":{},"body":{"index.html":{}}}],["pondérations",{"_index":890,"title":{},"body":{"injectables/NoteService.html":{}}}],["pondérée",{"_index":955,"title":{},"body":{"injectables/NoteService.html":{}}}],["port",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NoteController.html":{},"controllers/UtilisateurController.html":{}}}],["post(\":professeurid",{"_index":728,"title":{},"body":{"controllers/NoteController.html":{}}}],["post(\"login",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apibody({type",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["pour",{"_index":339,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["prefer",{"_index":507,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["prefix",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"controllers/UtilisateurController.html":{}}}],["prenom",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NoteService.html":{},"entities/Utilisateur.html":{}}}],["prenomeleve",{"_index":975,"title":{},"body":{"injectables/NoteService.html":{}}}],["prenomprofesseur",{"_index":838,"title":{},"body":{"injectables/NoteService.html":{}}}],["prettier/prettier",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{}}}],["primarygeneratedcolumn",{"_index":287,"title":{},"body":{"entities/Classe.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Utilisateur.html":{}}}],["primarygeneratedcolumn(\"uuid",{"_index":1152,"title":{},"body":{"entities/Utilisateur.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1146,"title":{},"body":{"entities/Utilisateur.html":{}}}],["private",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["privée",{"_index":842,"title":{},"body":{"injectables/NoteService.html":{}}}],["production",{"_index":1267,"title":{},"body":{"index.html":{}}}],["prof",{"_index":859,"title":{},"body":{"injectables/NoteService.html":{}}}],["prof.idprofesseur",{"_index":872,"title":{},"body":{"injectables/NoteService.html":{}}}],["prof.nomprofesseur",{"_index":885,"title":{},"body":{"injectables/NoteService.html":{}}}],["prof.prenomprofesseur",{"_index":886,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur",{"_index":84,"title":{"entities/Professeur.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"guards/EleveNoteGuard.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"coverage.html":{}}}],["professeur'})@apicreatedresponse({description",{"_index":676,"title":{},"body":{"controllers/NoteController.html":{}}}],["professeur'})@apiokresponse({description",{"_index":669,"title":{},"body":{"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["professeur.classes",{"_index":292,"title":{},"body":{"entities/Classe.html":{}}}],["professeur.controller",{"_index":1094,"title":{},"body":{"modules/ProfesseurModule.html":{}}}],["professeur.dto",{"_index":1139,"title":{},"body":{"classes/UpdateProfesseurDto.html":{}}}],["professeur.dto.ts",{"_index":385,"title":{},"body":{"classes/CreateProfesseurDto.html":{},"classes/UpdateProfesseurDto.html":{},"coverage.html":{}}}],["professeur.id",{"_index":529,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["professeur.id_matiere",{"_index":590,"title":{},"body":{"entities/Matiere.html":{}}}],["professeur.idmatiere",{"_index":824,"title":{},"body":{"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["professeur.motdepasse",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfesseurService.html":{}}}],["professeur.nom",{"_index":851,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur.notes",{"_index":643,"title":{},"body":{"entities/Note.html":{}}}],["professeur.notes)@joincolumn({name",{"_index":638,"title":{},"body":{"entities/Note.html":{}}}],["professeur.prenom",{"_index":819,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur.professeur_nom",{"_index":837,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur.professeur_prenom",{"_index":839,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur.service",{"_index":1078,"title":{},"body":{"controllers/ProfesseurController.html":{},"modules/ProfesseurModule.html":{}}}],["professeur/entities/professeur.entity",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["professeur/professeur.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["professeur_classes",{"_index":821,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur_classes.classeid",{"_index":826,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur_classes.professeurid",{"_index":822,"title":{},"body":{"injectables/NoteService.html":{}}}],["professeur_classes_classe",{"_index":526,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["professeurcontroller",{"_index":1065,"title":{"controllers/ProfesseurController.html":{}},"body":{"controllers/ProfesseurController.html":{},"modules/ProfesseurModule.html":{},"coverage.html":{}}}],["professeurguard",{"_index":719,"title":{"guards/ProfesseurGuard.html":{}},"body":{"controllers/NoteController.html":{},"guards/ProfesseurGuard.html":{},"coverage.html":{}}}],["professeurid",{"_index":518,"title":{},"body":{"guards/EleveNoteGuard.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"guards/ProfesseurGuard.html":{}}}],["professeurmodule",{"_index":63,"title":{"modules/ProfesseurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfesseurModule.html":{},"modules.html":{},"overview.html":{}}}],["professeurrepository",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["professeurs",{"_index":282,"title":{},"body":{"entities/Classe.html":{},"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["professeurs.some",{"_index":536,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["professeurservice",{"_index":758,"title":{"injectables/ProfesseurService.html":{}},"body":{"modules/NoteModule.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"coverage.html":{},"overview.html":{}}}],["profid",{"_index":871,"title":{},"body":{"injectables/NoteService.html":{}}}],["progressive",{"_index":1245,"title":{},"body":{"index.html":{}}}],["project",{"_index":1278,"title":{},"body":{"index.html":{}}}],["promise",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["promise.all",{"_index":969,"title":{},"body":{"injectables/NoteService.html":{}}}],["properties",{"_index":188,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"entities/Classe.html":{},"classes/CreateNoteDto.html":{},"entities/Eleve.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"entities/Utilisateur.html":{},"properties.html":{}}}],["propriétés",{"_index":977,"title":{},"body":{"injectables/NoteService.html":{}}}],["providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["prénom",{"_index":820,"title":{},"body":{"injectables/NoteService.html":{}}}],["qu'enseigne",{"_index":962,"title":{},"body":{"injectables/NoteService.html":{}}}],["query",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"injectables/NoteService.html":{}}}],["querybuilder",{"_index":500,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["querybuilder.getrawone",{"_index":505,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["querybuilder.select(\"eleve.idparent\").where(\"eleve.id",{"_index":508,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["read",{"_index":1287,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{}}}],["recherche",{"_index":1005,"title":{},"body":{"injectables/NoteService.html":{}}}],["reflect",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":307,"title":{},"body":{"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["remove(@param(\"id",{"_index":348,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["remove(@param('id",{"_index":1180,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["remove(id",{"_index":322,"title":{},"body":{"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{}}}],["removes",{"_index":359,"title":{},"body":{"injectables/ClasseService.html":{},"injectables/EleveService.html":{},"injectables/MatiereService.html":{},"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{}}}],["renseignées",{"_index":994,"title":{},"body":{"injectables/NoteService.html":{}}}],["renvoie",{"_index":959,"title":{},"body":{"injectables/NoteService.html":{}}}],["repository",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{},"index.html":{}}}],["request",{"_index":485,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["request.headers[\"authorization",{"_index":488,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["request.params.eleveid",{"_index":495,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["request.params.professeurid",{"_index":1090,"title":{},"body":{"guards/ProfesseurGuard.html":{}}}],["required",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["requête",{"_index":815,"title":{},"body":{"injectables/NoteService.html":{}}}],["reset",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["result",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["result.id",{"_index":506,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["result.idparent",{"_index":510,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["results",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":827,"title":{},"body":{"injectables/NoteService.html":{}}}],["retourner",{"_index":963,"title":{},"body":{"injectables/NoteService.html":{}}}],["return",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"injectables/UtilisateurService.html":{}}}],["role",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"entities/Utilisateur.html":{}}}],["row",{"_index":537,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["row.professeur_id",{"_index":538,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["run",{"_index":1262,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":483,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"dependencies.html":{}}}],["récupère",{"_index":816,"title":{},"body":{"injectables/NoteService.html":{}}}],["récupér",{"_index":1073,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["récupération",{"_index":340,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["récupérer",{"_index":793,"title":{},"body":{"injectables/NoteService.html":{}}}],["récupérée",{"_index":312,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["récupérées",{"_index":691,"title":{},"body":{"controllers/NoteController.html":{}}}],["récupérés",{"_index":320,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["réponse",{"_index":337,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["résultat",{"_index":817,"title":{},"body":{"injectables/NoteService.html":{}}}],["résultats",{"_index":806,"title":{},"body":{"injectables/NoteService.html":{}}}],["réussi",{"_index":455,"title":{},"body":{"controllers/EleveController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["réussie",{"_index":341,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["s'il",{"_index":917,"title":{},"body":{"injectables/NoteService.html":{}}}],["sauvegarde",{"_index":1015,"title":{},"body":{"injectables/NoteService.html":{}}}],["scalable",{"_index":1250,"title":{},"body":{"index.html":{}}}],["schema",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["secret",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["secretorkey",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":850,"title":{},"body":{"injectables/NoteService.html":{}}}],["select(\"eleve.id",{"_index":502,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["select(\"matiere.nom",{"_index":809,"title":{},"body":{"injectables/NoteService.html":{}}}],["select(\"professeur.idmatiere",{"_index":1107,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["select([\"eleve.id",{"_index":552,"title":{},"body":{"injectables/EleveService.html":{}}}],["select([\"matiere.id",{"_index":877,"title":{},"body":{"injectables/NoteService.html":{}}}],["select([\"professeur.id",{"_index":524,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["select([\"professeur.nom",{"_index":818,"title":{},"body":{"injectables/NoteService.html":{}}}],["server",{"_index":1251,"title":{},"body":{"index.html":{}}}],["setclasses(classes",{"_index":1064,"title":{},"body":{"entities/Professeur.html":{}}}],["setcoef(coef",{"_index":647,"title":{},"body":{"entities/Note.html":{}}}],["setdescription('description",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seteleves(eleves",{"_index":302,"title":{},"body":{"entities/Classe.html":{},"entities/Parent.html":{}}}],["setemail(email",{"_index":1158,"title":{},"body":{"entities/Utilisateur.html":{}}}],["setid(id",{"_index":594,"title":{},"body":{"entities/Matiere.html":{}}}],["setidclasse(classe",{"_index":412,"title":{},"body":{"entities/Eleve.html":{}}}],["setideleve(id_eleve",{"_index":656,"title":{},"body":{"entities/Note.html":{}}}],["setidparent(parent",{"_index":415,"title":{},"body":{"entities/Eleve.html":{}}}],["setidprofesseur(id_professeur",{"_index":653,"title":{},"body":{"entities/Note.html":{}}}],["setmatiere(id_matiere",{"_index":1061,"title":{},"body":{"entities/Professeur.html":{}}}],["setmotdepasse(motdepasse",{"_index":1161,"title":{},"body":{"entities/Utilisateur.html":{}}}],["setnom(nom",{"_index":298,"title":{},"body":{"entities/Classe.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Utilisateur.html":{}}}],["setnote(note",{"_index":650,"title":{},"body":{"entities/Note.html":{}}}],["setnotes(notes",{"_index":418,"title":{},"body":{"entities/Eleve.html":{},"entities/Professeur.html":{}}}],["setprenom(prenom",{"_index":1155,"title":{},"body":{"entities/Utilisateur.html":{}}}],["setprofesseurs(professeur",{"_index":597,"title":{},"body":{"entities/Matiere.html":{}}}],["setrole(role",{"_index":1164,"title":{},"body":{"entities/Utilisateur.html":{}}}],["settitle('api",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["si",{"_index":857,"title":{},"body":{"injectables/NoteService.html":{}}}],["side",{"_index":1252,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["sinon",{"_index":958,"title":{},"body":{"injectables/NoteService.html":{}}}],["somme",{"_index":952,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommecoef",{"_index":865,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommecoefficient",{"_index":844,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommecoeftotale",{"_index":853,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommenote",{"_index":845,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommeponderee",{"_index":866,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommepondereetotale",{"_index":854,"title":{},"body":{"injectables/NoteService.html":{}}}],["sommes",{"_index":888,"title":{},"body":{"injectables/NoteService.html":{}}}],["sont",{"_index":956,"title":{},"body":{"injectables/NoteService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"modules/ClasseModule.html":{},"injectables/ClasseService.html":{},"classes/CreateClasseDto.html":{},"classes/CreateEleveDto.html":{},"classes/CreateMatiereDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateParentDto.html":{},"classes/CreateProfesseurDto.html":{},"classes/CreateUtilisateurDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"modules/EleveModule.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"modules/MatiereModule.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"controllers/ParentController.html":{},"modules/ParentModule.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"modules/ProfesseurModule.html":{},"injectables/ProfesseurService.html":{},"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"index.html":{}}}],["sous",{"_index":943,"title":{},"body":{"injectables/NoteService.html":{}}}],["sponsors",{"_index":1281,"title":{},"body":{"index.html":{}}}],["sql",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["sqlquery",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["src/.../main.ts",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../secret.ts",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:15",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:11",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:23",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:62",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":571,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:14",{"_index":576,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:6",{"_index":574,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/auth/secret",{"_index":766,"title":{},"body":{"modules/NoteModule.html":{},"modules/ProfesseurModule.html":{}}}],["src/auth/secret.ts",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/classe/classe.controller.ts",{"_index":304,"title":{},"body":{"controllers/ClasseController.html":{},"coverage.html":{}}}],["src/classe/classe.controller.ts:14",{"_index":315,"title":{},"body":{"controllers/ClasseController.html":{}}}],["src/classe/classe.controller.ts:21",{"_index":321,"title":{},"body":{"controllers/ClasseController.html":{}}}],["src/classe/classe.controller.ts:28",{"_index":326,"title":{},"body":{"controllers/ClasseController.html":{}}}],["src/classe/classe.module.ts",{"_index":352,"title":{},"body":{"modules/ClasseModule.html":{}}}],["src/classe/classe.service.ts",{"_index":354,"title":{},"body":{"injectables/ClasseService.html":{},"coverage.html":{}}}],["src/classe/classe.service.ts:13",{"_index":357,"title":{},"body":{"injectables/ClasseService.html":{}}}],["src/classe/classe.service.ts:5",{"_index":355,"title":{},"body":{"injectables/ClasseService.html":{}}}],["src/classe/classe.service.ts:9",{"_index":356,"title":{},"body":{"injectables/ClasseService.html":{}}}],["src/classe/dto/create",{"_index":361,"title":{},"body":{"classes/CreateClasseDto.html":{},"coverage.html":{}}}],["src/classe/dto/update",{"_index":1116,"title":{},"body":{"classes/UpdateClasseDto.html":{},"coverage.html":{}}}],["src/classe/entities/classe.entity",{"_index":405,"title":{},"body":{"entities/Eleve.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{}}}],["src/classe/entities/classe.entity.ts",{"_index":280,"title":{},"body":{"entities/Classe.html":{},"coverage.html":{}}}],["src/classe/entities/classe.entity.ts:15",{"_index":288,"title":{},"body":{"entities/Classe.html":{}}}],["src/classe/entities/classe.entity.ts:18",{"_index":290,"title":{},"body":{"entities/Classe.html":{}}}],["src/classe/entities/classe.entity.ts:21",{"_index":285,"title":{},"body":{"entities/Classe.html":{}}}],["src/classe/entities/classe.entity.ts:24",{"_index":293,"title":{},"body":{"entities/Classe.html":{}}}],["src/eleve/dto/create",{"_index":364,"title":{},"body":{"classes/CreateEleveDto.html":{},"coverage.html":{}}}],["src/eleve/dto/update",{"_index":1123,"title":{},"body":{"classes/UpdateEleveDto.html":{},"coverage.html":{}}}],["src/eleve/eleve",{"_index":466,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["src/eleve/eleve.controller.ts",{"_index":420,"title":{},"body":{"controllers/EleveController.html":{},"coverage.html":{}}}],["src/eleve/eleve.controller.ts:13",{"_index":428,"title":{},"body":{"controllers/EleveController.html":{}}}],["src/eleve/eleve.controller.ts:20",{"_index":437,"title":{},"body":{"controllers/EleveController.html":{}}}],["src/eleve/eleve.controller.ts:27",{"_index":430,"title":{},"body":{"controllers/EleveController.html":{}}}],["src/eleve/eleve.controller.ts:34",{"_index":440,"title":{},"body":{"controllers/EleveController.html":{}}}],["src/eleve/eleve.controller.ts:40",{"_index":426,"title":{},"body":{"controllers/EleveController.html":{}}}],["src/eleve/eleve.module.ts",{"_index":459,"title":{},"body":{"modules/EleveModule.html":{}}}],["src/eleve/eleve.service",{"_index":765,"title":{},"body":{"modules/NoteModule.html":{},"injectables/NoteService.html":{}}}],["src/eleve/eleve.service.ts",{"_index":539,"title":{},"body":{"injectables/EleveService.html":{},"coverage.html":{}}}],["src/eleve/eleve.service.ts:15",{"_index":544,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/eleve.service.ts:19",{"_index":546,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/eleve.service.ts:27",{"_index":545,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/eleve.service.ts:33",{"_index":543,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/eleve.service.ts:43",{"_index":548,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/eleve.service.ts:48",{"_index":549,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/eleve.service.ts:9",{"_index":542,"title":{},"body":{"injectables/EleveService.html":{}}}],["src/eleve/entities/eleve.entity",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"entities/Note.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{}}}],["src/eleve/entities/eleve.entity.ts",{"_index":389,"title":{},"body":{"entities/Eleve.html":{},"coverage.html":{}}}],["src/eleve/entities/eleve.entity.ts:12",{"_index":396,"title":{},"body":{"entities/Eleve.html":{}}}],["src/eleve/entities/eleve.entity.ts:16",{"_index":399,"title":{},"body":{"entities/Eleve.html":{}}}],["src/eleve/entities/eleve.entity.ts:19",{"_index":401,"title":{},"body":{"entities/Eleve.html":{}}}],["src/jwt",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"controllers/NoteController.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/matiere/dto/create",{"_index":367,"title":{},"body":{"classes/CreateMatiereDto.html":{},"coverage.html":{}}}],["src/matiere/dto/update",{"_index":1127,"title":{},"body":{"classes/UpdateMatiereDto.html":{},"coverage.html":{}}}],["src/matiere/entities/matiere.entity",{"_index":762,"title":{},"body":{"modules/NoteModule.html":{},"injectables/NoteService.html":{},"entities/Professeur.html":{}}}],["src/matiere/entities/matiere.entity.ts",{"_index":587,"title":{},"body":{"entities/Matiere.html":{},"coverage.html":{}}}],["src/matiere/entities/matiere.entity.ts:10",{"_index":589,"title":{},"body":{"entities/Matiere.html":{}}}],["src/matiere/entities/matiere.entity.ts:13",{"_index":591,"title":{},"body":{"entities/Matiere.html":{}}}],["src/matiere/entities/matiere.entity.ts:7",{"_index":588,"title":{},"body":{"entities/Matiere.html":{}}}],["src/matiere/matiere.controller.ts",{"_index":599,"title":{},"body":{"controllers/MatiereController.html":{},"coverage.html":{}}}],["src/matiere/matiere.controller.ts:12",{"_index":601,"title":{},"body":{"controllers/MatiereController.html":{}}}],["src/matiere/matiere.controller.ts:20",{"_index":607,"title":{},"body":{"controllers/MatiereController.html":{}}}],["src/matiere/matiere.controller.ts:29",{"_index":611,"title":{},"body":{"controllers/MatiereController.html":{}}}],["src/matiere/matiere.module.ts",{"_index":625,"title":{},"body":{"modules/MatiereModule.html":{}}}],["src/matiere/matiere.service",{"_index":763,"title":{},"body":{"modules/NoteModule.html":{}}}],["src/matiere/matiere.service.ts",{"_index":627,"title":{},"body":{"injectables/MatiereService.html":{},"coverage.html":{}}}],["src/matiere/matiere.service.ts:13",{"_index":630,"title":{},"body":{"injectables/MatiereService.html":{}}}],["src/matiere/matiere.service.ts:5",{"_index":628,"title":{},"body":{"injectables/MatiereService.html":{}}}],["src/matiere/matiere.service.ts:9",{"_index":629,"title":{},"body":{"injectables/MatiereService.html":{}}}],["src/note/dto/create",{"_index":370,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["src/note/dto/update",{"_index":1130,"title":{},"body":{"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["src/note/entities/note.entity",{"_index":406,"title":{},"body":{"entities/Eleve.html":{},"entities/Professeur.html":{}}}],["src/note/entities/note.entity.ts",{"_index":631,"title":{},"body":{"entities/Note.html":{},"coverage.html":{}}}],["src/note/entities/note.entity.ts:16",{"_index":635,"title":{},"body":{"entities/Note.html":{}}}],["src/note/entities/note.entity.ts:19",{"_index":634,"title":{},"body":{"entities/Note.html":{}}}],["src/note/entities/note.entity.ts:22",{"_index":642,"title":{},"body":{"entities/Note.html":{}}}],["src/note/entities/note.entity.ts:25",{"_index":641,"title":{},"body":{"entities/Note.html":{}}}],["src/note/entities/note.entity.ts:29",{"_index":640,"title":{},"body":{"entities/Note.html":{}}}],["src/note/entities/note.entity.ts:33",{"_index":637,"title":{},"body":{"entities/Note.html":{}}}],["src/note/note.controller.ts",{"_index":658,"title":{},"body":{"controllers/NoteController.html":{},"coverage.html":{}}}],["src/note/note.controller.ts:103",{"_index":701,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:25",{"_index":684,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:35",{"_index":687,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:42",{"_index":688,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:52",{"_index":700,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:64",{"_index":695,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:73",{"_index":692,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:83",{"_index":673,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.controller.ts:96",{"_index":707,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/note/note.module.ts",{"_index":759,"title":{},"body":{"modules/NoteModule.html":{}}}],["src/note/note.service.ts",{"_index":768,"title":{},"body":{"injectables/NoteService.html":{},"coverage.html":{}}}],["src/note/note.service.ts:111",{"_index":780,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:116",{"_index":781,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:122",{"_index":782,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:23",{"_index":774,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:234",{"_index":784,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:315",{"_index":778,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:364",{"_index":779,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:39",{"_index":785,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:434",{"_index":787,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:438",{"_index":786,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/note/note.service.ts:95",{"_index":777,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/parent/dto/create",{"_index":381,"title":{},"body":{"classes/CreateParentDto.html":{},"coverage.html":{}}}],["src/parent/dto/update",{"_index":1133,"title":{},"body":{"classes/UpdateParentDto.html":{},"coverage.html":{}}}],["src/parent/entities/parent.entity",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Eleve.html":{}}}],["src/parent/entities/parent.entity.ts",{"_index":1020,"title":{},"body":{"entities/Parent.html":{},"coverage.html":{}}}],["src/parent/entities/parent.entity.ts:8",{"_index":1022,"title":{},"body":{"entities/Parent.html":{}}}],["src/parent/parent.controller.ts",{"_index":1024,"title":{},"body":{"controllers/ParentController.html":{},"coverage.html":{}}}],["src/parent/parent.controller.ts:12",{"_index":1028,"title":{},"body":{"controllers/ParentController.html":{}}}],["src/parent/parent.controller.ts:18",{"_index":1026,"title":{},"body":{"controllers/ParentController.html":{}}}],["src/parent/parent.module.ts",{"_index":1037,"title":{},"body":{"modules/ParentModule.html":{}}}],["src/parent/parent.service.ts",{"_index":1040,"title":{},"body":{"injectables/ParentService.html":{},"coverage.html":{}}}],["src/parent/parent.service.ts:15",{"_index":1044,"title":{},"body":{"injectables/ParentService.html":{}}}],["src/parent/parent.service.ts:19",{"_index":1043,"title":{},"body":{"injectables/ParentService.html":{}}}],["src/parent/parent.service.ts:29",{"_index":1045,"title":{},"body":{"injectables/ParentService.html":{}}}],["src/parent/parent.service.ts:9",{"_index":1042,"title":{},"body":{"injectables/ParentService.html":{}}}],["src/professeur/dto/create",{"_index":384,"title":{},"body":{"classes/CreateProfesseurDto.html":{},"coverage.html":{}}}],["src/professeur/dto/update",{"_index":1137,"title":{},"body":{"classes/UpdateProfesseurDto.html":{},"coverage.html":{}}}],["src/professeur/entities/professeur.entity",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"guards/EleveNoteGuard.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"modules/NoteModule.html":{},"injectables/NoteService.html":{}}}],["src/professeur/entities/professeur.entity.ts",{"_index":1049,"title":{},"body":{"entities/Professeur.html":{},"coverage.html":{}}}],["src/professeur/entities/professeur.entity.ts:13",{"_index":1054,"title":{},"body":{"entities/Professeur.html":{}}}],["src/professeur/entities/professeur.entity.ts:17",{"_index":1052,"title":{},"body":{"entities/Professeur.html":{}}}],["src/professeur/entities/professeur.entity.ts:20",{"_index":1055,"title":{},"body":{"entities/Professeur.html":{}}}],["src/professeur/professeur.controller.ts",{"_index":1066,"title":{},"body":{"controllers/ProfesseurController.html":{},"coverage.html":{}}}],["src/professeur/professeur.controller.ts:12",{"_index":1070,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["src/professeur/professeur.controller.ts:20",{"_index":1075,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["src/professeur/professeur.controller.ts:27",{"_index":1074,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["src/professeur/professeur.controller.ts:36",{"_index":1077,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["src/professeur/professeur.controller.ts:42",{"_index":1069,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["src/professeur/professeur.guard",{"_index":720,"title":{},"body":{"controllers/NoteController.html":{}}}],["src/professeur/professeur.guard.ts",{"_index":1087,"title":{},"body":{"guards/ProfesseurGuard.html":{},"coverage.html":{}}}],["src/professeur/professeur.guard.ts:5",{"_index":1088,"title":{},"body":{"guards/ProfesseurGuard.html":{}}}],["src/professeur/professeur.guard.ts:9",{"_index":1089,"title":{},"body":{"guards/ProfesseurGuard.html":{}}}],["src/professeur/professeur.module.ts",{"_index":1093,"title":{},"body":{"modules/ProfesseurModule.html":{}}}],["src/professeur/professeur.service",{"_index":764,"title":{},"body":{"modules/NoteModule.html":{},"injectables/NoteService.html":{}}}],["src/professeur/professeur.service.ts",{"_index":1097,"title":{},"body":{"injectables/ProfesseurService.html":{},"coverage.html":{}}}],["src/professeur/professeur.service.ts:15",{"_index":1101,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/professeur/professeur.service.ts:20",{"_index":1102,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/professeur/professeur.service.ts:29",{"_index":1103,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/professeur/professeur.service.ts:36",{"_index":1100,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/professeur/professeur.service.ts:46",{"_index":1104,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/professeur/professeur.service.ts:51",{"_index":1105,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/professeur/professeur.service.ts:9",{"_index":1099,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["src/swagger/swagger.config.ts",{"_index":1211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utilisateur/dto/create",{"_index":387,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"coverage.html":{}}}],["src/utilisateur/dto/update",{"_index":1141,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"coverage.html":{}}}],["src/utilisateur/entities/utilisateur.entity",{"_index":404,"title":{},"body":{"entities/Eleve.html":{},"entities/Parent.html":{},"entities/Professeur.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts",{"_index":1144,"title":{},"body":{"entities/Utilisateur.html":{},"coverage.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts:12",{"_index":1150,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts:15",{"_index":1145,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts:18",{"_index":1148,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts:21",{"_index":1151,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts:6",{"_index":1147,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts:9",{"_index":1149,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/utilisateur/utilisateur.controller.ts",{"_index":1166,"title":{},"body":{"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.module.ts",{"_index":1184,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["src/utilisateur/utilisateur.service.ts",{"_index":1188,"title":{},"body":{"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.service.ts:4",{"_index":1189,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["start",{"_index":1263,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1266,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1268,"title":{},"body":{"index.html":{}}}],["started",{"_index":1244,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1256,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["stay",{"_index":1290,"title":{},"body":{"index.html":{}}}],["stocker",{"_index":907,"title":{},"body":{"injectables/NoteService.html":{}}}],["strategy",{"_index":578,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"classes/CreateNoteDto.html":{},"controllers/EleveController.html":{},"injectables/EleveService.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["succès",{"_index":314,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["succès.'})@apiforbiddenresponse({description",{"_index":678,"title":{},"body":{"controllers/NoteController.html":{}}}],["succès.'})@apinotfoundresponse({description",{"_index":604,"title":{},"body":{"controllers/MatiereController.html":{},"controllers/ProfesseurController.html":{}}}],["suivante",{"_index":930,"title":{},"body":{"injectables/NoteService.html":{}}}],["sum",{"_index":950,"title":{},"body":{"injectables/NoteService.html":{}}}],["sum(note.coef",{"_index":864,"title":{},"body":{"injectables/NoteService.html":{}}}],["super",{"_index":581,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":570,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1282,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suppression",{"_index":347,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ProfesseurController.html":{}}}],["supprim",{"_index":439,"title":{},"body":{"controllers/EleveController.html":{},"controllers/ProfesseurController.html":{}}}],["supprimée",{"_index":325,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{}}}],["supérieure",{"_index":1001,"title":{},"body":{"injectables/NoteService.html":{}}}],["sur",{"_index":812,"title":{},"body":{"injectables/NoteService.html":{}}}],["svg",{"_index":1301,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":338,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"dependencies.html":{}}}],["swaggerconfig",{"_index":1212,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('swagger",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["sélectionne",{"_index":810,"title":{},"body":{"injectables/NoteService.html":{}}}],["t",{"_index":324,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{}}}],["table",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NoteService.html":{},"coverage.html":{}}}],["tableau",{"_index":906,"title":{},"body":{"injectables/NoteService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1271,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1274,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1273,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1270,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1280,"title":{},"body":{"index.html":{}}}],["this.appservice.executesqlfromfile",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(authenticateduser",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.calculatemoyenne(notes",{"_index":841,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.classerepository",{"_index":903,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.classes",{"_index":1063,"title":{},"body":{"entities/Professeur.html":{}}}],["this.classeservice.findall",{"_index":342,"title":{},"body":{"controllers/ClasseController.html":{}}}],["this.classeservice.findone(+id",{"_index":345,"title":{},"body":{"controllers/ClasseController.html":{}}}],["this.classeservice.remove(+id",{"_index":349,"title":{},"body":{"controllers/ClasseController.html":{}}}],["this.coef",{"_index":646,"title":{},"body":{"entities/Note.html":{}}}],["this.eleverepository",{"_index":550,"title":{},"body":{"injectables/EleveService.html":{}}}],["this.eleverepository.createquerybuilder(\"eleve",{"_index":501,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["this.eleverepository.find",{"_index":557,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{}}}],["this.eleverepository.findone",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EleveService.html":{}}}],["this.eleverepository.save(eleve",{"_index":560,"title":{},"body":{"injectables/EleveService.html":{}}}],["this.eleves",{"_index":301,"title":{},"body":{"entities/Classe.html":{},"entities/Parent.html":{}}}],["this.eleveservice.cryptmdpeleve",{"_index":456,"title":{},"body":{"controllers/EleveController.html":{}}}],["this.eleveservice.findall",{"_index":445,"title":{},"body":{"controllers/EleveController.html":{}}}],["this.eleveservice.findone(+id",{"_index":450,"title":{},"body":{"controllers/EleveController.html":{}}}],["this.eleveservice.findone(elevedata.ideleve",{"_index":1007,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.eleveservice.getelevesbyparentid(parentid",{"_index":448,"title":{},"body":{"controllers/EleveController.html":{}}}],["this.eleveservice.remove(+id",{"_index":451,"title":{},"body":{"controllers/EleveController.html":{}}}],["this.email",{"_index":1157,"title":{},"body":{"entities/Utilisateur.html":{}}}],["this.entitymanager.query(sqlquery",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["this.hashpassword(eleve.motdepasse",{"_index":559,"title":{},"body":{"injectables/EleveService.html":{}}}],["this.hashpassword(parent.motdepasse",{"_index":1047,"title":{},"body":{"injectables/ParentService.html":{}}}],["this.hashpassword(professeur.motdepasse",{"_index":1113,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["this.id",{"_index":593,"title":{},"body":{"entities/Matiere.html":{}}}],["this.id_classe",{"_index":411,"title":{},"body":{"entities/Eleve.html":{}}}],["this.id_eleve",{"_index":655,"title":{},"body":{"entities/Note.html":{}}}],["this.id_matiere",{"_index":1060,"title":{},"body":{"entities/Professeur.html":{}}}],["this.id_parent",{"_index":414,"title":{},"body":{"entities/Eleve.html":{}}}],["this.id_professeur",{"_index":652,"title":{},"body":{"entities/Note.html":{}}}],["this.isprofesseur(eleveid",{"_index":521,"title":{},"body":{"guards/EleveNoteGuard.html":{}}}],["this.jwtservice.sign(payload",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":493,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["this.linkbetweenparentandeleve(eleveid",{"_index":498,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["this.matiererepository",{"_index":807,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.matiereservice.findall",{"_index":618,"title":{},"body":{"controllers/MatiereController.html":{}}}],["this.matiereservice.findone(+id",{"_index":619,"title":{},"body":{"controllers/MatiereController.html":{}}}],["this.matiereservice.remove(+id",{"_index":622,"title":{},"body":{"controllers/MatiereController.html":{}}}],["this.motdepasse",{"_index":1160,"title":{},"body":{"entities/Utilisateur.html":{}}}],["this.nom",{"_index":297,"title":{},"body":{"entities/Classe.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Utilisateur.html":{}}}],["this.note",{"_index":649,"title":{},"body":{"entities/Note.html":{}}}],["this.noterepository",{"_index":796,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noterepository.find",{"_index":847,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noterepository.findone",{"_index":848,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.noterepository.save(notes",{"_index":1018,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.notes",{"_index":417,"title":{},"body":{"entities/Eleve.html":{},"entities/Professeur.html":{}}}],["this.noteservice.calculermoyenneclasseelevebyprofesseur",{"_index":751,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.create(createnotedto",{"_index":733,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.findall",{"_index":734,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.findone(+id",{"_index":735,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.getmoyennesbyeleve(eleveid",{"_index":744,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.getmoyennesbyprofesseur(professeurid",{"_index":747,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.getnotesbyeleveandmatiere(eleveid",{"_index":740,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.remove(+id",{"_index":755,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.noteservice.update(+id",{"_index":754,"title":{},"body":{"controllers/NoteController.html":{}}}],["this.parentrepository.find",{"_index":1046,"title":{},"body":{"injectables/ParentService.html":{}}}],["this.parentrepository.findone",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.parentrepository.save(parent",{"_index":1048,"title":{},"body":{"injectables/ParentService.html":{}}}],["this.parentservice.cryptmdpparent",{"_index":1034,"title":{},"body":{"controllers/ParentController.html":{}}}],["this.parentservice.findall",{"_index":1033,"title":{},"body":{"controllers/ParentController.html":{}}}],["this.prenom",{"_index":1154,"title":{},"body":{"entities/Utilisateur.html":{}}}],["this.professeur",{"_index":596,"title":{},"body":{"entities/Matiere.html":{}}}],["this.professeurrepository",{"_index":522,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["this.professeurrepository.find",{"_index":1106,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["this.professeurrepository.findone",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfesseurService.html":{}}}],["this.professeurrepository.save(professeur",{"_index":1114,"title":{},"body":{"injectables/ProfesseurService.html":{}}}],["this.professeurservice.cryptmdpprofesseur",{"_index":1086,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["this.professeurservice.findall",{"_index":1080,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["this.professeurservice.findmatiereofprofesseur(idprofesseur",{"_index":1084,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["this.professeurservice.findone(id",{"_index":1081,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["this.professeurservice.findone(professeurid",{"_index":1010,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.professeurservice.remove(+id",{"_index":1085,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["this.role",{"_index":1163,"title":{},"body":{"entities/Utilisateur.html":{}}}],["this.utilisateurrepository.findone",{"_index":1193,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurservice.create(createutilisateurdto",{"_index":1171,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findall",{"_index":1172,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findone(+id",{"_index":1175,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.remove(+id",{"_index":1181,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.update(+id",{"_index":1178,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["throw",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/NoteService.html":{}}}],["token",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["totalcoef",{"_index":948,"title":{},"body":{"injectables/NoteService.html":{}}}],["totalponderee",{"_index":953,"title":{},"body":{"injectables/NoteService.html":{}}}],["touch",{"_index":1291,"title":{},"body":{"index.html":{}}}],["tous",{"_index":849,"title":{},"body":{"injectables/NoteService.html":{}}}],["tout",{"_index":900,"title":{},"body":{"injectables/NoteService.html":{}}}],["toutes",{"_index":991,"title":{},"body":{"injectables/NoteService.html":{}}}],["tre",{"_index":993,"title":{},"body":{"injectables/NoteService.html":{}}}],["trouv",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NoteService.html":{},"controllers/ProfesseurController.html":{}}}],["trouvé.'})@apinocontentresponse({description",{"_index":1076,"title":{},"body":{"controllers/ProfesseurController.html":{}}}],["trouvée",{"_index":606,"title":{},"body":{"controllers/MatiereController.html":{},"injectables/NoteService.html":{}}}],["trouvée.'})@apinocontentresponse({description",{"_index":608,"title":{},"body":{"controllers/MatiereController.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{},"guards/ProfesseurGuard.html":{}}}],["try",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["twitter",{"_index":1297,"title":{},"body":{"index.html":{}}}],["type",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"controllers/ClasseController.html":{},"injectables/ClasseService.html":{},"classes/CreateNoteDto.html":{},"entities/Eleve.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"entities/Matiere.html":{},"controllers/MatiereController.html":{},"injectables/MatiereService.html":{},"entities/Note.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"controllers/ProfesseurController.html":{},"guards/ProfesseurGuard.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"coverage.html":{}}}],["typeorm",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"entities/Classe.html":{},"entities/Eleve.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"injectables/EleveService.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"injectables/NoteService.html":{},"entities/Parent.html":{},"injectables/ParentService.html":{},"entities/Professeur.html":{},"injectables/ProfesseurService.html":{},"entities/Utilisateur.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EleveModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{}}}],["typeormmodule.forfeature([eleve",{"_index":462,"title":{},"body":{"modules/EleveModule.html":{}}}],["typeormmodule.forfeature([note",{"_index":767,"title":{},"body":{"modules/NoteModule.html":{}}}],["typeormmodule.forfeature([parent",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"modules/ParentModule.html":{}}}],["typeormmodule.forfeature([professeur",{"_index":1096,"title":{},"body":{"modules/ProfesseurModule.html":{}}}],["typeormmodule.forfeature([utilisateur",{"_index":1187,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["typeormmodule.forroot",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1120,"title":{},"body":{"classes/UpdateClasseDto.html":{},"classes/UpdateEleveDto.html":{},"classes/UpdateMatiereDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateParentDto.html":{},"classes/UpdateProfesseurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1255,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":563,"title":{},"body":{"injectables/EleveService.html":{},"injectables/NoteService.html":{},"injectables/ParentService.html":{},"injectables/ProfesseurService.html":{}}}],["undefined",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NoteService.html":{}}}],["undefined})@apiresponse({status",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["une",{"_index":336,"title":{},"body":{"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"controllers/MatiereController.html":{},"controllers/NoteController.html":{},"injectables/NoteService.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{}}}],["unit",{"_index":1269,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EleveController.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"classes/JwtStrategy.html":{},"controllers/ParentController.html":{},"controllers/ProfesseurController.html":{},"injectables/ProfesseurService.html":{}}}],["unlicensed",{"_index":1309,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["update",{"_index":664,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{}}}],["update(@param(\"id",{"_index":753,"title":{},"body":{"controllers/NoteController.html":{}}}],["update(@param('id",{"_index":1177,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["update(id",{"_index":702,"title":{},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{},"injectables/UtilisateurService.html":{}}}],["updateclassedto",{"_index":1115,"title":{"classes/UpdateClasseDto.html":{}},"body":{"classes/UpdateClasseDto.html":{},"coverage.html":{}}}],["updateelevedto",{"_index":1122,"title":{"classes/UpdateEleveDto.html":{}},"body":{"classes/UpdateEleveDto.html":{},"coverage.html":{}}}],["updatematieredto",{"_index":1126,"title":{"classes/UpdateMatiereDto.html":{}},"body":{"classes/UpdateMatiereDto.html":{},"coverage.html":{}}}],["updatenotedto",{"_index":703,"title":{"classes/UpdateNoteDto.html":{}},"body":{"controllers/NoteController.html":{},"injectables/NoteService.html":{},"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["updateparentdto",{"_index":1132,"title":{"classes/UpdateParentDto.html":{}},"body":{"classes/UpdateParentDto.html":{},"coverage.html":{}}}],["updateprofesseurdto",{"_index":1136,"title":{"classes/UpdateProfesseurDto.html":{}},"body":{"classes/UpdateProfesseurDto.html":{},"coverage.html":{}}}],["updates",{"_index":1019,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto",{"_index":1140,"title":{"classes/UpdateUtilisateurDto.html":{}},"body":{"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["useguards",{"_index":709,"title":{},"body":{"controllers/NoteController.html":{}}}],["useguards(elevemoyenneguard",{"_index":741,"title":{},"body":{"controllers/NoteController.html":{}}}],["useguards(elevenoteguard",{"_index":736,"title":{},"body":{"controllers/NoteController.html":{}}}],["useguards(jwtauthguard",{"_index":724,"title":{},"body":{"controllers/NoteController.html":{}}}],["useguards(professeurguard",{"_index":727,"title":{},"body":{"controllers/NoteController.html":{}}}],["user",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["user.email",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["user.id).then",{"_index":499,"title":{},"body":{"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{}}}],["user.motdepasse",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.nom",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.prenom",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"guards/EleveMoyenneGuard.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["user@example.com",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":584,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["username",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"classes/JwtStrategy.html":{}}}],["utf8",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["utilisateur",{"_index":250,"title":{"entities/Utilisateur.html":{}},"body":{"injectables/AuthService.html":{},"entities/Eleve.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["utilisateur.controller",{"_index":1185,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["utilisateur.dto",{"_index":1143,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{}}}],["utilisateur.dto.ts",{"_index":388,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"coverage.html":{}}}],["utilisateur.service",{"_index":1168,"title":{},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{}}}],["utilisateur/utilisateur.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["utilisateurcontroller",{"_index":1165,"title":{"controllers/UtilisateurController.html":{}},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"coverage.html":{}}}],["utilisateurmodule",{"_index":64,"title":{"modules/UtilisateurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["utilisateurservice",{"_index":1167,"title":{"injectables/UtilisateurService.html":{}},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["utilisation",{"_index":792,"title":{},"body":{"injectables/NoteService.html":{}}}],["uuid",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":573,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validate(payload",{"_index":575,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validateuser",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":374,"title":{},"body":{"classes/CreateNoteDto.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":945,"title":{},"body":{"injectables/NoteService.html":{},"coverage.html":{}}}],["variables",{"_index":1310,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClasseController.html":{},"controllers/EleveController.html":{},"guards/EleveNoteGuard.html":{},"guards/ProfesseurGuard.html":{}}}],["version",{"_index":1307,"title":{},"body":{"properties.html":{}}}],["vide",{"_index":922,"title":{},"body":{"injectables/NoteService.html":{}}}],["void",{"_index":299,"title":{},"body":{"entities/Classe.html":{},"entities/Matiere.html":{},"entities/Note.html":{},"entities/Parent.html":{},"entities/Professeur.html":{},"entities/Utilisateur.html":{}}}],["vérifie",{"_index":946,"title":{},"body":{"injectables/NoteService.html":{}}}],["vérifier",{"_index":916,"title":{},"body":{"injectables/NoteService.html":{}}}],["watch",{"_index":1264,"title":{},"body":{"index.html":{}}}],["website",{"_index":1295,"title":{},"body":{"index.html":{}}}],["where(\"classe.id",{"_index":913,"title":{},"body":{"injectables/NoteService.html":{}}}],["where(\"eleve.id",{"_index":533,"title":{},"body":{"guards/EleveNoteGuard.html":{},"injectables/NoteService.html":{}}}],["where(\"eleve.id_parent",{"_index":555,"title":{},"body":{"injectables/EleveService.html":{}}}],["where(\"eleve.idparent",{"_index":503,"title":{},"body":{"guards/EleveMoyenneGuard.html":{}}}],["where(\"matiere.id",{"_index":811,"title":{},"body":{"injectables/NoteService.html":{}}}],["where(\"note.id_eleve",{"_index":869,"title":{},"body":{"injectables/NoteService.html":{}}}],["where(\"professeur.id",{"_index":878,"title":{},"body":{"injectables/NoteService.html":{},"injectables/ProfesseurService.html":{}}}],["world",{"_index":148,"title":{},"body":{"injectables/AppService.html":{}}}],["y",{"_index":895,"title":{},"body":{"injectables/NoteService.html":{}}}],["you'd",{"_index":1285,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClasseModule.html":{},"modules/EleveModule.html":{},"modules/MatiereModule.html":{},"modules/NoteModule.html":{},"modules/ParentModule.html":{},"modules/ProfesseurModule.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                executeSQL\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        executeSQL\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeSQL()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('execute-sql')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  // eslint-disable-next-line no-unused-vars\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get(\"execute-sql\")\n  async executeSQL(): Promise {\n    const result = await this.appService.executeSQLFromFile();\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClasseModule\n\nClasseModule\n\nAppModule -->\n\nClasseModule->AppModule\n\n\n\n\n\nEleveModule\n\nEleveModule\n\nAppModule -->\n\nEleveModule->AppModule\n\n\n\n\n\nMatiereModule\n\nMatiereModule\n\nAppModule -->\n\nMatiereModule->AppModule\n\n\n\n\n\nNoteModule\n\nNoteModule\n\nAppModule -->\n\nNoteModule->AppModule\n\n\n\n\n\nParentModule\n\nParentModule\n\nAppModule -->\n\nParentModule->AppModule\n\n\n\n\n\nProfesseurModule\n\nProfesseurModule\n\nAppModule -->\n\nProfesseurModule->AppModule\n\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ClasseModule\n                        \n                        \n                            EleveModule\n                        \n                        \n                            MatiereModule\n                        \n                        \n                            NoteModule\n                        \n                        \n                            ParentModule\n                        \n                        \n                            ProfesseurModule\n                        \n                        \n                            UtilisateurModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { EleveModule } from \"./eleve/eleve.module\";\nimport { UtilisateurModule } from \"./utilisateur/utilisateur.module\";\nimport { ParentModule } from \"./parent/parent.module\";\nimport { ProfesseurModule } from \"./professeur/professeur.module\";\nimport { ClasseModule } from \"./classe/classe.module\";\nimport { MatiereModule } from \"./matiere/matiere.module\";\nimport { NoteModule } from \"./note/note.module\";\nimport { Eleve } from \"./eleve/entities/eleve.entity\";\nimport { Parent } from \"./parent/entities/parent.entity\";\nimport { Professeur } from \"./professeur/entities/professeur.entity\";\nimport { Classe } from \"./classe/entities/classe.entity\";\nimport { Matiere } from \"./matiere/entities/matiere.entity\";\nimport { Note } from \"./note/entities/note.entity\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { ConfigModule } from \"@nestjs/config\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: '172.26.0.2',\n      port: 3306,\n      username: 'user',\n      password: 'user',\n      database: 'grade-db',\n      entities: [Eleve, Parent, Professeur, Classe, Matiere, Note],\n      synchronize: true,\n    }),         \n    EleveModule,\n    UtilisateurModule,\n    ParentModule,\n    ProfesseurModule,\n    ClasseModule,\n    MatiereModule,\n    NoteModule,\n    AuthModule,\n    PassportModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                executeSQLFromFile\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        executeSQLFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeSQLFromFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport { Injectable } from \"@nestjs/common\";\nimport { EntityManager } from \"typeorm\";\nimport { join } from \"path\";\n\n@Injectable()\nexport class AppService {\n  // eslint-disable-next-line no-unused-vars\n  constructor(private readonly entityManager: EntityManager) {}\n\n  async executeSQLFromFile(): Promise {\n    const filePath = join(__dirname, \"..\", \"SQL\", \"import.sql\");\n    const sqlQuery = fs.readFileSync(filePath, \"utf8\");\n\n    try {\n      const result = await this.entityManager.query(sqlQuery);\n      return result;\n    } catch (error) {\n      throw new Error(`Failed to execute SQL query: ${error.message}`);\n    }\n  }\n\n  getHello(): string {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiBody({type: Object, description: 'Les informations d'identification de l'utilisateur', required: true, schema: undefined})@ApiResponse({status: undefined, description: 'Identifiants invalides'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Controller, Post, Body, HttpException, HttpStatus } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { ApiBody, ApiTags, ApiResponse } from \"@nestjs/swagger\";\n\n@ApiTags('Auth')\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post(\"login\")\n  @ApiBody({\n    type: Object,\n    description: 'Les informations d\\'identification de l\\'utilisateur',\n    required: true,\n    schema: {\n      properties: {\n        email: { type: 'string', example: 'user@example.com' },\n        motDePasse: { type: 'string', example: 'password123' },\n      },\n    },\n  })\n  @ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Identifiants invalides' })\n  async login(@Body() user: { email: string; motDePasse: string }) {\n    const authenticatedUser = await this.authService.validateUser(\n      user.email,\n      user.motDePasse,\n    );\n\n    if (!authenticatedUser) {\n      throw new HttpException(\n        \"Identifiants invalides\",\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n\n    const token = await this.authService.login(authenticatedUser);\n    return token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtAuthGuard\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { AuthController } from \"./auth.controller\";\nimport { JwtModule } from \"@nestjs/jwt\";\n//import { secretOrKey } from \"./secret\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\nimport { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport { Parent } from \"src/parent/entities/parent.entity\";\nimport { JwtAuthGuard } from \"src/jwt-auth/jwt-auth.guard\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { secretOrKey } from \"./secret\";\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, JwtAuthGuard, JwtStrategy],\n  imports: [\n    JwtModule.register({\n      secret: secretOrKey,\n      signOptions: { expiresIn: \"1h\" },\n    }),\n    TypeOrmModule.forFeature([Parent, Professeur, Eleve]),\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, parentRepository: Repository, professeurRepository: Repository, eleveRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        professeurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eleveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, motDePasse: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                motDePasse\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Parent } from \"src/parent/entities/parent.entity\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\nimport { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    @InjectRepository(Parent)\n    private readonly parentRepository: Repository,\n    @InjectRepository(Professeur)\n    private readonly professeurRepository: Repository,\n    @InjectRepository(Eleve)\n    private readonly eleveRepository: Repository,\n  ) {}\n\n  async validateUser(email: string, motDePasse: string): Promise {\n    const parent = await this.parentRepository.findOne({\n      where: { email },\n    });\n    const professeur = await this.professeurRepository.findOne({\n      where: { email },\n    });\n    const eleve = await this.eleveRepository.findOne({\n      where: { email },\n    });\n\n    if (parent) {\n      // Utilisateur trouvé dans la table Parent\n      const motDePasseCorrespondant = await bcrypt.compare(motDePasse, parent.motDePasse);\n      if (!motDePasseCorrespondant) {\n        throw new NotFoundException(\"Mot de passe incorrect\"); // Mot de passe incorrect\n      }\n      return parent;\n    } else if (professeur) {\n      // Utilisateur trouvé dans la table Professeur\n      const motDePasseCorrespondant = await bcrypt.compare(motDePasse, professeur.motDePasse);\n      if (!motDePasseCorrespondant) {\n        throw new NotFoundException(\"Mot de passe incorrect\"); // Mot de passe incorrect\n      }\n      return professeur;\n    } else if (eleve) {\n      // Utilisateur trouvé dans la table Eleve\n      const motDePasseCorrespondant = await bcrypt.compare(motDePasse, eleve.motDePasse);\n      if (!motDePasseCorrespondant) {\n        throw new NotFoundException(\"Mot de passe incorrect\"); // Mot de passe incorrect\n      }\n      return eleve;\n    } else {\n      // Aucun utilisateur trouvé\n      throw new NotFoundException(\"Utilisateur introuvable\"); // Mot de passe incorrect\n    }\n  }\n\n  async login(user: any) {\n    const payload = {\n      id: user.id,\n      nom: user.nom,\n      prenom: user.prenom,\n      role: user.role,\n    };\n    return {\n      // eslint-disable-next-line camelcase\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Classe.html":{"url":"entities/Classe.html","title":"entity - Classe","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Classe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classe/entities/classe.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                eleves\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                professeurs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        eleves\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Eleve[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, eleve => eleve.id_classe)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/classe/entities/classe.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/classe/entities/classe.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/classe/entities/classe.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        professeurs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Professeur[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, professeur => professeur.classes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/classe/entities/classe.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\n// eslint-disable-next-line prettier/prettier\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  OneToMany,\n  ManyToMany,\n} from \"typeorm\";\n\n@Entity()\nexport class Classe {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  nom: string;\n\n  @OneToMany(() => Eleve, (eleve) => eleve.id_classe)\n  eleves: Eleve[];\n\n  @ManyToMany(() => Professeur, (professeur) => professeur.classes)\n  professeurs: Professeur[];\n\n  getNom(): string {\n    return this.nom;\n  }\n\n  setNom(nom: string): void {\n    this.nom = nom;\n  }\n\n  getEleves(): Eleve[] {\n    return this.eleves;\n  }\n\n  setEleves(eleves: Eleve[]): void {\n    this.eleves = eleves;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClasseController.html":{"url":"controllers/ClasseController.html","title":"controller - ClasseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClasseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classe/classe.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                classe\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Liste des classes récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/classe/classe.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', description: 'ID de la classe'})@ApiOkResponse({description: 'Détails de la classe récupérés avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/classe/classe.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', description: 'ID de la classe'})@ApiOkResponse({description: 'La classe a été supprimée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/classe/classe.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // eslint-disable-next-line prettier/prettier\nimport { Controller, Get, Param, Delete } from \"@nestjs/common\";\nimport { ApiTags, ApiOkResponse, ApiParam } from \"@nestjs/swagger\";\nimport { ClasseService } from \"./classe.service\";\n\n@ApiTags('Classe')\n@Controller(\"classe\")\nexport class ClasseController {\n  // eslint-disable-next-line no-unused-vars\n  constructor(private readonly classeService: ClasseService) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Liste des classes récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findAll() {\n    return this.classeService.findAll();\n  }\n\n  @Get(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la classe' })\n  @ApiOkResponse({ description: 'Détails de la classe récupérés avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findOne(@Param(\"id\") id: string) {\n    return this.classeService.findOne(+id);\n  }\n\n  @Delete(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la classe' })\n  @ApiOkResponse({ description: 'La classe a été supprimée avec succès.' }) // Ajouter une réponse Swagger pour la suppression réussie\n  remove(@Param(\"id\") id: string) {\n    return this.classeService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClasseModule.html":{"url":"modules/ClasseModule.html","title":"module - ClasseModule","body":"\n                   \n\n\n\n\n    Modules\n    ClasseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClasseModule\n\n\n\ncluster_ClasseModule_providers\n\n\n\n\nClasseService\n\nClasseService\n\n\n\nClasseModule\n\nClasseModule\n\nClasseModule -->\n\nClasseService->ClasseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/classe/classe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClasseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClasseController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ClasseService } from \"./classe.service\";\nimport { ClasseController } from \"./classe.controller\";\n\n@Module({\n  controllers: [ClasseController],\n  providers: [ClasseService],\n})\nexport class ClasseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClasseService.html":{"url":"injectables/ClasseService.html","title":"injectable - ClasseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClasseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classe/classe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/classe/classe.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/classe/classe.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/classe/classe.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class ClasseService {\n  findAll() {\n    return `This action returns all classe`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} classe`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} classe`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClasseDto.html":{"url":"classes/CreateClasseDto.html","title":"class - CreateClasseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClasseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classe/dto/create-classe.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateClasseDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEleveDto.html":{"url":"classes/CreateEleveDto.html","title":"class - CreateEleveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEleveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/eleve/dto/create-eleve.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEleveDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMatiereDto.html":{"url":"classes/CreateMatiereDto.html","title":"class - CreateMatiereDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMatiereDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/matiere/dto/create-matiere.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMatiereDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNoteDto.html":{"url":"classes/CreateNoteDto.html","title":"class - CreateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/dto/create-note.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coef\n                            \n                            \n                                eleves\n                            \n                            \n                                nom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        coef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/note/dto/create-note.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eleves\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/note/dto/create-note.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/note/dto/create-note.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateNoteDto {\n  coef: number = 0;\n  nom: string = \"\";\n  eleves: { idEleve: number; note: number }[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateParentDto.html":{"url":"classes/CreateParentDto.html","title":"class - CreateParentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateParentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/parent/dto/create-parent.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateParentDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfesseurDto.html":{"url":"classes/CreateProfesseurDto.html","title":"class - CreateProfesseurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfesseurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professeur/dto/create-professeur.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProfesseurDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto.html":{"url":"classes/CreateUtilisateurDto.html","title":"class - CreateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUtilisateurDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Eleve.html":{"url":"entities/Eleve.html","title":"entity - Eleve","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Eleve\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/eleve/entities/eleve.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id_classe\n                            \n                            \n                                    \n                                    \n                                id_parent\n                            \n                            \n                                    \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_classe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Classe\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, classe => classe.eleves)@JoinColumn({name: 'idClasse'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/eleve/entities/eleve.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Parent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parent => parent.eleves)@JoinColumn({name: 'idParent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/eleve/entities/eleve.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Note[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, note => note.id_eleve)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/eleve/entities/eleve.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable camelcase */\nimport { Entity, JoinColumn, ManyToOne, OneToMany } from \"typeorm\";\nimport { Utilisateur } from \"src/utilisateur/entities/utilisateur.entity\";\nimport { Classe } from \"src/classe/entities/classe.entity\";\nimport { Parent } from \"src/parent/entities/parent.entity\";\nimport { Note } from \"src/note/entities/note.entity\";\n\n@Entity()\nexport class Eleve extends Utilisateur {\n  @ManyToOne(() => Classe, (classe) => classe.eleves)\n  @JoinColumn({ name: \"idClasse\" })\n  id_classe: Classe;\n\n  @ManyToOne(() => Parent, (parent) => parent.eleves)\n  @JoinColumn({ name: \"idParent\" })\n  id_parent: Parent;\n\n  @OneToMany(() => Note, (note) => note.id_eleve)\n  notes: Note[];\n\n  getidClasse(): Classe {\n    return this.id_classe;\n  }\n\n  setidClasse(classe: Classe) {\n    this.id_classe = classe;\n  }\n\n  getidParent(): Parent {\n    return this.id_parent;\n  }\n\n  setidParent(parent: Parent) {\n    this.id_parent = parent;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n\n  setNotes(notes: Note[]) {\n    this.notes = notes;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EleveController.html":{"url":"controllers/EleveController.html","title":"controller - EleveController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EleveController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/eleve/eleve.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                eleve\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                CryptmdpEleve\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getElevesByParentId\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        CryptmdpEleve\n                        \n                    \n                \n            \n            \n                \n                        \n                    CryptmdpEleve()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/crypt/mdp')@ApiOkResponse({description: 'Mot de passe de l'élève crypté avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/eleve/eleve.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Liste des élèves récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/eleve/eleve.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', description: 'ID de l'élève'})@ApiOkResponse({description: 'Détails de l'élève récupérés avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/eleve/eleve.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getElevesByParentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getElevesByParentId(parentId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('parent/:idParent')@ApiParam({name: 'idParent', description: 'ID du parent'})@ApiOkResponse({description: 'Liste des élèves associés au parent récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/eleve/eleve.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parentId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', description: 'ID de l'élève'})@ApiOkResponse({description: 'L'élève a été supprimé avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/eleve/eleve.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-unused-vars */\nimport { Controller, Get, Param, Delete } from \"@nestjs/common\";\nimport { ApiTags, ApiOkResponse, ApiParam } from \"@nestjs/swagger\";\nimport { EleveService } from \"./eleve.service\";\n\n@ApiTags('Eleve')\n@Controller(\"eleve\")\nexport class EleveController {\n  constructor(private readonly eleveService: EleveService) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Liste des élèves récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findAll() {\n    return this.eleveService.findAll();\n  }\n\n  @Get(\"parent/:idParent\")\n  @ApiParam({ name: 'idParent', description: 'ID du parent' })\n  @ApiOkResponse({ description: 'Liste des élèves associés au parent récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  async getElevesByParentId(@Param(\"idParent\") parentId: number) {\n    return this.eleveService.getElevesByParentId(parentId);\n  }\n\n  @Get(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de l\\'élève' })\n  @ApiOkResponse({ description: 'Détails de l\\'élève récupérés avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findOne(@Param(\"id\") id: string) {\n    return this.eleveService.findOne(+id);\n  }\n\n  @Delete(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de l\\'élève' })\n  @ApiOkResponse({ description: 'L\\'élève a été supprimé avec succès.' }) // Ajouter une réponse Swagger pour la suppression réussie\n  remove(@Param(\"id\") id: string) {\n    return this.eleveService.remove(+id);\n  }\n\n  @Get(\"/crypt/mdp\")\n  @ApiOkResponse({ description: 'Mot de passe de l\\'élève crypté avec succès.' }) // Ajouter une réponse Swagger pour le cryptage réussi\n  async CryptmdpEleve() {\n    return this.eleveService.CryptMDPEleve();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EleveModule.html":{"url":"modules/EleveModule.html","title":"module - EleveModule","body":"\n                   \n\n\n\n\n    Modules\n    EleveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EleveModule\n\n\n\ncluster_EleveModule_providers\n\n\n\n\nEleveService\n\nEleveService\n\n\n\nEleveModule\n\nEleveModule\n\nEleveModule -->\n\nEleveService->EleveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/eleve/eleve.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EleveService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EleveController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { EleveService } from \"./eleve.service\";\nimport { EleveController } from \"./eleve.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Eleve } from \"./entities/eleve.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Eleve])],\n  controllers: [EleveController],\n  providers: [EleveService],\n})\nexport class EleveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EleveMoyenneGuard.html":{"url":"guards/EleveMoyenneGuard.html","title":"guard - EleveMoyenneGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EleveMoyenneGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/eleve/eleve-moyenne/eleve-moyenne.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Async\n                                findEleveByIdAndParentId\n                            \n                            \n                                    Async\n                                linkBetweenParentAndEleve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, eleveRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/eleve/eleve-moyenne/eleve-moyenne.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eleveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve-moyenne/eleve-moyenne.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEleveByIdAndParentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEleveByIdAndParentId(id: number, idParent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve-moyenne/eleve-moyenne.guard.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idParent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkBetweenParentAndEleve\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkBetweenParentAndEleve(id: number, parentId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve-moyenne/eleve-moyenne.guard.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Observable } from \"rxjs\";\nimport { Repository } from \"typeorm\";\nimport { Eleve } from \"../entities/eleve.entity\";\n\n@Injectable()\nexport class EleveMoyenneGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    @InjectRepository(Eleve)\n    private readonly eleveRepository: Repository,\n  ) {}\n\n  // eslint-disable-next-line prettier/prettier\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    const authHeader = request.headers[\"authorization\"];\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n      return false;\n    }\n\n    const token = authHeader.split(\" \")[1];\n    try {\n      const user = this.jwtService.verify(token);\n      const eleveId = request.params.eleveId;\n\n      if (user && user.role === 3) {\n        if (user.id === eleveId) {\n          return true;\n        }\n      } else if (user && user.role === 2) {\n        return this.linkBetweenParentAndEleve(eleveId, user.id).then();\n      }\n\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async findEleveByIdAndParentId(id: number, idParent: number) {\n    const queryBuilder = this.eleveRepository.createQueryBuilder(\"eleve\");\n    queryBuilder\n      .select(\"eleve.id\")\n      .where(\"eleve.idParent = :idParent\", { idParent })\n      .andWhere(\"eleve.id = :id\", { id });\n    const result = await queryBuilder.getRawOne();\n    return result.id;\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  async linkBetweenParentAndEleve(id: number, parentId: number): Promise {\n    // eslint-disable-next-line prefer-const\n    let queryBuilder = this.eleveRepository.createQueryBuilder(\"eleve\");\n    queryBuilder.select(\"eleve.idParent\").where(\"eleve.id = :id\", { id });\n    const result = await queryBuilder.getRawOne();\n    // eslint-disable-next-line eqeqeq\n    if (result.idParent == parentId) {\n      return true;\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EleveNoteGuard.html":{"url":"guards/EleveNoteGuard.html","title":"guard - EleveNoteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EleveNoteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/eleve/eleve-note/eleve-note.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Async\n                                isProfesseur\n                            \n                            \n                                    Async\n                                linkBetweenParentAndEleve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, eleveRepository: Repository, professeurRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/eleve/eleve-note/eleve-note.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eleveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        professeurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve-note/eleve-note.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    isProfesseur(eleveId: number, professeurId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve-note/eleve-note.guard.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eleveId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                professeurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkBetweenParentAndEleve\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkBetweenParentAndEleve(id: number, parentId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve-note/eleve-note.guard.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { Observable } from \"rxjs\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Eleve } from \"../entities/eleve.entity\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\n\n@Injectable()\nexport class EleveNoteGuard implements CanActivate {\n  // eslint-disable-next-line no-unused-vars\n  constructor(\n    private readonly jwtService: JwtService,\n    @InjectRepository(Eleve)\n    private readonly eleveRepository: Repository,\n    @InjectRepository(Professeur)\n    private readonly professeurRepository: Repository,\n  ) {}\n\n  // eslint-disable-next-line prettier/prettier\n canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    const authHeader = request.headers[\"authorization\"];\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n      return false;\n    }\n\n    const token = authHeader.split(\" \")[1];\n    try {\n      const user = this.jwtService.verify(token);\n      const eleveId = request.params.eleveId;\n\n      if (user && user.role === 3) {\n        if (user.id === eleveId) {\n          return true;\n        }\n      } else if (user && user.role === 2) {\n        return this.linkBetweenParentAndEleve(eleveId, user.id).then();\n      } else if (user && user.role === 1) {\n        return this.isProfesseur(eleveId, user.id).then();\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  async linkBetweenParentAndEleve(id: number, parentId: number): Promise {\n    // eslint-disable-next-line prefer-const\n    let queryBuilder = this.eleveRepository.createQueryBuilder(\"eleve\");\n    queryBuilder.select(\"eleve.idParent\").where(\"eleve.id = :id\", { id });\n    const result = await queryBuilder.getRawOne();\n    // eslint-disable-next-line eqeqeq\n    if (result.idParent == parentId) {\n      return true;\n    }\n    return false;\n  }\n\n  async isProfesseur(eleveId: number, professeurId: number) {\n    const professeurs = await this.professeurRepository\n      .createQueryBuilder(\"professeur\")\n      .select([\"professeur.id\"])\n      .innerJoin(\n        \"professeur_classes_classe\",\n        \"pcc\",\n        \"pcc.professeurId = professeur.id\",\n      )\n      .innerJoin(\"eleve\", \"eleve\", \"eleve.idClasse = pcc.classeId\")\n      .where(\"eleve.id = :eleveId\", { eleveId })\n      .getRawMany();\n    const estPresent = professeurs.some(\n      (row) => row.professeur_id === professeurId,\n    );\n    return estPresent;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EleveService.html":{"url":"injectables/EleveService.html","title":"injectable - EleveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EleveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/eleve/eleve.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CryptMDPEleve\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getElevesByParentId\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eleveRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/eleve/eleve.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eleveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CryptMDPEleve\n                        \n                    \n                \n            \n            \n                \n                        \n                    CryptMDPEleve()\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getElevesByParentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getElevesByParentId(parentId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parentId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/eleve/eleve.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Eleve } from \"./entities/eleve.entity\";\nimport { Repository } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class EleveService {\n  constructor(\n    @InjectRepository(Eleve)\n    private readonly eleveRepository: Repository,\n  ) {}\n\n  findAll() {\n    return `This action returns all eleve`;\n  }\n\n  async getElevesByParentId(parentId: number): Promise {\n    return this.eleveRepository\n      .createQueryBuilder(\"eleve\")\n      .select([\"eleve.id\", \"eleve.nom\", \"eleve.prenom\"])\n      .where(\"eleve.id_parent = :parentId\", { parentId })\n      .getMany();\n  }\n\n  findOne(id: number) {\n    return this.eleveRepository.findOne({\n      where: { id },\n    });\n  }\n\n  async CryptMDPEleve() {\n    const eleves = await this.eleveRepository.find();\n    for (const eleve of eleves) {\n      const hashedPassword = await this.hashPassword(eleve.motDePasse);\n      eleve.motDePasse = hashedPassword;\n      await this.eleveRepository.save(eleve);\n    }\n  }\n\n  // Fonction pour hacher un mot de passe\n  async hashPassword(password: string): Promise {\n    const hashedPassword = await bcrypt.hash(password, 10);\n    return hashedPassword;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} eleve`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard(\"jwt\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jwt-auth/jwt-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(\"jwt\") {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, \"jwt\")\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { secretOrKey } from \"./secret\";\n\n// @Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, \"jwt\") {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: secretOrKey,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Matiere.html":{"url":"entities/Matiere.html","title":"entity - Matiere","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Matiere\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/matiere/entities/matiere.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                professeur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/matiere/entities/matiere.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/matiere/entities/matiere.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        professeur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Professeur[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, professeur => professeur.id_matiere)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/matiere/entities/matiere.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Professeur } from \"src/professeur/entities/professeur.entity\";\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany } from \"typeorm\";\n\n@Entity()\nexport class Matiere {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  nom: string;\n\n  @OneToMany(() => Professeur, (professeur) => professeur.id_matiere)\n  professeur: Professeur[];\n\n  getId(): number {\n    return this.id;\n  }\n\n  setId(id: number): void {\n    this.id = id;\n  }\n\n  getNom(): string {\n    return this.nom;\n  }\n\n  setNom(nom: string): void {\n    this.nom = nom;\n  }\n\n  getProfesseurs(): Professeur[] {\n    return this.professeur;\n  }\n\n  setProfesseurs(professeur: Professeur[]): void {\n    this.professeur = professeur;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MatiereController.html":{"url":"controllers/MatiereController.html","title":"controller - MatiereController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MatiereController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/matiere/matiere.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                matiere\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Liste des matières récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/matiere/matiere.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', description: 'ID de la matière'})@ApiOkResponse({description: 'Détails de la matière récupérés avec succès.'})@ApiNotFoundResponse({description: 'Matière non trouvée.'})\n                \n            \n\n                    \n                        \n                            Defined in src/matiere/matiere.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', description: 'ID de la matière'})@ApiOkResponse({description: 'La matière a été supprimée avec succès.'})@ApiNotFoundResponse({description: 'Matière non trouvée.'})@ApiNoContentResponse({description: 'Aucun contenu. La matière a déjà été supprimée.'})\n                \n            \n\n                    \n                        \n                            Defined in src/matiere/matiere.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Delete } from \"@nestjs/common\";\nimport { ApiTags, ApiParam, ApiOkResponse, ApiNotFoundResponse, ApiNoContentResponse } from \"@nestjs/swagger\";\nimport { MatiereService } from \"./matiere.service\";\n\n@ApiTags('Matiere')\n@Controller(\"matiere\")\nexport class MatiereController {\n  constructor(private readonly matiereService: MatiereService) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Liste des matières récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findAll() {\n    return this.matiereService.findAll();\n  }\n\n  @Get(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la matière' })\n  @ApiOkResponse({ description: 'Détails de la matière récupérés avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  @ApiNotFoundResponse({ description: 'Matière non trouvée.' }) // Ajouter une réponse Swagger pour la matière non trouvée\n  findOne(@Param(\"id\") id: string) {\n    return this.matiereService.findOne(+id);\n  }\n\n  @Delete(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la matière' })\n  @ApiOkResponse({ description: 'La matière a été supprimée avec succès.' }) // Ajouter une réponse Swagger pour la suppression réussie\n  @ApiNotFoundResponse({ description: 'Matière non trouvée.' }) // Ajouter une réponse Swagger pour la matière non trouvée\n  @ApiNoContentResponse({ description: 'Aucun contenu. La matière a déjà été supprimée.' }) // Ajouter une réponse Swagger pour l'absence de contenu lors de la suppression\n  remove(@Param(\"id\") id: string) {\n    return this.matiereService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatiereModule.html":{"url":"modules/MatiereModule.html","title":"module - MatiereModule","body":"\n                   \n\n\n\n\n    Modules\n    MatiereModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatiereModule\n\n\n\ncluster_MatiereModule_providers\n\n\n\n\nMatiereService\n\nMatiereService\n\n\n\nMatiereModule\n\nMatiereModule\n\nMatiereModule -->\n\nMatiereService->MatiereModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/matiere/matiere.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MatiereService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MatiereController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MatiereService } from \"./matiere.service\";\nimport { MatiereController } from \"./matiere.controller\";\n\n@Module({\n  controllers: [MatiereController],\n  providers: [MatiereService],\n})\nexport class MatiereModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatiereService.html":{"url":"injectables/MatiereService.html","title":"injectable - MatiereService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatiereService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/matiere/matiere.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/matiere/matiere.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/matiere/matiere.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/matiere/matiere.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class MatiereService {\n  findAll() {\n    return `This action returns all matiere`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} matiere`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} matiere`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Note.html":{"url":"entities/Note.html","title":"entity - Note","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/entities/note.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                coef\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                id_eleve\n                            \n                            \n                                    \n                                    \n                                id_professeur\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/entities/note.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/entities/note.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_eleve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Eleve\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, eleve => eleve.notes)@JoinColumn({name: 'idEleve'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/entities/note.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_professeur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Professeur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, professeur => professeur.notes)@JoinColumn({name: 'idProfesseur'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/entities/note.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/entities/note.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/note/entities/note.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable camelcase */\nimport { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\n// eslint-disable-next-line prettier/prettier\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n} from \"typeorm\";\n\n@Entity()\nexport class Note {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  coef: number;\n\n  @Column()\n  note: number;\n\n  @Column()\n  nom: string;\n\n  @ManyToOne(() => Professeur, (professeur) => professeur.notes)\n  @JoinColumn({ name: \"idProfesseur\" })\n  id_professeur: Professeur;\n\n  @ManyToOne(() => Eleve, (eleve) => eleve.notes)\n  @JoinColumn({ name: \"idEleve\" })\n  id_eleve: Eleve;\n\n  getCoef(): number {\n    return this.coef;\n  }\n\n  setCoef(coef: number): void {\n    this.coef = coef;\n  }\n\n  getNote(): number {\n    return this.note;\n  }\n\n  setNote(note: number): void {\n    this.note = note;\n  }\n\n  getNom(): string {\n    return this.nom;\n  }\n\n  setNom(nom: string): void {\n    this.nom = nom;\n  }\n\n  getidProfesseur(): Professeur {\n    return this.id_professeur;\n  }\n\n  setidProfesseur(id_professeur: Professeur) {\n    this.id_professeur = id_professeur;\n  }\n\n  getidEleve(): Eleve {\n    return this.id_eleve;\n  }\n\n  setidEleve(id_eleve: Eleve) {\n    this.id_eleve = id_eleve;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NoteController.html":{"url":"controllers/NoteController.html","title":"controller - NoteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NoteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/note.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                note\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                calculerMoyenneClasseEleveByProfesseur\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getMoyenneClassesByProfesseur\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getMoyennesByEleve\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getNotesByEleveAndMatiere\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        calculerMoyenneClasseEleveByProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculerMoyenneClasseEleveByProfesseur(classeid: number, professeurId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Professeur')@UseGuards(ProfesseurGuard)@Get('moyenneEleve/classe/:classeid/professeur/:professeurId')@ApiParam({name: 'classeid', type: 'number', description: 'ID de la classe'})@ApiParam({name: 'professeurId', description: 'ID du professeur'})@ApiOkResponse({description: 'Moyennes de classe et de l'élève calculées avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classeid\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                professeurId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNoteDto: CreateNoteDto, professeurId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Professeur')@UseGuards(ProfesseurGuard)@Post(':professeurId')@ApiParam({name: 'professeurId', description: 'ID du professeur'})@ApiCreatedResponse({description: 'La note a été créée avec succès.'})@ApiForbiddenResponse({description: 'Accès interdit. L'utilisateur n'est pas autorisé.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                professeurId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiQuery({name: 'id', type: 'number', description: 'ID de la note'})@ApiOkResponse({description: 'Liste des notes récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', description: 'ID de la note'})@ApiOkResponse({description: 'Détails de la note récupérés avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getMoyenneClassesByProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMoyenneClassesByProfesseur(professeurId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Professeur')@UseGuards(ProfesseurGuard)@Get('professeur/:professeurId/moyenneClasse')@ApiParam({name: 'professeurId', description: 'ID du professeur'})@ApiOkResponse({description: 'Moyennes de classe récupérées avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                professeurId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getMoyennesByEleve\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMoyennesByEleve(eleveId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Eleve')@UseGuards(EleveMoyenneGuard)@Get('eleve/:eleveId/moyennes')@ApiParam({name: 'eleveId', description: 'ID de l'élève'})@ApiOkResponse({description: 'Moyennes de l'élève récupérées avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eleveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        getNotesByEleveAndMatiere\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNotesByEleveAndMatiere(eleveId: string, matiereId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Eleve')@UseGuards(EleveNoteGuard)@Get('eleve/:eleveId/matiere/:matiereId')@ApiParam({name: 'eleveId', description: 'ID de l'élève'})@ApiParam({name: 'matiereId', type: 'number', description: 'ID de la matière'})@ApiOkResponse({description: 'Notes de l'élève récupérées avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eleveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                matiereId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', description: 'ID de la note'})@ApiOkResponse({description: 'La note a été supprimée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateNoteDto: UpdateNoteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', description: 'ID de la note'})@ApiOkResponse({description: 'La note a été mise à jour avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/note/note.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNoteDto\n                                            \n                                                            UpdateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // eslint-disable-next-line prettier/prettier\nimport { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from \"@nestjs/common\";\nimport { ApiTags, ApiBearerAuth, ApiParam, ApiQuery, ApiCreatedResponse, ApiForbiddenResponse, ApiOkResponse } from \"@nestjs/swagger\";\nimport { NoteService } from \"./note.service\";\nimport { CreateNoteDto } from \"./dto/create-note.dto\";\nimport { UpdateNoteDto } from \"./dto/update-note.dto\";\nimport { JwtAuthGuard } from \"src/jwt-auth/jwt-auth.guard\";\nimport { ProfesseurGuard } from \"src/professeur/professeur.guard\";\nimport { EleveMoyenneGuard } from \"src/eleve/eleve-moyenne/eleve-moyenne.guard\";\nimport { EleveNoteGuard } from \"src/eleve/eleve-note/eleve-note.guard\";\n\n@ApiBearerAuth()\n@ApiTags('Note')\n@UseGuards(JwtAuthGuard)\n@Controller(\"note\")\nexport class NoteController {\n  constructor(private readonly noteService: NoteService) {}\n\n  @ApiTags('Professeur')\n  @UseGuards(ProfesseurGuard)\n  @Post(\":professeurId\")\n  @ApiParam({ name: 'professeurId', description: 'ID du professeur' })\n  @ApiCreatedResponse({ description: 'La note a été créée avec succès.' }) // Ajouter une réponse Swagger pour la création réussie\n  @ApiForbiddenResponse({ description: 'Accès interdit. L\\'utilisateur n\\'est pas autorisé.' }) // Ajouter une réponse Swagger pour l'accès interdit\n  create(\n    @Body() createNoteDto: CreateNoteDto,\n    @Param(\"professeurId\") professeurId: string,\n  ) {\n    return this.noteService.create(createNoteDto, professeurId);\n  }\n\n  @Get()\n  @ApiQuery({ name: 'id', type: 'number', description: 'ID de la note' })\n  @ApiOkResponse({ description: 'Liste des notes récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findAll() {\n    return this.noteService.findAll();\n  }\n\n  @Get(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la note' })\n  @ApiOkResponse({ description: 'Détails de la note récupérés avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findOne(@Param(\"id\") id: number) {\n    return this.noteService.findOne(+id);\n  }\n\n  @ApiTags('Eleve')\n  @UseGuards(EleveNoteGuard)\n  @Get(\"eleve/:eleveId/matiere/:matiereId\")\n  @ApiParam({ name: 'eleveId', description: 'ID de l\\'élève' })\n  @ApiParam({ name: 'matiereId', type: 'number', description: 'ID de la matière' })\n  @ApiOkResponse({ description: 'Notes de l\\'élève récupérées avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  getNotesByEleveAndMatiere(\n    @Param(\"eleveId\") eleveId: string,\n    @Param(\"matiereId\") matiereId: number,\n  ) {\n    return this.noteService.getNotesByEleveAndMatiere(eleveId, +matiereId);\n  }\n\n  @ApiTags('Eleve')\n  @UseGuards(EleveMoyenneGuard)\n  @Get(\"eleve/:eleveId/moyennes\")\n  @ApiParam({ name: 'eleveId', description: 'ID de l\\'élève' })\n  @ApiOkResponse({ description: 'Moyennes de l\\'élève récupérées avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  getMoyennesByEleve(@Param(\"eleveId\") eleveId: string) {\n    return this.noteService.getMoyennesByEleve(eleveId);\n  }\n\n  @ApiTags('Professeur')\n  @UseGuards(ProfesseurGuard)\n  @Get(\"professeur/:professeurId/moyenneClasse\")\n  @ApiParam({ name: 'professeurId', description: 'ID du professeur' })\n  @ApiOkResponse({ description: 'Moyennes de classe récupérées avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  getMoyenneClassesByProfesseur(@Param(\"professeurId\") professeurId: string) {\n    return this.noteService.getMoyennesByProfesseur(professeurId);\n  }\n\n  @ApiTags('Professeur')\n  @UseGuards(ProfesseurGuard)\n  @Get(\"moyenneEleve/classe/:classeid/professeur/:professeurId\")\n  @ApiParam({ name: 'classeid', type: 'number', description: 'ID de la classe' })\n  @ApiParam({ name: 'professeurId', description: 'ID du professeur' })\n  @ApiOkResponse({ description: 'Moyennes de classe et de l\\'élève calculées avec succès.' }) // Ajouter une réponse Swagger pour le calcul réussi\n  calculerMoyenneClasseEleveByProfesseur(\n    @Param(\"classeid\") classeid: number,\n    @Param(\"professeurId\") professeurId: string,\n  ) {\n    return this.noteService.calculerMoyenneClasseEleveByProfesseur(\n      classeid,\n      professeurId,\n    );\n  }\n\n  @Patch(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la note' })\n  @ApiOkResponse({ description: 'La note a été mise à jour avec succès.' }) // Ajouter une réponse Swagger pour la mise à jour réussie\n  update(@Param(\"id\") id: number, @Body() updateNoteDto: UpdateNoteDto) {\n    return this.noteService.update(+id, updateNoteDto);\n  }\n\n  @Delete(\":id\")\n  @ApiParam({ name: 'id', description: 'ID de la note' })\n  @ApiOkResponse({ description: 'La note a été supprimée avec succès.' }) // Ajouter une réponse Swagger pour la suppression réussie\n  remove(@Param(\"id\") id: number) {\n    return this.noteService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoteModule.html":{"url":"modules/NoteModule.html","title":"module - NoteModule","body":"\n                   \n\n\n\n\n    Modules\n    NoteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NoteModule\n\n\n\ncluster_NoteModule_providers\n\n\n\n\nEleveService\n\nEleveService\n\n\n\nNoteModule\n\nNoteModule\n\nNoteModule -->\n\nEleveService->NoteModule\n\n\n\n\n\nMatiereService\n\nMatiereService\n\nNoteModule -->\n\nMatiereService->NoteModule\n\n\n\n\n\nNoteService\n\nNoteService\n\nNoteModule -->\n\nNoteService->NoteModule\n\n\n\n\n\nProfesseurService\n\nProfesseurService\n\nNoteModule -->\n\nProfesseurService->NoteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/note/note.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EleveService\n                        \n                        \n                            MatiereService\n                        \n                        \n                            NoteService\n                        \n                        \n                            ProfesseurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NoteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { NoteService } from \"./note.service\";\nimport { NoteController } from \"./note.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Note } from \"./entities/note.entity\";\nimport { Matiere } from \"src/matiere/entities/matiere.entity\";\nimport { MatiereService } from \"src/matiere/matiere.service\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\nimport { ProfesseurService } from \"src/professeur/professeur.service\";\nimport { Classe } from \"src/classe/entities/classe.entity\";\nimport { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport { EleveService } from \"src/eleve/eleve.service\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { secretOrKey } from \"src/auth/secret\";\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: secretOrKey,\n      signOptions: { expiresIn: \"1h\" },\n    }),\n    TypeOrmModule.forFeature([Note, Matiere, Professeur, Classe, Eleve]),\n  ],\n  controllers: [NoteController],\n  providers: [NoteService, MatiereService, ProfesseurService, EleveService],\n})\nexport class NoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoteService.html":{"url":"injectables/NoteService.html","title":"injectable - NoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/note.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateMoyenne\n                            \n                            \n                                    Async\n                                calculerMoyenneClasseEleveByProfesseur\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getMoyennesByEleve\n                            \n                            \n                                    Async\n                                getMoyennesByProfesseur\n                            \n                            \n                                    Async\n                                getNotesByEleveAndMatiere\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(noteRepository: Repository, matiereRepository: Repository, professeurRepository: Repository, classeRepository: Repository, eleveRepository: Repository, eleveService: EleveService, professeurService: ProfesseurService)\n                    \n                \n                        \n                            \n                                Defined in src/note/note.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        noteRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matiereRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        professeurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eleveRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eleveService\n                                                  \n                                                        \n                                                                        EleveService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        professeurService\n                                                  \n                                                        \n                                                                        ProfesseurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateMoyenne\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateMoyenne(notes: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notes\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculerMoyenneClasseEleveByProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculerMoyenneClasseEleveByProfesseur(classeId: number, professeurId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:315\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                professeurId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNoteDto: CreateNoteDto, professeurId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:364\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                professeurId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMoyennesByEleve\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMoyennesByEleve(eleveId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eleveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMoyennesByProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMoyennesByProfesseur(professeurId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                professeurId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNotesByEleveAndMatiere\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNotesByEleveAndMatiere(eleveId: string, matiereId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eleveId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                matiereId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:438\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateNoteDto: UpdateNoteDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/note/note.service.ts:434\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNoteDto\n                                            \n                                                            UpdateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { CreateNoteDto } from \"./dto/create-note.dto\";\nimport { UpdateNoteDto } from \"./dto/update-note.dto\";\nimport { Note } from \"./entities/note.entity\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Matiere } from \"src/matiere/entities/matiere.entity\";\nimport { Professeur } from \"src/professeur/entities/professeur.entity\";\nimport { Classe } from \"src/classe/entities/classe.entity\";\nimport { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport { EleveService } from \"src/eleve/eleve.service\";\nimport { ProfesseurService } from \"src/professeur/professeur.service\";\n\n@Injectable()\nexport class NoteService {\n  constructor(\n    @InjectRepository(Note)\n    private readonly noteRepository: Repository,\n    @InjectRepository(Matiere)\n    private readonly matiereRepository: Repository,\n    @InjectRepository(Professeur)\n    private readonly professeurRepository: Repository,\n    @InjectRepository(Classe)\n    private readonly classeRepository: Repository,\n    @InjectRepository(Eleve)\n    private readonly eleveRepository: Repository,\n    private readonly eleveService: EleveService,\n    private readonly professeurService: ProfesseurService,\n  ) {}\n\n  async getNotesByEleveAndMatiere(\n    eleveId: string,\n    matiereId: number,\n  ): Promise {\n    // Utilisation du QueryBuilder pour récupérer les notes pour un élève et une matière donnés\n    const notes = await this.noteRepository\n      .createQueryBuilder(\"note\")\n      .leftJoinAndSelect(\"note.id_professeur\", \"professeur\") // Jointure avec la table des professeurs\n      .leftJoinAndSelect(\"professeur.id_matiere\", \"matiere\") // Jointure avec la table des matières\n      .leftJoinAndSelect(\"note.id_eleve\", \"eleve\") // Jointure avec la table des élèves\n      .where(\"eleve.id = :eleveId\", { eleveId }) // Filtre par l'ID de l'élève\n      .andWhere(\"matiere.id = :matiereId\", { matiereId }) // Filtre par l'ID de la matière\n      .getMany(); // Récupération des résultats\n\n    // Récupération du nom de la matière\n    const matiere = await this.matiereRepository\n      .createQueryBuilder(\"matiere\")\n      .select(\"matiere.nom\") // Sélectionne le nom de la matière\n      .where(\"matiere.id = :id\", { id: matiereId }) // Filtre sur l'ID de la matière\n      .getRawOne(); // Exécute la requête et récupère le résultat\n\n    // Récupération du prenom et le nom du professeur\n    const professeur = await this.professeurRepository\n      .createQueryBuilder(\"professeur\")\n      .select([\"professeur.nom\", \"professeur.prenom\"]) // Sélectionne le nom et le prénom du professeur\n      .innerJoin(\n        \"professeur_classes_classe\",\n        \"professeur_classes\",\n        \"professeur.id = professeur_classes.professeurId\",\n      ) // Jointure avec la table professeur_classes_classe\n      .innerJoin(\"matiere\", \"matiere\", \"professeur.idMatiere = matiere.id\") // Jointure avec la table matiere\n      .innerJoin(\n        \"eleve\",\n        \"eleve\",\n        \"eleve.idClasse = professeur_classes.classeId\",\n      ) // Jointure avec la table eleve\n      .where(\"eleve.id = :eleveId\", { eleveId }) // Filtre sur l'ID de l'élève\n      .andWhere(\"matiere.id = :matiereId\", { matiereId }) // Filtre sur l'ID de la matière\n      .getRawOne(); // Exécute la requête et récupère le résultat\n\n    return {\n      // Retourne les notes et les informations associées\n      notes: notes.map((note) => ({\n        id: note.id,\n        coef: note.coef,\n        note: note.note,\n        nom: note.nom,\n      })),\n      NomMatiere: matiere.matiere_nom,\n      nomProfesseur: professeur.professeur_nom,\n      prenomProfesseur: professeur.professeur_prenom,\n      moyenne: this.calculateMoyenne(notes), // Calcul de la moyenne\n    };\n  }\n\n  // Fonction privée pour calculer la moyenne\n  private calculateMoyenne(notes: any[]): any {\n    let sommeCoefficient = 0;\n    let sommeNote = 0;\n\n    if (notes.length > 0) {\n      for (const note of notes) {\n        sommeCoefficient += note.coef;\n        sommeNote += note.coef * note.note;\n      }\n\n      return sommeCoefficient !== 0 ? sommeNote / sommeCoefficient : 0;\n    } else {\n      return \"pas de note\";\n    }\n  }\n\n  findAll() {\n    return this.noteRepository.find();\n    //return `This action returns all note`;\n  }\n\n  async findOne(id: number): Promise {\n    return this.noteRepository.findOne({\n      where: { id },\n    });\n  }\n\n  async getMoyennesByEleve(eleveId: string): Promise {\n    // Récupérer tous les professeurs associés à l'élève\n    const professeurs = await this.professeurRepository\n      .createQueryBuilder(\"professeur\")\n      .select([\n        \"professeur.id as idProfesseur\",\n        \"professeur.prenom as prenomProfesseur\",\n        \"professeur.nom as nomProfesseur\",\n      ])\n      .innerJoin(\n        \"professeur_classes_classe\",\n        \"pcc\",\n        \"pcc.professeurId = professeur.id\",\n      )\n      .innerJoin(\"eleve\", \"eleve\", \"eleve.idClasse = pcc.classeId\")\n      .where(\"eleve.id = :eleveId\", { eleveId })\n      .getRawMany();\n\n    const moyennesParMatiere = [];\n    let sommeCoefTotale = 0;\n    let sommePondereeTotale = 0;\n    let pasDeNote = true; // Indique si l'élève n'a pas de notes\n\n    for (const prof of professeurs) {\n      // Récupérer les notes dé l'élève pour ce professeur\n      const notes = await this.noteRepository\n        .createQueryBuilder(\"note\")\n        .select([\n          \"matiere.id as idMatiere\",\n          \"matiere.nom as nomMatiere\",\n          \"SUM(note.coef) as sommeCoef\",\n          \"SUM(note.coef * note.note) as sommePonderee\",\n          \"professeur.id as idProfesseur\",\n          \"professeur.prenom as prenomProfesseur\",\n          \"professeur.nom as nomProfesseur\",\n        ])\n        .innerJoin(\"note.id_professeur\", \"professeur\") // Jointure avec la table des professeurs\n        .innerJoin(\"professeur.id_matiere\", \"matiere\") // Jointure avec la table des matières\n        .where(\"note.id_eleve = :idEleve\", { idEleve: eleveId }) // Filtre par l'ID de l'élève\n        .andWhere(\"note.id_professeur = :profId\", { profId: prof.idProfesseur })\n        .groupBy(\n          \"matiere.nom, professeur.id, professeur.prenom, professeur.nom\",\n        ) // Groupement par matière et professeur\n        .getRawMany(); // Récupération des résultats au format brut\n\n      const matiere = await this.professeurRepository\n        .createQueryBuilder(\"professeur\")\n        .select([\"matiere.id as idMatiere\", \"matiere.nom as nomMatiere\"])\n        .innerJoin(\"professeur.id_matiere\", \"matiere\")\n        .where(\"professeur.id = :professeurId\", {\n          professeurId: prof.idProfesseur,\n        })\n        .getRawOne();\n\n      if (notes.length > 0) {\n        // L'élève a des notes pour cette matière\n        moyennesParMatiere.push({\n          idMatiere: notes[0].idMatiere,\n          nomMatiere: notes[0].nomMatiere,\n          // eslint-disable-next-line prettier/prettier\n          moyenne:\n            parseFloat(notes[0]?.sommePonderee) /\n            parseFloat(notes[0].sommeCoef),\n          nomProfesseur: prof.nomProfesseur,\n          prenomProfesseur: prof.prenomProfesseur,\n        });\n\n        // Mettre à jour les sommes des coefficients et des pondérations\n        if (!isNaN(parseFloat(notes[0]?.sommeCoef))) {\n          sommeCoefTotale += parseFloat(notes[0]?.sommeCoef);\n        }\n\n        if (!isNaN(parseFloat(notes[0]?.sommePonderee))) {\n          sommePondereeTotale += parseFloat(notes[0]?.sommePonderee);\n        }\n\n        pasDeNote = false; // Il y a des notes\n      } else {\n        // L'élève n'a pas de note pour cette matière\n        moyennesParMatiere.push({\n          idMatiere: matiere.idMatiere,\n          nomMatiere: matiere.nomMatiere,\n          moyenne: \"pas de note\",\n          nomProfesseur: prof.nomProfesseur,\n          prenomProfesseur: prof.prenomProfesseur,\n        });\n      }\n    }\n\n    let moyenneGenerale;\n\n    if (moyennesParMatiere.length > 0) {\n      if (sommeCoefTotale !== 0) {\n        moyenneGenerale = sommePondereeTotale / sommeCoefTotale;\n      } else {\n        if (pasDeNote) {\n          moyenneGenerale = \"pas de note\";\n        } else {\n          moyenneGenerale = 0;\n        }\n      }\n    } else {\n      // L'élève n'a pas de notes du tout\n      moyenneGenerale = \"pas de note\";\n    }\n\n    return {\n      moyennesParMatiere,\n      moyenneGenerale,\n    };\n  }\n\n  async getMoyennesByProfesseur(professeurId: string): Promise {\n    // Récupérer les classes enseignées par le professeur\n    const classesEnseignees = await this.classeRepository\n      .createQueryBuilder(\"classe\")\n      .innerJoin(\"classe.professeurs\", \"professeur\")\n      .where(\"professeur.id = :professeurId\", { professeurId })\n      .getMany();\n\n    // Tableau pour stocker les moyennes par classe\n    const moyennesParClasse = [];\n\n    // Pour chaque classe enseignée par le professeur\n    for (const classe of classesEnseignees) {\n      // Récupérer les élèves de la classe\n      const elevesClasse = await this.classeRepository\n        .createQueryBuilder(\"classe\")\n        .innerJoinAndSelect(\"classe.eleves\", \"eleve\")\n        .where(\"classe.id = :classeId\", { classeId: classe.id })\n        .getOne();\n\n      // Vérifier s'il y a des élèves dans la classe\n      if (!elevesClasse) {\n        moyennesParClasse.push({\n          idClasse: classe.id,\n          nomClasse: classe.nom,\n          moyenneClasse: \"classe vide\", //0ab282a8-732d-11ee-b709-0242ac190002\n        });\n        continue; // Passer à la classe suivante si aucun élève\n      }\n\n      // Obtenir les IDs des élèves de la classe\n      const eleveIds = elevesClasse.eleves.map((eleve) => eleve.id);\n\n      // Récupérer les notes des élèves de la classe enseignée par le professeur\n      const notesEleves = await this.noteRepository\n        .createQueryBuilder(\"note\") // Crée un query builder pour l'entité 'note'\n        .where(\"note.id_eleve IN (:...eleveIds)\", { eleveIds }) // Filtre les notes en fonction des IDs d'élèves fournis\n        .andWhere(\"note.id_professeur = :professeurId\", { professeurId }) // Filtre les notes en fonction de l'ID du professeur\n        .getMany(); // Exécute la requête et récupère les résultats sous forme de tableau\n\n      let moyenneClasse; // Variable pour stocker la moyenne de la classe\n\n      // Vérifie s'il y a des notes pour les élèves de la classe\n      if (notesEleves.length > 0) {\n        // Calculer la moyenne de la classe\n        const totalCoef = notesEleves.reduce((sum, note) => sum + note.coef, 0); // Calcule la somme des coefficients des notes\n        // eslint-disable-next-line prettier/prettier\n        const totalPonderee = notesEleves.reduce(\n          (sum, note) => sum + note.coef * note.note,\n          0,\n        ); // Calcule la somme pondérée des notes\n        moyenneClasse = totalCoef !== 0 ? totalPonderee / totalCoef : 0; // Calcule la moyenne pondérée si les coefficients sont non nuls, sinon renvoie 0\n      } else {\n        moyenneClasse = \"pas de note\"; // Affecte 'pas de note' si aucune note n'a été trouvée pour les élèves de la classe\n      }\n\n      // Stocker les informations de moyenne par classe dans le tableau\n      moyennesParClasse.push({\n        idClasse: classe.id,\n        nomClasse: classe.nom,\n        moyenneClasse,\n      });\n    }\n    // Récupérer l'id et le nom de la matière qu'enseigne le professeur\n    const matiere = await this.professeurRepository\n      .createQueryBuilder(\"professeur\")\n      .select([\"matiere.id as idMatiere\", \"matiere.nom as nomMatiere\"])\n      .innerJoin(\"professeur.id_matiere\", \"matiere\")\n      .where(\"professeur.id = :professeurId\", { professeurId })\n      .getRawOne();\n\n    moyennesParClasse.push({\n      idMatiere: matiere.idMatiere,\n      nomMatiere: matiere.nomMatiere,\n    });\n\n    // Retourner les moyennes par classe\n    return moyennesParClasse;\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  async calculerMoyenneClasseEleveByProfesseur(\n    classeId: number,\n    professeurId: string,\n  ): Promise {\n    // Récupérer les élèves de la classe donnée\n    const eleves = await this.eleveRepository.find({\n      where: {\n        id_classe: { id: classeId }, // Filtrer par l'ID de la classe\n      },\n    });\n    const numericIdProfesseur = parseInt(professeurId, 10);\n    // Calculer les moyennes pour chaque élève\n    const moyennesEleves = await Promise.all(\n      eleves.map(async (eleve) => {\n        // Récupérer les notes de l'élève pour le professeur donné\n        const notes = await this.noteRepository.find({\n          where: {\n            id_eleve: { id: eleve.id }, // Filtrer par l'ID de l'élève\n            id_professeur: { id: numericIdProfesseur }, // Filtrer par l'ID du professeur\n          },\n        });\n\n        let moyenne; // Variable pour stocker la moyenne de l'élève\n\n        if (notes.length > 0) {\n          // Calculer la moyenne pour l'élève\n          const totalCoef = notes.reduce((sum, note) => sum + note.coef, 0); // Calcule la somme des coefficients des notes\n          // eslint-disable-next-line prettier/prettier\n          const totalPonderee = notes.reduce(\n            (sum, note) => sum + note.coef * note.note,\n            0,\n          ); // Calcule la somme pondérée des notes\n          moyenne = totalCoef !== 0 ? totalPonderee / totalCoef : 0; // Calcule la moyenne pondérée si les coefficients sont non nuls, sinon renvoie 0\n        } else {\n          moyenne = \"pas de note\"; // Affecte 'pas de note' si aucune note n'a été trouvée pour l'élève\n        }\n\n        return {\n          idEleve: eleve.id, // ID de l'élève\n          nomEleve: eleve.nom, // Nom de l'élève\n          prenomEleve: eleve.prenom, // Prénom de l'élève\n          moyenne, // Moyenne de l'élève\n        };\n      }),\n    );\n\n    return moyennesEleves; // Retourner les moyennes pour chaque élève\n  }\n  // eslint-disable-next-line prettier/prettier\n  async create(createNoteDto: CreateNoteDto, professeurId: string): Promise {\n    // Extraction des propriétés du DTO\n    const { coef, nom, eleves } = createNoteDto;\n\n    // Vérifier s'il y a des notes nulles ou non définies\n    // eslint-disable-next-line prettier/prettier\n    const hasNullNote = eleves.some(\n      (eleveData) => eleveData.note === null || eleveData.note === undefined,\n    );\n    if (hasNullNote) {\n      // Lancer une exception BadRequest si des notes sont nulles ou non définies\n      throw new BadRequestException({\n        message: \"Toutes les notes doivent être renseignées.\",\n      });\n    }\n\n    // Vérifier si une note est négative\n    const hasNegativeNote = eleves.some((eleveData) => eleveData.note  eleveData.note > 20);\n    if (hasInvalidNote) {\n      // Lancer une exception BadRequest si une note est supérieure à 20\n      throw new BadRequestException({\n        message: \"La note ne peut pas être supérieure à 20.\",\n      });\n    }\n\n    // Création des notes en parallèle\n    const notes = await Promise.all(\n      eleves.map(async (eleveData) => {\n        // Recherche de l'élève correspondant à l'ID\n        const eleve = await this.eleveService.findOne(eleveData.idEleve);\n\n        if (!eleve) {\n          // Lancer une exception NotFound si l'élève n'est pas trouvé\n          throw new NotFoundException(\n            `Élève non trouvé avec l'ID ${eleveData.idEleve}`,\n          );\n        }\n\n        // Recherche du professeur correspondant à l'ID\n        const professeur = await this.professeurService.findOne(professeurId);\n\n        if (!professeur) {\n          // Lancer une exception NotFound si le professeur n'est pas trouvé\n          throw new NotFoundException(\"Professeur non trouvé\");\n        }\n\n        // Création d'une nouvelle note\n        const note = new Note();\n        note.nom = nom;\n        note.coef = coef;\n        note.note = eleveData.note;\n        note.id_professeur = professeur;\n        note.id_eleve = eleve;\n        return note;\n      }),\n    );\n\n    // Sauvegarde des notes dans la base de données\n    await this.noteRepository.save(notes);\n  }\n\n  update(id: number, updateNoteDto: UpdateNoteDto) {\n    return `This action updates a #${id} note`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} note`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Parent.html":{"url":"entities/Parent.html","title":"entity - Parent","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Parent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/parent/entities/parent.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                eleves\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        eleves\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Eleve[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, eleve => eleve.id_parent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/parent/entities/parent.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Eleve } from \"src/eleve/entities/eleve.entity\";\nimport { Utilisateur } from \"src/utilisateur/entities/utilisateur.entity\";\nimport { Entity, OneToMany } from \"typeorm\";\n\n@Entity()\nexport class Parent extends Utilisateur {\n  @OneToMany(() => Eleve, (eleve) => eleve.id_parent)\n  eleves: Eleve[];\n\n  getEleves(): Eleve[] {\n    return this.eleves;\n  }\n\n  setEleves(eleves: Eleve[]): void {\n    this.eleves = eleves;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ParentController.html":{"url":"controllers/ParentController.html","title":"controller - ParentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ParentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/parent/parent.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                parent\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                CryptmdpParent\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        CryptmdpParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    CryptmdpParent()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/crypt/mdp')@ApiOkResponse({description: 'Mot de passe du parent crypté avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/parent/parent.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Liste des parents récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/parent/parent.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { ApiTags, ApiOkResponse } from \"@nestjs/swagger\";\nimport { ParentService } from \"./parent.service\";\n\n@ApiTags('Parent')\n@Controller(\"parent\")\nexport class ParentController {\n  constructor(private readonly parentService: ParentService) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Liste des parents récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findAll() {\n    return this.parentService.findAll();\n  }\n\n  @Get(\"/crypt/mdp\")\n  @ApiOkResponse({ description: 'Mot de passe du parent crypté avec succès.' }) // Ajouter une réponse Swagger pour le cryptage réussi\n  async CryptmdpParent() {\n    return this.parentService.CryptMDPParent();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ParentModule.html":{"url":"modules/ParentModule.html","title":"module - ParentModule","body":"\n                   \n\n\n\n\n    Modules\n    ParentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ParentModule\n\n\n\ncluster_ParentModule_providers\n\n\n\n\nParentService\n\nParentService\n\n\n\nParentModule\n\nParentModule\n\nParentModule -->\n\nParentService->ParentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/parent/parent.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ParentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ParentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ParentService } from \"./parent.service\";\nimport { ParentController } from \"./parent.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Parent } from \"./entities/parent.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Parent])],\n  controllers: [ParentController],\n  providers: [ParentService],\n})\nexport class ParentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParentService.html":{"url":"injectables/ParentService.html","title":"injectable - ParentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/parent/parent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CryptMDPParent\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/parent/parent.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CryptMDPParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    CryptMDPParent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/parent/parent.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/parent/parent.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/parent/parent.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Parent } from \"./entities/parent.entity\";\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class ParentService {\n  constructor(\n    @InjectRepository(Parent)\n    private readonly parentRepository: Repository,\n  ) {}\n\n  findAll() {\n    return `This action returns all parent`;\n  }\n\n  async CryptMDPParent() {\n    const parents = await this.parentRepository.find();\n    for (const parent of parents) {\n      const hashedPassword = await this.hashPassword(parent.motDePasse);\n      parent.motDePasse = hashedPassword;\n      await this.parentRepository.save(parent);\n    }\n  }\n\n  // Fonction pour hacher un mot de passe\n  async hashPassword(password: string): Promise {\n    const hashedPassword = await bcrypt.hash(password, 10);\n    return hashedPassword;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Professeur.html":{"url":"entities/Professeur.html","title":"entity - Professeur","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Professeur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professeur/entities/professeur.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classes\n                            \n                            \n                                    \n                                    \n                                id_matiere\n                            \n                            \n                                    \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Classe[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, classe => classe.professeurs)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/professeur/entities/professeur.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_matiere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Matiere\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, matiere => matiere.professeur)@JoinColumn({name: 'idMatiere'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/professeur/entities/professeur.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Note[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, note => note.id_professeur)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/professeur/entities/professeur.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Classe } from \"src/classe/entities/classe.entity\";\nimport { Matiere } from \"src/matiere/entities/matiere.entity\";\nimport { Note } from \"src/note/entities/note.entity\";\nimport { Utilisateur } from \"src/utilisateur/entities/utilisateur.entity\";\n// eslint-disable-next-line prettier/prettier\nimport {Entity, OneToMany, ManyToOne, JoinTable, ManyToMany, JoinColumn} from \"typeorm\";\n\n@Entity()\nexport class Professeur extends Utilisateur {\n  @ManyToOne(() => Matiere, (matiere) => matiere.professeur)\n  @JoinColumn({ name: \"idMatiere\" })\n  // eslint-disable-next-line camelcase\n  id_matiere: Matiere;\n\n  @ManyToMany(() => Classe, (classe) => classe.professeurs)\n  @JoinTable()\n  classes: Classe[];\n\n  @OneToMany(() => Note, (note) => note.id_professeur)\n  notes: Note[];\n\n  getmatiere(): Matiere {\n    return this.id_matiere;\n  }\n\n  // eslint-disable-next-line camelcase\n  setmatiere(id_matiere: Matiere): void {\n    // eslint-disable-next-line camelcase\n    this.id_matiere = id_matiere;\n  }\n\n  getClasses(): Classe[] {\n    return this.classes;\n  }\n\n  setClasses(classes: Classe[]): void {\n    this.classes = classes;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n\n  setNotes(notes: Note[]): void {\n    this.notes = notes;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfesseurController.html":{"url":"controllers/ProfesseurController.html","title":"controller - ProfesseurController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfesseurController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professeur/professeur.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                professeur\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                CryptmdpProfesseur\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findMatiereofProfesseur\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        CryptmdpProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    CryptmdpProfesseur()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/crypt/mdp')@ApiOkResponse({description: 'Mot de passe du professeur crypté avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/professeur/professeur.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Liste des professeurs récupérée avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/professeur/professeur.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findMatiereofProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMatiereofProfesseur(idProfesseur: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('matiereId/:idProfesseur')@ApiParam({name: 'idProfesseur', description: 'ID du professeur'})@ApiOkResponse({description: 'ID de la matière du professeur récupéré avec succès.'})\n                \n            \n\n                    \n                        \n                            Defined in src/professeur/professeur.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idProfesseur\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', description: 'ID du professeur'})@ApiOkResponse({description: 'Détails du professeur récupérés avec succès.'})@ApiNotFoundResponse({description: 'Professeur non trouvé.'})\n                \n            \n\n                    \n                        \n                            Defined in src/professeur/professeur.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', description: 'ID du professeur'})@ApiOkResponse({description: 'Le professeur a été supprimé avec succès.'})@ApiNotFoundResponse({description: 'Professeur non trouvé.'})@ApiNoContentResponse({description: 'Aucun contenu. Le professeur a déjà été supprimé.'})\n                \n            \n\n                    \n                        \n                            Defined in src/professeur/professeur.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Delete } from \"@nestjs/common\";\nimport { ApiTags, ApiParam, ApiOkResponse, ApiNotFoundResponse, ApiNoContentResponse } from \"@nestjs/swagger\";\nimport { ProfesseurService } from \"./professeur.service\";\n\n@ApiTags('Professeur')\n@Controller(\"professeur\")\nexport class ProfesseurController {\n  constructor(private readonly professeurService: ProfesseurService) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Liste des professeurs récupérée avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findAll() {\n    return this.professeurService.findAll();\n  }\n\n  @Get(\":id\")\n  @ApiParam({ name: 'id', description: 'ID du professeur' })\n  @ApiOkResponse({ description: 'Détails du professeur récupérés avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  @ApiNotFoundResponse({ description: 'Professeur non trouvé.' }) // Ajouter une réponse Swagger pour le professeur non trouvé\n  findOne(@Param(\"id\") id: string) {\n    return this.professeurService.findOne(id);\n  }\n\n  @Get(\"matiereId/:idProfesseur\")\n  @ApiParam({ name: 'idProfesseur', description: 'ID du professeur' })\n  @ApiOkResponse({ description: 'ID de la matière du professeur récupéré avec succès.' }) // Ajouter une réponse Swagger pour la récupération réussie\n  findMatiereofProfesseur(@Param(\"idProfesseur\") idProfesseur: number) {\n    return this.professeurService.findMatiereofProfesseur(idProfesseur);\n  }\n\n  @Delete(\":id\")\n  @ApiParam({ name: 'id', description: 'ID du professeur' })\n  @ApiOkResponse({ description: 'Le professeur a été supprimé avec succès.' }) // Ajouter une réponse Swagger pour la suppression réussie\n  @ApiNotFoundResponse({ description: 'Professeur non trouvé.' }) // Ajouter une réponse Swagger pour le professeur non trouvé\n  @ApiNoContentResponse({ description: 'Aucun contenu. Le professeur a déjà été supprimé.' }) // Ajouter une réponse Swagger pour l'absence de contenu lors de la suppression\n  remove(@Param(\"id\") id: string) {\n    return this.professeurService.remove(+id);\n  }\n\n  @Get(\"/crypt/mdp\")\n  @ApiOkResponse({ description: 'Mot de passe du professeur crypté avec succès.' }) // Ajouter une réponse Swagger pour le cryptage réussi\n  async CryptmdpProfesseur() {\n    return this.professeurService.CryptMDPProfesseur();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ProfesseurGuard.html":{"url":"guards/ProfesseurGuard.html","title":"guard - ProfesseurGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ProfesseurGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/professeur/professeur.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/professeur/professeur.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Injectable()\nexport class ProfesseurGuard implements CanActivate {\n  // eslint-disable-next-line no-unused-vars\n  constructor(private readonly jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const authHeader = request.headers[\"authorization\"];\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n      return false;\n    }\n\n    const token = authHeader.split(\" \")[1];\n    try {\n      const user = this.jwtService.verify(token);\n      const professeurId = request.params.professeurId;\n\n      // eslint-disable-next-line eqeqeq\n      if (user && user.role === 1 && user.id == professeurId) {\n        return true;\n      }\n\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfesseurModule.html":{"url":"modules/ProfesseurModule.html","title":"module - ProfesseurModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfesseurModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfesseurModule\n\n\n\ncluster_ProfesseurModule_providers\n\n\n\n\nProfesseurService\n\nProfesseurService\n\n\n\nProfesseurModule\n\nProfesseurModule\n\nProfesseurModule -->\n\nProfesseurService->ProfesseurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/professeur/professeur.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfesseurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfesseurController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ProfesseurService } from \"./professeur.service\";\nimport { ProfesseurController } from \"./professeur.controller\";\nimport { Professeur } from \"./entities/professeur.entity\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { secretOrKey } from \"src/auth/secret\";\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: secretOrKey,\n      signOptions: { expiresIn: \"1h\" },\n    }),\n    TypeOrmModule.forFeature([Professeur]),\n  ],\n  controllers: [ProfesseurController],\n  providers: [ProfesseurService],\n})\nexport class ProfesseurModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfesseurService.html":{"url":"injectables/ProfesseurService.html","title":"injectable - ProfesseurService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfesseurService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professeur/professeur.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CryptMDPProfesseur\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMatiereofProfesseur\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(professeurRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/professeur/professeur.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        professeurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CryptMDPProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    CryptMDPProfesseur()\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMatiereofProfesseur\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMatiereofProfesseur(idProfesseur: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idProfesseur\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/professeur/professeur.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Professeur } from \"./entities/professeur.entity\";\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class ProfesseurService {\n  constructor(\n    @InjectRepository(Professeur)\n    private readonly professeurRepository: Repository,\n  ) {}\n\n  async findAll() {\n    const professeur = await this.professeurRepository.find();\n    return professeur;\n  }\n\n  async findMatiereofProfesseur(idProfesseur: number) {\n    const professeur = await this.professeurRepository\n      .createQueryBuilder(\"professeur\")\n      .select(\"professeur.idMatiere\")\n      .where(\"professeur.id = :id\", { id: idProfesseur })\n      .getRawOne();\n    return professeur.idMatiere;\n  }\n\n  findOne(id: string) {\n    const numericId = parseInt(id, 10); // Convertit la chaîne \"id\" en nombre\n    return this.professeurRepository.findOne({\n      where: { id: numericId },\n    });\n  }\n\n  async CryptMDPProfesseur() {\n    const professeurs = await this.professeurRepository.find();\n    for (const professeur of professeurs) {\n      const hashedPassword = await this.hashPassword(professeur.motDePasse);\n      professeur.motDePasse = hashedPassword;\n      await this.professeurRepository.save(professeur);\n    }\n  }\n\n  // Fonction pour hacher un mot de passe\n  async hashPassword(password: string): Promise {\n    const hashedPassword = await bcrypt.hash(password, 10);\n    return hashedPassword;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} professeur`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClasseDto.html":{"url":"classes/UpdateClasseDto.html","title":"class - UpdateClasseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClasseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classe/dto/update-classe.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateClasseDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateClasseDto } from \"./create-classe.dto\";\n\nexport class UpdateClasseDto extends PartialType(CreateClasseDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEleveDto.html":{"url":"classes/UpdateEleveDto.html","title":"class - UpdateEleveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEleveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/eleve/dto/update-eleve.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateEleveDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateEleveDto } from \"./create-eleve.dto\";\n\nexport class UpdateEleveDto extends PartialType(CreateEleveDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMatiereDto.html":{"url":"classes/UpdateMatiereDto.html","title":"class - UpdateMatiereDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMatiereDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/matiere/dto/update-matiere.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateMatiereDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateMatiereDto } from \"./create-matiere.dto\";\n\nexport class UpdateMatiereDto extends PartialType(CreateMatiereDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNoteDto.html":{"url":"classes/UpdateNoteDto.html","title":"class - UpdateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/note/dto/update-note.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateNoteDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateNoteDto } from \"./create-note.dto\";\n\nexport class UpdateNoteDto extends PartialType(CreateNoteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateParentDto.html":{"url":"classes/UpdateParentDto.html","title":"class - UpdateParentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateParentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/parent/dto/update-parent.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateParentDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateParentDto } from \"./create-parent.dto\";\n\nexport class UpdateParentDto extends PartialType(CreateParentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfesseurDto.html":{"url":"classes/UpdateProfesseurDto.html","title":"class - UpdateProfesseurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfesseurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professeur/dto/update-professeur.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProfesseurDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateProfesseurDto } from \"./create-professeur.dto\";\n\nexport class UpdateProfesseurDto extends PartialType(CreateProfesseurDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto.html":{"url":"classes/UpdateUtilisateurDto.html","title":"class - UpdateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/update-utilisateur.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUtilisateurDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateUtilisateurDto } from \"./create-utilisateur.dto\";\n\nexport class UpdateUtilisateurDto extends PartialType(CreateUtilisateurDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Utilisateur.html":{"url":"entities/Utilisateur.html","title":"entity - Utilisateur","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/entities/utilisateur.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                motDePasse\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/entities/utilisateur.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/entities/utilisateur.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        motDePasse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/entities/utilisateur.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/entities/utilisateur.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/entities/utilisateur.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/entities/utilisateur.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity()\nexport class Utilisateur {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: number;\n\n  @Column()\n  nom: string;\n\n  @Column()\n  prenom: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  motDePasse: string;\n\n  @Column()\n  role: number;\n\n  getNom(): string {\n    return this.nom;\n  }\n\n  setNom(nom: string): void {\n    this.nom = nom;\n  }\n\n  getPrenom(): string {\n    return this.prenom;\n  }\n\n  setPrenom(prenom: string): void {\n    this.prenom = prenom;\n  }\n\n  getEmail(): string {\n    return this.email;\n  }\n\n  setEmail(email: string): void {\n    this.email = email;\n  }\n\n  getMotDePasse(): string {\n    return this.motDePasse;\n  }\n\n  setMotDePasse(motDePasse: string): void {\n    this.motDePasse = motDePasse;\n  }\n\n  getRole(): number {\n    return this.role;\n  }\n\n  setRole(role: number): void {\n    this.role = role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UtilisateurController.html":{"url":"controllers/UtilisateurController.html","title":"controller - UtilisateurController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UtilisateurController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/utilisateur.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                utilisateur\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\n// import { UtilisateurService } from './utilisateur.service';\n// import { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\n// import { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\n\n@Controller(\"utilisateur\")\nexport class UtilisateurController {\n  constructor() {}\n\n  // @Post()\n  // create(@Body() createUtilisateurDto: CreateUtilisateurDto) {\n  //   return this.utilisateurService.create(createUtilisateurDto);\n  // }\n\n  // @Get()\n  // findAll() {\n  //   return this.utilisateurService.findAll();\n  // }\n\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.utilisateurService.findOne(+id);\n  // }\n\n  // @Patch(':id')\n  // update(@Param('id') id: string, @Body() updateUtilisateurDto: UpdateUtilisateurDto) {\n  //   return this.utilisateurService.update(+id, updateUtilisateurDto);\n  // }\n\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.utilisateurService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilisateurModule.html":{"url":"modules/UtilisateurModule.html","title":"module - UtilisateurModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilisateurModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_providers\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilisateur/utilisateur.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UtilisateurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UtilisateurController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UtilisateurService } from \"./utilisateur.service\";\nimport { UtilisateurController } from \"./utilisateur.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Utilisateur } from \"./entities/utilisateur.entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Utilisateur])],\n  controllers: [UtilisateurController],\n  providers: [UtilisateurService],\n})\nexport class UtilisateurModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilisateurService.html":{"url":"injectables/UtilisateurService.html","title":"injectable - UtilisateurService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilisateurService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/utilisateur.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utilisateur/utilisateur.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class UtilisateurService {\n  constructor() {}\n\n  // create(createUtilisateurDto: CreateUtilisateurDto) {\n  //   return 'This action adds a new utilisateur';\n  // }\n\n  // findAll() {\n  //   return `This action returns all utilisateur`;\n  // }\n\n  // findOne(id: number) {\n  //   return `This action returns a #${id} utilisateur`;\n  // }\n\n  // update(id: number, updateUtilisateurDto: UpdateUtilisateurDto) {\n  //   return `This action updates a #${id} utilisateur`;\n  // }\n\n  // remove(id: number) {\n  //   return `This action removes a #${id} utilisateur`;\n  // }\n\n  // findOneByEmailAndMotDePasse(email: string, motDePasse: string) {\n  //   return this.utilisateurRepository.findOne({ where: { email, motDePasse } });\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/secret.ts\n            \n            variable\n            generateRandomKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/secret.ts\n            \n            variable\n            secretOrKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/classe/classe.controller.ts\n            \n            controller\n            ClasseController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/classe/classe.service.ts\n            \n            injectable\n            ClasseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/classe/dto/create-classe.dto.ts\n            \n            class\n            CreateClasseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/classe/dto/update-classe.dto.ts\n            \n            class\n            UpdateClasseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/classe/entities/classe.entity.ts\n            \n            entity\n            Classe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/eleve/dto/create-eleve.dto.ts\n            \n            class\n            CreateEleveDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/eleve/dto/update-eleve.dto.ts\n            \n            class\n            UpdateEleveDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/eleve/eleve-moyenne/eleve-moyenne.guard.ts\n            \n            guard\n            EleveMoyenneGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/eleve/eleve-note/eleve-note.guard.ts\n            \n            guard\n            EleveNoteGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/eleve/eleve.controller.ts\n            \n            controller\n            EleveController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/eleve/eleve.service.ts\n            \n            injectable\n            EleveService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/eleve/entities/eleve.entity.ts\n            \n            entity\n            Eleve\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/matiere/dto/create-matiere.dto.ts\n            \n            class\n            CreateMatiereDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/matiere/dto/update-matiere.dto.ts\n            \n            class\n            UpdateMatiereDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/matiere/entities/matiere.entity.ts\n            \n            entity\n            Matiere\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/matiere/matiere.controller.ts\n            \n            controller\n            MatiereController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/matiere/matiere.service.ts\n            \n            injectable\n            MatiereService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/note/dto/create-note.dto.ts\n            \n            class\n            CreateNoteDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/note/dto/update-note.dto.ts\n            \n            class\n            UpdateNoteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/note/entities/note.entity.ts\n            \n            entity\n            Note\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/note/note.controller.ts\n            \n            controller\n            NoteController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/note/note.service.ts\n            \n            injectable\n            NoteService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/parent/dto/create-parent.dto.ts\n            \n            class\n            CreateParentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/parent/dto/update-parent.dto.ts\n            \n            class\n            UpdateParentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/parent/entities/parent.entity.ts\n            \n            entity\n            Parent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/parent/parent.controller.ts\n            \n            controller\n            ParentController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/parent/parent.service.ts\n            \n            injectable\n            ParentService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/professeur/dto/create-professeur.dto.ts\n            \n            class\n            CreateProfesseurDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/professeur/dto/update-professeur.dto.ts\n            \n            class\n            UpdateProfesseurDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/professeur/entities/professeur.entity.ts\n            \n            entity\n            Professeur\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/professeur/professeur.controller.ts\n            \n            controller\n            ProfesseurController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/professeur/professeur.guard.ts\n            \n            guard\n            ProfesseurGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/professeur/professeur.service.ts\n            \n            injectable\n            ProfesseurService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/swagger/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/entities/utilisateur.entity.ts\n            \n            entity\n            Utilisateur\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/utilisateur.controller.ts\n            \n            controller\n            UtilisateurController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/utilisateur.service.ts\n            \n            injectable\n            UtilisateurService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            dotenv : ^16.3.1\n        \n            mysql : ^2.18.1\n        \n            mysql2 : ^3.6.5\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.0\n        \n            typeorm : ^0.3.17\n        \n            uuid : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClasseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EleveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatiereModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ParentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfesseurModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilisateurModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ClasseModule\n\n\n\ncluster_ClasseModule_providers\n\n\n\ncluster_EleveModule\n\n\n\ncluster_EleveModule_providers\n\n\n\ncluster_MatiereModule\n\n\n\ncluster_MatiereModule_providers\n\n\n\ncluster_NoteModule\n\n\n\ncluster_NoteModule_providers\n\n\n\ncluster_ParentModule\n\n\n\ncluster_ParentModule_providers\n\n\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClasseModule\n\nClasseModule\n\nAppModule -->\n\nClasseModule->AppModule\n\n\n\n\n\nEleveModule\n\nEleveModule\n\nAppModule -->\n\nEleveModule->AppModule\n\n\n\n\n\nMatiereModule\n\nMatiereModule\n\nAppModule -->\n\nMatiereModule->AppModule\n\n\n\n\n\nNoteModule\n\nNoteModule\n\nAppModule -->\n\nNoteModule->AppModule\n\n\n\n\n\nParentModule\n\nParentModule\n\nAppModule -->\n\nParentModule->AppModule\n\n\n\n\n\nProfesseurModule\n\nProfesseurModule\n\nAppModule -->\n\nProfesseurModule->AppModule\n\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nClasseService\n\nClasseService\n\nClasseModule -->\n\nClasseService->ClasseModule\n\n\n\n\n\nEleveService\n\nEleveService\n\nEleveModule -->\n\nEleveService->EleveModule\n\n\n\nNoteModule -->\n\nEleveService->NoteModule\n\n\n\n\n\nMatiereService\n\nMatiereService\n\nMatiereModule -->\n\nMatiereService->MatiereModule\n\n\n\nNoteModule -->\n\nMatiereService->NoteModule\n\n\n\n\n\nNoteService\n\nNoteService\n\nNoteModule -->\n\nNoteService->NoteModule\n\n\n\n\n\nProfesseurService\n\nProfesseurService\n\nNoteModule -->\n\nProfesseurService->NoteModule\n\n\n\nProfesseurModule -->\n\nProfesseurService->ProfesseurModule\n\n\n\n\n\nParentService\n\nParentService\n\nParentModule -->\n\nParentService->ParentModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            generateRandomKey   (src/.../secret.ts)\n                        \n                        \n                            secretOrKey   (src/.../secret.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/secret.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateRandomKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return crypto.randomBytes(32).toString(\"hex\");\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretOrKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : generateRandomKey()\n                    \n                \n\n\n        \n    \n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle('API GradeMaster')\n    .setDescription('Description de l\\'API GradeMaster')\n    .setVersion('1.0')\n    .addTag('api')\n    .build();\n\n  const document = SwaggerModule.createDocument(app, options);\n\n  SwaggerModule.setup('swagger', app, document);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
